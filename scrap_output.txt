Leetcode Api Result 


{'is_paid': False, 'frequency_mid': 0, 'ac_easy': 0, 'num_total': 569, 'category_slug': 'algorithms', 'frequency_high': 0, 'ac_medium': 0, 'num_solved': 0, 'ac_hard': 0, 'stat_status_pairs': [{'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximum Average Subarray II', 'question__title_slug': 'maximum-average-subarray-ii', 'total_acs': 1221, 'question__hide': False, 'question__article__slug': 'maximum-average-subarray-ii', 'total_submitted': 7114, 'question__article__live': True, 'is_new_question': True, 'question_id': 644}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximum Average Subarray I', 'question__title_slug': 'maximum-average-subarray-i', 'total_acs': 4534, 'question__hide': False, 'question__article__slug': 'maximum-average-subarray', 'total_submitted': 11508, 'question__article__live': True, 'is_new_question': True, 'question_id': 643}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Design Search Autocomplete System', 'question__title_slug': 'design-search-autocomplete-system', 'total_acs': 585, 'question__hide': False, 'question__article__slug': 'design-search-autocomplete-system', 'total_submitted': 2132, 'question__article__live': True, 'is_new_question': True, 'question_id': 642}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Solve the Equation', 'question__title_slug': 'solve-the-equation', 'total_acs': 2807, 'question__hide': False, 'question__article__slug': 'solve-the-equation', 'total_submitted': 7026, 'question__article__live': True, 'is_new_question': False, 'question_id': 640}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Decode Ways II', 'question__title_slug': 'decode-ways-ii', 'total_acs': 1598, 'question__hide': False, 'question__article__slug': 'decode-ways-ii', 'total_submitted': 7173, 'question__article__live': True, 'is_new_question': False, 'question_id': 639}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Shopping Offers', 'question__title_slug': 'shopping-offers', 'total_acs': 2115, 'question__hide': False, 'question__article__slug': 'shopping-offers', 'total_submitted': 5266, 'question__article__live': True, 'is_new_question': False, 'question_id': 638}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Average of Levels in Binary Tree', 'question__title_slug': 'average-of-levels-in-binary-tree', 'total_acs': 7136, 'question__hide': False, 'question__article__slug': 'average-of-levels', 'total_submitted': 12213, 'question__article__live': True, 'is_new_question': False, 'question_id': 637}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Exclusive Time of Functions', 'question__title_slug': 'exclusive-time-of-functions', 'total_acs': 1728, 'question__hide': False, 'question__article__slug': 'exclusive-time-of-functions', 'total_submitted': 4670, 'question__article__live': True, 'is_new_question': True, 'question_id': 636}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Design Log Storage System', 'question__title_slug': 'design-log-storage-system', 'total_acs': 2351, 'question__hide': False, 'question__article__slug': 'design-log-storage', 'total_submitted': 5049, 'question__article__live': True, 'is_new_question': False, 'question_id': 635}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Find the Derangement of An Array', 'question__title_slug': 'find-the-derangement-of-an-array', 'total_acs': 1573, 'question__hide': False, 'question__article__slug': 'find-derangements', 'total_submitted': 5113, 'question__article__live': True, 'is_new_question': False, 'question_id': 634}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sum of Square Numbers', 'question__title_slug': 'sum-of-square-numbers', 'total_acs': 5726, 'question__hide': False, 'question__article__slug': 'sum-of-square-numbers', 'total_submitted': 18216, 'question__article__live': True, 'is_new_question': False, 'question_id': 633}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Smallest Range', 'question__title_slug': 'smallest-range', 'total_acs': 2029, 'question__hide': False, 'question__article__slug': 'smallest-range', 'total_submitted': 4631, 'question__article__live': True, 'is_new_question': False, 'question_id': 632}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Design Excel Sum Formula', 'question__title_slug': 'design-excel-sum-formula', 'total_acs': 707, 'question__hide': False, 'question__article__slug': 'design-excel-sum-formula', 'total_submitted': 2999, 'question__article__live': True, 'is_new_question': False, 'question_id': 631}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Course Schedule III', 'question__title_slug': 'course-schedule-iii', 'total_acs': 1846, 'question__hide': False, 'question__article__slug': 'course-schedule-iii', 'total_submitted': 8158, 'question__article__live': True, 'is_new_question': False, 'question_id': 630}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'K Inverse Pairs Array', 'question__title_slug': 'k-inverse-pairs-array', 'total_acs': 2015, 'question__hide': False, 'question__article__slug': 'k-inverse-pairs-array', 'total_submitted': 8261, 'question__article__live': True, 'is_new_question': False, 'question_id': 629}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximum Product of Three Numbers', 'question__title_slug': 'maximum-product-of-three-numbers', 'total_acs': 9755, 'question__hide': False, 'question__article__slug': 'maximmum-product-of-three-numbers', 'total_submitted': 21568, 'question__article__live': True, 'is_new_question': False, 'question_id': 628}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Minimum Factorization', 'question__title_slug': 'minimum-factorization', 'total_acs': 2893, 'question__hide': False, 'question__article__slug': 'minimum-factorization', 'total_submitted': 9741, 'question__article__live': True, 'is_new_question': False, 'question_id': 625}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Maximum Distance in Arrays', 'question__title_slug': 'maximum-distance-in-arrays', 'total_acs': 6307, 'question__hide': False, 'question__article__slug': 'maximum-distance-in-array', 'total_submitted': 19125, 'question__article__live': True, 'is_new_question': False, 'question_id': 624}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Add One Row to Tree', 'question__title_slug': 'add-one-row-to-tree', 'total_acs': 5301, 'question__hide': False, 'question__article__slug': 'add-one-row-in-a-tree', 'total_submitted': 11079, 'question__article__live': True, 'is_new_question': False, 'question_id': 623}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Task Scheduler', 'question__title_slug': 'task-scheduler', 'total_acs': 4653, 'question__hide': False, 'question__article__slug': 'task-scheduler', 'total_submitted': 11168, 'question__article__live': True, 'is_new_question': False, 'question_id': 621}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Merge Two Binary Trees', 'question__title_slug': 'merge-two-binary-trees', 'total_acs': 18753, 'question__hide': False, 'question__article__slug': 'merge-two-binary-trees', 'total_submitted': 27140, 'question__article__live': True, 'is_new_question': False, 'question_id': 617}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Add Bold Tag in String', 'question__title_slug': 'add-bold-tag-in-string', 'total_acs': 2303, 'question__hide': False, 'question__article__slug': 'add-bold-tag-in-a-string', 'total_submitted': 6174, 'question__article__live': True, 'is_new_question': False, 'question_id': 616}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Valid Triangle Number', 'question__title_slug': 'valid-triangle-number', 'total_acs': 5402, 'question__hide': False, 'question__article__slug': 'valid-triangle-number', 'total_submitted': 13594, 'question__article__live': True, 'is_new_question': False, 'question_id': 611}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find Duplicate File in System', 'question__title_slug': 'find-duplicate-file-in-system', 'total_acs': 4496, 'question__hide': False, 'question__article__slug': 'find-duplicate', 'total_submitted': 8455, 'question__article__live': True, 'is_new_question': False, 'question_id': 609}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Construct String from Binary Tree', 'question__title_slug': 'construct-string-from-binary-tree', 'total_acs': 10823, 'question__hide': False, 'question__article__slug': 'construct-string-from-binary-tree', 'total_submitted': 21057, 'question__article__live': True, 'is_new_question': False, 'question_id': 606}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Can Place Flowers', 'question__title_slug': 'can-place-flowers', 'total_acs': 9916, 'question__hide': False, 'question__article__slug': 'can-place-flowers', 'total_submitted': 33075, 'question__article__live': True, 'is_new_question': False, 'question_id': 605}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Design Compressed String Iterator', 'question__title_slug': 'design-compressed-string-iterator', 'total_acs': 3100, 'question__hide': False, 'question__article__slug': 'desing-compressed-string-iterator', 'total_submitted': 9772, 'question__article__live': True, 'is_new_question': False, 'question_id': 604}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Non-negative Integers without Consecutive Ones', 'question__title_slug': 'non-negative-integers-without-consecutive-ones', 'total_acs': 2421, 'question__hide': False, 'question__article__slug': 'non-negative-integers-without-consecutive-ones', 'total_submitted': 8710, 'question__article__live': True, 'is_new_question': False, 'question_id': 600}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Index Sum of Two Lists', 'question__title_slug': 'minimum-index-sum-of-two-lists', 'total_acs': 10668, 'question__hide': False, 'question__article__slug': 'minimum-index-sum-of-two-lists', 'total_submitted': 22366, 'question__article__live': True, 'is_new_question': False, 'question_id': 599}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Range Addition II', 'question__title_slug': 'range-addition-ii', 'total_acs': 7380, 'question__hide': False, 'question__article__slug': 'range-addition-ii', 'total_submitted': 15162, 'question__article__live': True, 'is_new_question': False, 'question_id': 598}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Harmonious Subsequence', 'question__title_slug': 'longest-harmonious-subsequence', 'total_acs': 8185, 'question__hide': False, 'question__article__slug': 'longest-harmonious-subsequence', 'total_submitted': 20222, 'question__article__live': True, 'is_new_question': False, 'question_id': 594}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Valid Square', 'question__title_slug': 'valid-square', 'total_acs': 4771, 'question__hide': False, 'question__article__slug': 'valid-square', 'total_submitted': 12110, 'question__article__live': True, 'is_new_question': False, 'question_id': 593}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Fraction Addition and Subtraction', 'question__title_slug': 'fraction-addition-and-subtraction', 'total_acs': 3493, 'question__hide': False, 'question__article__slug': 'kill-process-3', 'total_submitted': 7506, 'question__article__live': True, 'is_new_question': False, 'question_id': 592}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Tag Validator', 'question__title_slug': 'tag-validator', 'total_acs': 1240, 'question__hide': False, 'question__article__slug': 'tag-validator', 'total_submitted': 4635, 'question__article__live': True, 'is_new_question': False, 'question_id': 591}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Design In-Memory File System', 'question__title_slug': 'design-in-memory-file-system', 'total_acs': 1410, 'question__hide': False, 'question__article__slug': 'design-in-memory-file-system', 'total_submitted': 4289, 'question__article__live': True, 'is_new_question': False, 'question_id': 588}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Erect the Fence', 'question__title_slug': 'erect-the-fence', 'total_acs': 1724, 'question__hide': False, 'question__article__slug': 'erect-the-fence', 'total_submitted': 5622, 'question__article__live': True, 'is_new_question': False, 'question_id': 587}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Delete Operation for Two Strings', 'question__title_slug': 'delete-operation-for-two-strings', 'total_acs': 5755, 'question__hide': False, 'question__article__slug': 'delete-operation-for-two-strings', 'total_submitted': 13006, 'question__article__live': True, 'is_new_question': False, 'question_id': 583}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Kill Process', 'question__title_slug': 'kill-process', 'total_acs': 5778, 'question__hide': False, 'question__article__slug': 'kill-process', 'total_submitted': 11999, 'question__article__live': True, 'is_new_question': False, 'question_id': 582}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Shortest Unsorted Continuous Subarray', 'question__title_slug': 'shortest-unsorted-continuous-subarray', 'total_acs': 11132, 'question__hide': False, 'question__article__slug': 'shortest-unsorted-continous-subarray', 'total_submitted': 37450, 'question__article__live': True, 'is_new_question': False, 'question_id': 581}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Out of Boundary Paths', 'question__title_slug': 'out-of-boundary-paths', 'total_acs': 3548, 'question__hide': False, 'question__article__slug': 'out-of-boundary-paths', 'total_submitted': 10758, 'question__article__live': True, 'is_new_question': False, 'question_id': 576}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Distribute Candies', 'question__title_slug': 'distribute-candies', 'total_acs': 17721, 'question__hide': False, 'question__article__slug': 'distribute-candies', 'total_submitted': 29774, 'question__article__live': True, 'is_new_question': False, 'question_id': 575}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Squirrel Simulation', 'question__title_slug': 'squirrel-simulation', 'total_acs': 2168, 'question__hide': False, 'question__article__slug': 'squirrel-simulation', 'total_submitted': 4224, 'question__article__live': True, 'is_new_question': False, 'question_id': 573}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Subtree of Another Tree', 'question__title_slug': 'subtree-of-another-tree', 'total_acs': 13581, 'question__hide': False, 'question__article__slug': 'subtree-of-another-tree', 'total_submitted': 33275, 'question__article__live': True, 'is_new_question': False, 'question_id': 572}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Maximum Vacation Days', 'question__title_slug': 'maximum-vacation-days', 'total_acs': 1909, 'question__hide': False, 'question__article__slug': 'maximum-vacation-days', 'total_submitted': 4766, 'question__article__live': True, 'is_new_question': False, 'question_id': 568}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Permutation in String', 'question__title_slug': 'permutation-in-string', 'total_acs': 7729, 'question__hide': False, 'question__article__slug': 'short-permutation-in-a-long-string', 'total_submitted': 21055, 'question__article__live': True, 'is_new_question': False, 'question_id': 567}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reshape the Matrix', 'question__title_slug': 'reshape-the-matrix', 'total_acs': 19927, 'question__hide': False, 'question__article__slug': 'reshape-the-matrix', 'total_submitted': 33382, 'question__article__live': True, 'is_new_question': False, 'question_id': 566}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Array Nesting', 'question__title_slug': 'array-nesting', 'total_acs': 6843, 'question__hide': False, 'question__article__slug': 'array-nesting', 'total_submitted': 13802, 'question__article__live': True, 'is_new_question': False, 'question_id': 565}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find the Closest Palindrome', 'question__title_slug': 'find-the-closest-palindrome', 'total_acs': 2179, 'question__hide': False, 'question__article__slug': 'find-the-closest-palindrome', 'total_submitted': 13136, 'question__article__live': True, 'is_new_question': False, 'question_id': 564}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Tree Tilt', 'question__title_slug': 'binary-tree-tilt', 'total_acs': 12705, 'question__hide': False, 'question__article__slug': 'binary-tree-tilt', 'total_submitted': 27086, 'question__article__live': True, 'is_new_question': False, 'question_id': 563}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Longest Line of Consecutive One in Matrix', 'question__title_slug': 'longest-line-of-consecutive-one-in-matrix', 'total_acs': 2793, 'question__hide': False, 'question__article__slug': 'longest-line-of-consecutive-one-in-a-matrix', 'total_submitted': 7163, 'question__article__live': True, 'is_new_question': False, 'question_id': 562}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Array Partition I', 'question__title_slug': 'array-partition-i', 'total_acs': 27604, 'question__hide': False, 'question__article__slug': 'array-partitioning-i', 'total_submitted': 40522, 'question__article__live': True, 'is_new_question': False, 'question_id': 561}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Subarray Sum Equals K', 'question__title_slug': 'subarray-sum-equals-k', 'total_acs': 10260, 'question__hide': False, 'question__article__slug': 'subarray-sum-equals-k', 'total_submitted': 25148, 'question__article__live': True, 'is_new_question': False, 'question_id': 560}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse Words in a String III', 'question__title_slug': 'reverse-words-in-a-string-iii', 'total_acs': 28460, 'question__hide': False, 'question__article__slug': 'reverse-words-in-a-string', 'total_submitted': 47541, 'question__article__live': True, 'is_new_question': False, 'question_id': 557}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Next Greater Element III', 'question__title_slug': 'next-greater-element-iii', 'total_acs': 5809, 'question__hide': False, 'question__article__slug': 'next-greater-element-iii', 'total_submitted': 20436, 'question__article__live': True, 'is_new_question': False, 'question_id': 556}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Split Concatenated Strings', 'question__title_slug': 'split-concatenated-strings', 'total_acs': 1372, 'question__hide': False, 'question__article__slug': 'split-assembled-strings', 'total_submitted': 4098, 'question__article__live': True, 'is_new_question': False, 'question_id': 555}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Brick Wall', 'question__title_slug': 'brick-wall', 'total_acs': 8521, 'question__hide': False, 'question__article__slug': 'brick-wall', 'total_submitted': 19162, 'question__article__live': True, 'is_new_question': False, 'question_id': 554}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Optimal Division', 'question__title_slug': 'optimal-division', 'total_acs': 6531, 'question__hide': False, 'question__article__slug': 'optimal-division', 'total_submitted': 11874, 'question__article__live': True, 'is_new_question': False, 'question_id': 553}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Student Attendance Record II', 'question__title_slug': 'student-attendance-record-ii', 'total_acs': 3133, 'question__hide': False, 'question__article__slug': 'student-attendance-record-ii', 'total_submitted': 10421, 'question__article__live': True, 'is_new_question': False, 'question_id': 552}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Student Attendance Record I', 'question__title_slug': 'student-attendance-record-i', 'total_acs': 14049, 'question__hide': False, 'question__article__slug': 'student-attendance-record-i', 'total_submitted': 32126, 'question__article__live': True, 'is_new_question': False, 'question_id': 551}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Binary Tree Longest Consecutive Sequence II', 'question__title_slug': 'binary-tree-longest-consecutive-sequence-ii', 'total_acs': 2759, 'question__hide': False, 'question__article__slug': 'binary-tree-longest-consecutive-sequence-ii', 'total_submitted': 6986, 'question__article__live': True, 'is_new_question': False, 'question_id': 549}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Split Array with Equal Sum', 'question__title_slug': 'split-array-with-equal-sum', 'total_acs': 1996, 'question__hide': False, 'question__article__slug': 'split-array-with-equal-sum', 'total_submitted': 5882, 'question__article__live': True, 'is_new_question': False, 'question_id': 548}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Friend Circles', 'question__title_slug': 'friend-circles', 'total_acs': 10944, 'question__hide': False, 'question__article__slug': 'friend-circles', 'total_submitted': 22121, 'question__article__live': True, 'is_new_question': False, 'question_id': 547}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove Boxes', 'question__title_slug': 'remove-boxes', 'total_acs': 2429, 'question__hide': False, 'question__article__slug': 'remove-boxes', 'total_submitted': 7641, 'question__article__live': True, 'is_new_question': False, 'question_id': 546}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Boundary of Binary Tree', 'question__title_slug': 'boundary-of-binary-tree', 'total_acs': 3985, 'question__hide': False, 'question__article__slug': 'boundary-of-binary-tree', 'total_submitted': 13064, 'question__article__live': True, 'is_new_question': False, 'question_id': 545}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Output Contest Matches', 'question__title_slug': 'output-contest-matches', 'total_acs': 3240, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 4466, 'question__article__live': None, 'is_new_question': False, 'question_id': 544}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Diameter of Binary Tree', 'question__title_slug': 'diameter-of-binary-tree', 'total_acs': 19754, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 45447, 'question__article__live': None, 'is_new_question': False, 'question_id': 543}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': '01 Matrix', 'question__title_slug': '01-matrix', 'total_acs': 8321, 'question__hide': False, 'question__article__slug': '01-matrix', 'total_submitted': 25183, 'question__article__live': True, 'is_new_question': False, 'question_id': 542}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse String II', 'question__title_slug': 'reverse-string-ii', 'total_acs': 18224, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 41401, 'question__article__live': None, 'is_new_question': False, 'question_id': 541}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Single Element in a Sorted Array', 'question__title_slug': 'single-element-in-a-sorted-array', 'total_acs': 10951, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 20152, 'question__article__live': None, 'is_new_question': False, 'question_id': 540}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Time Difference', 'question__title_slug': 'minimum-time-difference', 'total_acs': 8780, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 19151, 'question__article__live': None, 'is_new_question': False, 'question_id': 539}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Convert BST to Greater Tree', 'question__title_slug': 'convert-bst-to-greater-tree', 'total_acs': 13923, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 26799, 'question__article__live': None, 'is_new_question': False, 'question_id': 538}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Complex Number Multiplication', 'question__title_slug': 'complex-number-multiplication', 'total_acs': 11153, 'question__hide': False, 'question__article__slug': 'complex-number-multiplication', 'total_submitted': 17311, 'question__article__live': True, 'is_new_question': False, 'question_id': 537}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Construct Binary Tree from String', 'question__title_slug': 'construct-binary-tree-from-string', 'total_acs': 4664, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 11607, 'question__article__live': None, 'is_new_question': False, 'question_id': 536}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Encode and Decode TinyURL', 'question__title_slug': 'encode-and-decode-tinyurl', 'total_acs': 12961, 'question__hide': False, 'question__article__slug': 'encode-and-decode-tinyurl', 'total_submitted': 17477, 'question__article__live': True, 'is_new_question': False, 'question_id': 535}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Lonely Pixel II', 'question__title_slug': 'lonely-pixel-ii', 'total_acs': 3021, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 7220, 'question__article__live': None, 'is_new_question': False, 'question_id': 533}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'K-diff Pairs in an Array', 'question__title_slug': 'k-diff-pairs-in-an-array', 'total_acs': 18642, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 66162, 'question__article__live': None, 'is_new_question': False, 'question_id': 532}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Lonely Pixel I', 'question__title_slug': 'lonely-pixel-i', 'total_acs': 5413, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 10018, 'question__article__live': None, 'is_new_question': False, 'question_id': 531}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Absolute Difference in BST', 'question__title_slug': 'minimum-absolute-difference-in-bst', 'total_acs': 18230, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 38790, 'question__article__live': None, 'is_new_question': False, 'question_id': 530}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minesweeper', 'question__title_slug': 'minesweeper', 'total_acs': 8224, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 16449, 'question__article__live': None, 'is_new_question': False, 'question_id': 529}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Word Abbreviation', 'question__title_slug': 'word-abbreviation', 'total_acs': 2045, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 5166, 'question__article__live': None, 'is_new_question': False, 'question_id': 527}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Beautiful Arrangement', 'question__title_slug': 'beautiful-arrangement', 'total_acs': 11321, 'question__hide': False, 'question__article__slug': 'beautiful-arrangement', 'total_submitted': 20521, 'question__article__live': True, 'is_new_question': False, 'question_id': 526}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Contiguous Array', 'question__title_slug': 'contiguous-array', 'total_acs': 10699, 'question__hide': False, 'question__article__slug': 'contiguous-array', 'total_submitted': 27972, 'question__article__live': True, 'is_new_question': False, 'question_id': 525}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Word in Dictionary through Deleting', 'question__title_slug': 'longest-word-in-dictionary-through-deleting', 'total_acs': 9352, 'question__hide': False, 'question__article__slug': 'longest-word-in-dictionary-through-deletion', 'total_submitted': 22149, 'question__article__live': True, 'is_new_question': False, 'question_id': 524}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Continuous Subarray Sum', 'question__title_slug': 'continuous-subarray-sum', 'total_acs': 13864, 'question__hide': False, 'question__article__slug': 'continous-subarray-sum', 'total_submitted': 61793, 'question__article__live': True, 'is_new_question': False, 'question_id': 523}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Uncommon Subsequence II', 'question__title_slug': 'longest-uncommon-subsequence-ii', 'total_acs': 4971, 'question__hide': False, 'question__article__slug': 'longest-uncommon-subsequence-ii', 'total_submitted': 16239, 'question__article__live': True, 'is_new_question': False, 'question_id': 522}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Uncommon Subsequence I ', 'question__title_slug': 'longest-uncommon-subsequence-i', 'total_acs': 13137, 'question__hide': False, 'question__article__slug': 'longest-uncommon-subsequence-i', 'total_submitted': 23924, 'question__article__live': True, 'is_new_question': False, 'question_id': 521}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Detect Capital', 'question__title_slug': 'detect-capital', 'total_acs': 29771, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 57156, 'question__article__live': None, 'is_new_question': False, 'question_id': 520}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Super Washing Machines', 'question__title_slug': 'super-washing-machines', 'total_acs': 4058, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 11027, 'question__article__live': None, 'is_new_question': False, 'question_id': 517}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Palindromic Subsequence', 'question__title_slug': 'longest-palindromic-subsequence', 'total_acs': 13208, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 31073, 'question__article__live': None, 'is_new_question': False, 'question_id': 516}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find Largest Value in Each Tree Row', 'question__title_slug': 'find-largest-value-in-each-tree-row', 'total_acs': 18750, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 34262, 'question__article__live': None, 'is_new_question': False, 'question_id': 515}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Freedom Trail', 'question__title_slug': 'freedom-trail', 'total_acs': 3948, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 10398, 'question__article__live': None, 'is_new_question': False, 'question_id': 514}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find Bottom Left Tree Value', 'question__title_slug': 'find-bottom-left-tree-value', 'total_acs': 21323, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 38398, 'question__article__live': None, 'is_new_question': False, 'question_id': 513}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Most Frequent Subtree Sum', 'question__title_slug': 'most-frequent-subtree-sum', 'total_acs': 15797, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 30202, 'question__article__live': None, 'is_new_question': False, 'question_id': 508}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Perfect Number', 'question__title_slug': 'perfect-number', 'total_acs': 10730, 'question__hide': False, 'question__article__slug': 'perfect-number', 'total_submitted': 31804, 'question__article__live': True, 'is_new_question': False, 'question_id': 507}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Relative Ranks', 'question__title_slug': 'relative-ranks', 'total_acs': 17515, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 37463, 'question__article__live': None, 'is_new_question': False, 'question_id': 506}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'The Maze II', 'question__title_slug': 'the-maze-ii', 'total_acs': 4561, 'question__hide': False, 'question__article__slug': 'the-maze-ii', 'total_submitted': 12469, 'question__article__live': True, 'is_new_question': False, 'question_id': 505}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Base 7', 'question__title_slug': 'base-7', 'total_acs': 16626, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 37311, 'question__article__live': None, 'is_new_question': False, 'question_id': 504}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Next Greater Element II', 'question__title_slug': 'next-greater-element-ii', 'total_acs': 13434, 'question__hide': False, 'question__article__slug': 'next-greater-element-ii', 'total_submitted': 28504, 'question__article__live': True, 'is_new_question': False, 'question_id': 503}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'IPO', 'question__title_slug': 'ipo', 'total_acs': 3923, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 11012, 'question__article__live': None, 'is_new_question': False, 'question_id': 502}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find Mode in Binary Search Tree', 'question__title_slug': 'find-mode-in-binary-search-tree', 'total_acs': 17514, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 46014, 'question__article__live': None, 'is_new_question': False, 'question_id': 501}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Keyboard Row', 'question__title_slug': 'keyboard-row', 'total_acs': 33546, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 55841, 'question__article__live': None, 'is_new_question': False, 'question_id': 500}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'The Maze III', 'question__title_slug': 'the-maze-iii', 'total_acs': 2603, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 8187, 'question__article__live': None, 'is_new_question': False, 'question_id': 499}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Diagonal Traverse', 'question__title_slug': 'diagonal-traverse', 'total_acs': 8910, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 19296, 'question__article__live': None, 'is_new_question': False, 'question_id': 498}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Next Greater Element I', 'question__title_slug': 'next-greater-element-i', 'total_acs': 29898, 'question__hide': False, 'question__article__slug': 'greater-element-i', 'total_submitted': 52470, 'question__article__live': True, 'is_new_question': False, 'question_id': 496}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Teemo Attacking', 'question__title_slug': 'teemo-attacking', 'total_acs': 13929, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 27073, 'question__article__live': None, 'is_new_question': False, 'question_id': 495}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Target Sum', 'question__title_slug': 'target-sum', 'total_acs': 23218, 'question__hide': False, 'question__article__slug': 'target-sum', 'total_submitted': 52916, 'question__article__live': True, 'is_new_question': False, 'question_id': 494}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse Pairs', 'question__title_slug': 'reverse-pairs', 'total_acs': 5509, 'question__hide': False, 'question__article__slug': 'reverse-pairs', 'total_submitted': 27783, 'question__article__live': True, 'is_new_question': False, 'question_id': 493}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Construct the Rectangle', 'question__title_slug': 'construct-the-rectangle', 'total_acs': 21161, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 43528, 'question__article__live': None, 'is_new_question': False, 'question_id': 492}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Increasing Subsequences', 'question__title_slug': 'increasing-subsequences', 'total_acs': 9841, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 25333, 'question__article__live': None, 'is_new_question': False, 'question_id': 491}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'The Maze', 'question__title_slug': 'the-maze', 'total_acs': 5308, 'question__hide': False, 'question__article__slug': 'the-maze', 'total_submitted': 12339, 'question__article__live': True, 'is_new_question': False, 'question_id': 490}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Zuma Game', 'question__title_slug': 'zuma-game', 'total_acs': 3583, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 9624, 'question__article__live': None, 'is_new_question': False, 'question_id': 488}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Max Consecutive Ones II', 'question__title_slug': 'max-consecutive-ones-ii', 'total_acs': 6356, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 14111, 'question__article__live': None, 'is_new_question': False, 'question_id': 487}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Predict the Winner', 'question__title_slug': 'predict-the-winner', 'total_acs': 12833, 'question__hide': False, 'question__article__slug': 'predict-the-winner', 'total_submitted': 28640, 'question__article__live': True, 'is_new_question': False, 'question_id': 486}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Max Consecutive Ones', 'question__title_slug': 'max-consecutive-ones', 'total_acs': 46522, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 85834, 'question__article__live': None, 'is_new_question': False, 'question_id': 485}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Find Permutation', 'question__title_slug': 'find-permutation', 'total_acs': 4441, 'question__hide': False, 'question__article__slug': 'find-permutation', 'total_submitted': 8297, 'question__article__live': True, 'is_new_question': False, 'question_id': 484}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Smallest Good Base', 'question__title_slug': 'smallest-good-base', 'total_acs': 4275, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 13316, 'question__article__live': None, 'is_new_question': False, 'question_id': 483}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'License Key Formatting', 'question__title_slug': 'license-key-formatting', 'total_acs': 16282, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 39413, 'question__article__live': None, 'is_new_question': False, 'question_id': 482}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Magical String', 'question__title_slug': 'magical-string', 'total_acs': 8690, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 19193, 'question__article__live': None, 'is_new_question': False, 'question_id': 481}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sliding Window Median', 'question__title_slug': 'sliding-window-median', 'total_acs': 6710, 'question__hide': False, 'question__article__slug': 'sliding-window-median', 'total_submitted': 21256, 'question__article__live': True, 'is_new_question': False, 'question_id': 480}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Largest Palindrome Product', 'question__title_slug': 'largest-palindrome-product', 'total_acs': 3241, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 16194, 'question__article__live': None, 'is_new_question': False, 'question_id': 479}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Total Hamming Distance', 'question__title_slug': 'total-hamming-distance', 'total_acs': 16991, 'question__hide': False, 'question__article__slug': 'total-hamming-distance', 'total_submitted': 36608, 'question__article__live': True, 'is_new_question': False, 'question_id': 477}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Number Complement', 'question__title_slug': 'number-complement', 'total_acs': 45263, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 73777, 'question__article__live': None, 'is_new_question': False, 'question_id': 476}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Heaters', 'question__title_slug': 'heaters', 'total_acs': 17384, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 58953, 'question__article__live': None, 'is_new_question': False, 'question_id': 475}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Ones and Zeroes', 'question__title_slug': 'ones-and-zeroes', 'total_acs': 11696, 'question__hide': False, 'question__article__slug': 'ones-and-zeroes', 'total_submitted': 30162, 'question__article__live': True, 'is_new_question': False, 'question_id': 474}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Matchsticks to Square', 'question__title_slug': 'matchsticks-to-square', 'total_acs': 9266, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 26496, 'question__article__live': None, 'is_new_question': False, 'question_id': 473}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Concatenated Words', 'question__title_slug': 'concatenated-words', 'total_acs': 6742, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 22435, 'question__article__live': None, 'is_new_question': False, 'question_id': 472}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Encode String with Shortest Length', 'question__title_slug': 'encode-string-with-shortest-length', 'total_acs': 4410, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 10649, 'question__article__live': None, 'is_new_question': False, 'question_id': 471}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Convex Polygon', 'question__title_slug': 'convex-polygon', 'total_acs': 3288, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 10335, 'question__article__live': None, 'is_new_question': False, 'question_id': 469}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Validate IP Address', 'question__title_slug': 'validate-ip-address', 'total_acs': 7104, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 34240, 'question__article__live': None, 'is_new_question': False, 'question_id': 468}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Unique Substrings in Wraparound String', 'question__title_slug': 'unique-substrings-in-wraparound-string', 'total_acs': 7525, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 23419, 'question__article__live': None, 'is_new_question': False, 'question_id': 467}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Count The Repetitions', 'question__title_slug': 'count-the-repetitions', 'total_acs': 3526, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 12662, 'question__article__live': None, 'is_new_question': False, 'question_id': 466}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Optimal Account Balancing', 'question__title_slug': 'optimal-account-balancing', 'total_acs': 4046, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 11339, 'question__article__live': None, 'is_new_question': False, 'question_id': 465}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Can I Win', 'question__title_slug': 'can-i-win', 'total_acs': 11147, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 45416, 'question__article__live': None, 'is_new_question': False, 'question_id': 464}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Island Perimeter', 'question__title_slug': 'island-perimeter', 'total_acs': 44894, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 78543, 'question__article__live': None, 'is_new_question': False, 'question_id': 463}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Moves to Equal Array Elements II', 'question__title_slug': 'minimum-moves-to-equal-array-elements-ii', 'total_acs': 16006, 'question__hide': False, 'question__article__slug': 'minimum-moves-to-equal-array-elements-ii', 'total_submitted': 31172, 'question__article__live': True, 'is_new_question': False, 'question_id': 462}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Hamming Distance', 'question__title_slug': 'hamming-distance', 'total_acs': 76691, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 109078, 'question__article__live': None, 'is_new_question': False, 'question_id': 461}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'LFU Cache', 'question__title_slug': 'lfu-cache', 'total_acs': 11635, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 50070, 'question__article__live': None, 'is_new_question': False, 'question_id': 460}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Repeated Substring Pattern', 'question__title_slug': 'repeated-substring-pattern', 'total_acs': 32405, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 84979, 'question__article__live': None, 'is_new_question': False, 'question_id': 459}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': '132 Pattern', 'question__title_slug': '132-pattern', 'total_acs': 10769, 'question__hide': False, 'question__article__slug': '132-pattern', 'total_submitted': 37631, 'question__article__live': True, 'is_new_question': False, 'question_id': 456}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Assign Cookies', 'question__title_slug': 'assign-cookies', 'total_acs': 27164, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 57662, 'question__article__live': None, 'is_new_question': False, 'question_id': 455}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': '4Sum II', 'question__title_slug': '4sum-ii', 'total_acs': 16127, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 34837, 'question__article__live': None, 'is_new_question': False, 'question_id': 454}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Moves to Equal Array Elements', 'question__title_slug': 'minimum-moves-to-equal-array-elements', 'total_acs': 27345, 'question__hide': False, 'question__article__slug': 'minimum-moves-to-equal-array-elements', 'total_submitted': 57817, 'question__article__live': True, 'is_new_question': False, 'question_id': 453}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Number of Arrows to Burst Balloons', 'question__title_slug': 'minimum-number-of-arrows-to-burst-balloons', 'total_acs': 12819, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 29221, 'question__article__live': None, 'is_new_question': False, 'question_id': 452}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sort Characters By Frequency', 'question__title_slug': 'sort-characters-by-frequency', 'total_acs': 30999, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 60961, 'question__article__live': None, 'is_new_question': False, 'question_id': 451}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Delete Node in a BST', 'question__title_slug': 'delete-node-in-a-bst', 'total_acs': 17700, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 48567, 'question__article__live': None, 'is_new_question': False, 'question_id': 450}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Serialize and Deserialize BST', 'question__title_slug': 'serialize-and-deserialize-bst', 'total_acs': 14042, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 33269, 'question__article__live': None, 'is_new_question': False, 'question_id': 449}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find All Numbers Disappeared in an Array', 'question__title_slug': 'find-all-numbers-disappeared-in-an-array', 'total_acs': 49724, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 96122, 'question__article__live': None, 'is_new_question': False, 'question_id': 448}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Number of Boomerangs', 'question__title_slug': 'number-of-boomerangs', 'total_acs': 23193, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 51801, 'question__article__live': None, 'is_new_question': False, 'question_id': 447}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Arithmetic Slices II - Subsequence', 'question__title_slug': 'arithmetic-slices-ii-subsequence', 'total_acs': 5520, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 21078, 'question__article__live': None, 'is_new_question': False, 'question_id': 446}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Add Two Numbers II', 'question__title_slug': 'add-two-numbers-ii', 'total_acs': 24878, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 53993, 'question__article__live': None, 'is_new_question': False, 'question_id': 445}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Sequence Reconstruction', 'question__title_slug': 'sequence-reconstruction', 'total_acs': 5976, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 30254, 'question__article__live': None, 'is_new_question': False, 'question_id': 444}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find All Duplicates in an Array', 'question__title_slug': 'find-all-duplicates-in-an-array', 'total_acs': 31721, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 57419, 'question__article__live': None, 'is_new_question': False, 'question_id': 442}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Arranging Coins', 'question__title_slug': 'arranging-coins', 'total_acs': 29025, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 80028, 'question__article__live': None, 'is_new_question': False, 'question_id': 441}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'K-th Smallest in Lexicographical Order', 'question__title_slug': 'k-th-smallest-in-lexicographical-order', 'total_acs': 4047, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 16770, 'question__article__live': None, 'is_new_question': False, 'question_id': 440}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Ternary Expression Parser', 'question__title_slug': 'ternary-expression-parser', 'total_acs': 6657, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 13166, 'question__article__live': None, 'is_new_question': False, 'question_id': 439}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find All Anagrams in a String', 'question__title_slug': 'find-all-anagrams-in-a-string', 'total_acs': 34340, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 102083, 'question__article__live': None, 'is_new_question': False, 'question_id': 438}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Path Sum III', 'question__title_slug': 'path-sum-iii', 'total_acs': 30369, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 76437, 'question__article__live': None, 'is_new_question': False, 'question_id': 437}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find Right Interval', 'question__title_slug': 'find-right-interval', 'total_acs': 12124, 'question__hide': False, 'question__article__slug': 'find-right-interval', 'total_submitted': 29442, 'question__article__live': True, 'is_new_question': False, 'question_id': 436}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Non-overlapping Intervals', 'question__title_slug': 'non-overlapping-intervals', 'total_acs': 12835, 'question__hide': False, 'question__article__slug': 'non-overlapping-intervals', 'total_submitted': 31334, 'question__article__live': True, 'is_new_question': False, 'question_id': 435}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Number of Segments in a String', 'question__title_slug': 'number-of-segments-in-a-string', 'total_acs': 23785, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 64690, 'question__article__live': None, 'is_new_question': False, 'question_id': 434}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'All O`one Data Structure', 'question__title_slug': 'all-oone-data-structure', 'total_acs': 5976, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 21558, 'question__article__live': None, 'is_new_question': False, 'question_id': 432}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Word Squares', 'question__title_slug': 'word-squares', 'total_acs': 8342, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 19672, 'question__article__live': None, 'is_new_question': False, 'question_id': 425}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Repeating Character Replacement', 'question__title_slug': 'longest-repeating-character-replacement', 'total_acs': 12153, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 28909, 'question__article__live': None, 'is_new_question': False, 'question_id': 424}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reconstruct Original Digits from English', 'question__title_slug': 'reconstruct-original-digits-from-english', 'total_acs': 10660, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 24358, 'question__article__live': None, 'is_new_question': False, 'question_id': 423}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Valid Word Square', 'question__title_slug': 'valid-word-square', 'total_acs': 10202, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 28213, 'question__article__live': None, 'is_new_question': False, 'question_id': 422}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximum XOR of Two Numbers in an Array', 'question__title_slug': 'maximum-xor-of-two-numbers-in-an-array', 'total_acs': 13408, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 29581, 'question__article__live': None, 'is_new_question': False, 'question_id': 421}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Strong Password Checker', 'question__title_slug': 'strong-password-checker', 'total_acs': 2867, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 14272, 'question__article__live': None, 'is_new_question': False, 'question_id': 420}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Battleships in a Board', 'question__title_slug': 'battleships-in-a-board', 'total_acs': 25974, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 42212, 'question__article__live': None, 'is_new_question': False, 'question_id': 419}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Sentence Screen Fitting', 'question__title_slug': 'sentence-screen-fitting', 'total_acs': 11543, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 42132, 'question__article__live': None, 'is_new_question': False, 'question_id': 418}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Pacific Atlantic Water Flow', 'question__title_slug': 'pacific-atlantic-water-flow', 'total_acs': 14739, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 43986, 'question__article__live': None, 'is_new_question': False, 'question_id': 417}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Partition Equal Subset Sum', 'question__title_slug': 'partition-equal-subset-sum', 'total_acs': 23097, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 59163, 'question__article__live': None, 'is_new_question': False, 'question_id': 416}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Add Strings', 'question__title_slug': 'add-strings', 'total_acs': 35930, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 87068, 'question__article__live': None, 'is_new_question': False, 'question_id': 415}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Third Maximum Number', 'question__title_slug': 'third-maximum-number', 'total_acs': 37144, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 133513, 'question__article__live': None, 'is_new_question': False, 'question_id': 414}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Arithmetic Slices', 'question__title_slug': 'arithmetic-slices', 'total_acs': 23410, 'question__hide': False, 'question__article__slug': 'arithmetic-slices', 'total_submitted': 42843, 'question__article__live': True, 'is_new_question': False, 'question_id': 413}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Fizz Buzz', 'question__title_slug': 'fizz-buzz', 'total_acs': 72822, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 123791, 'question__article__live': None, 'is_new_question': False, 'question_id': 412}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Minimum Unique Word Abbreviation', 'question__title_slug': 'minimum-unique-word-abbreviation', 'total_acs': 5008, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 15413, 'question__article__live': None, 'is_new_question': False, 'question_id': 411}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Split Array Largest Sum', 'question__title_slug': 'split-array-largest-sum', 'total_acs': 12553, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 34408, 'question__article__live': None, 'is_new_question': False, 'question_id': 410}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Palindrome', 'question__title_slug': 'longest-palindrome', 'total_acs': 42856, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 94549, 'question__article__live': None, 'is_new_question': False, 'question_id': 409}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Valid Word Abbreviation', 'question__title_slug': 'valid-word-abbreviation', 'total_acs': 10379, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 37185, 'question__article__live': None, 'is_new_question': False, 'question_id': 408}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Trapping Rain Water II', 'question__title_slug': 'trapping-rain-water-ii', 'total_acs': 9983, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 27238, 'question__article__live': None, 'is_new_question': False, 'question_id': 407}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Queue Reconstruction by Height', 'question__title_slug': 'queue-reconstruction-by-height', 'total_acs': 25267, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 45695, 'question__article__live': None, 'is_new_question': False, 'question_id': 406}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Convert a Number to Hexadecimal', 'question__title_slug': 'convert-a-number-to-hexadecimal', 'total_acs': 23954, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 58337, 'question__article__live': None, 'is_new_question': False, 'question_id': 405}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sum of Left Leaves', 'question__title_slug': 'sum-of-left-leaves', 'total_acs': 54997, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 117247, 'question__article__live': None, 'is_new_question': False, 'question_id': 404}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Frog Jump', 'question__title_slug': 'frog-jump', 'total_acs': 16139, 'question__hide': False, 'question__article__slug': 'frog-jump', 'total_submitted': 50541, 'question__article__live': True, 'is_new_question': False, 'question_id': 403}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove K Digits', 'question__title_slug': 'remove-k-digits', 'total_acs': 19927, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 76147, 'question__article__live': None, 'is_new_question': False, 'question_id': 402}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Watch', 'question__title_slug': 'binary-watch', 'total_acs': 31863, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 71142, 'question__article__live': None, 'is_new_question': False, 'question_id': 401}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Nth Digit', 'question__title_slug': 'nth-digit', 'total_acs': 23462, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 77932, 'question__article__live': None, 'is_new_question': False, 'question_id': 400}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Evaluate Division', 'question__title_slug': 'evaluate-division', 'total_acs': 16104, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 39528, 'question__article__live': None, 'is_new_question': False, 'question_id': 399}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Random Pick Index', 'question__title_slug': 'random-pick-index', 'total_acs': 21116, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 49809, 'question__article__live': None, 'is_new_question': False, 'question_id': 398}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Integer Replacement', 'question__title_slug': 'integer-replacement', 'total_acs': 20592, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 68716, 'question__article__live': None, 'is_new_question': False, 'question_id': 397}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Rotate Function', 'question__title_slug': 'rotate-function', 'total_acs': 19851, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 61409, 'question__article__live': None, 'is_new_question': False, 'question_id': 396}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Substring with At Least K Repeating Characters', 'question__title_slug': 'longest-substring-with-at-least-k-repeating-characters', 'total_acs': 15667, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 44099, 'question__article__live': None, 'is_new_question': False, 'question_id': 395}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Decode String', 'question__title_slug': 'decode-string', 'total_acs': 31409, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 76418, 'question__article__live': None, 'is_new_question': False, 'question_id': 394}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'UTF-8 Validation', 'question__title_slug': 'utf-8-validation', 'total_acs': 14645, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 42067, 'question__article__live': None, 'is_new_question': False, 'question_id': 393}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Is Subsequence', 'question__title_slug': 'is-subsequence', 'total_acs': 34065, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 76675, 'question__article__live': None, 'is_new_question': False, 'question_id': 392}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Perfect Rectangle', 'question__title_slug': 'perfect-rectangle', 'total_acs': 9796, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 37549, 'question__article__live': None, 'is_new_question': False, 'question_id': 391}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Elimination Game', 'question__title_slug': 'elimination-game', 'total_acs': 11268, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 27112, 'question__article__live': None, 'is_new_question': False, 'question_id': 390}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find the Difference', 'question__title_slug': 'find-the-difference', 'total_acs': 74001, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 143529, 'question__article__live': None, 'is_new_question': False, 'question_id': 389}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Absolute File Path', 'question__title_slug': 'longest-absolute-file-path', 'total_acs': 30555, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 84264, 'question__article__live': None, 'is_new_question': False, 'question_id': 388}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'First Unique Character in a String', 'question__title_slug': 'first-unique-character-in-a-string', 'total_acs': 65862, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 141786, 'question__article__live': None, 'is_new_question': False, 'question_id': 387}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Lexicographical Numbers', 'question__title_slug': 'lexicographical-numbers', 'total_acs': 19589, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 47866, 'question__article__live': None, 'is_new_question': False, 'question_id': 386}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Mini Parser', 'question__title_slug': 'mini-parser', 'total_acs': 15616, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 51543, 'question__article__live': None, 'is_new_question': False, 'question_id': 385}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Shuffle an Array', 'question__title_slug': 'shuffle-an-array', 'total_acs': 26755, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 57764, 'question__article__live': None, 'is_new_question': False, 'question_id': 384}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Ransom Note', 'question__title_slug': 'ransom-note', 'total_acs': 55821, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 118621, 'question__article__live': None, 'is_new_question': False, 'question_id': 383}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Linked List Random Node', 'question__title_slug': 'linked-list-random-node', 'total_acs': 27485, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 58707, 'question__article__live': None, 'is_new_question': False, 'question_id': 382}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Insert Delete GetRandom O(1) - Duplicates allowed', 'question__title_slug': 'insert-delete-getrandom-o1-duplicates-allowed', 'total_acs': 15405, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 53669, 'question__article__live': None, 'is_new_question': False, 'question_id': 381}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Insert Delete GetRandom O(1)', 'question__title_slug': 'insert-delete-getrandom-o1', 'total_acs': 33356, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 85451, 'question__article__live': None, 'is_new_question': False, 'question_id': 380}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Design Phone Directory', 'question__title_slug': 'design-phone-directory', 'total_acs': 9979, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 30976, 'question__article__live': None, 'is_new_question': False, 'question_id': 379}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Kth Smallest Element in a Sorted Matrix', 'question__title_slug': 'kth-smallest-element-in-a-sorted-matrix', 'total_acs': 38019, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 85568, 'question__article__live': None, 'is_new_question': False, 'question_id': 378}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Combination Sum IV', 'question__title_slug': 'combination-sum-iv', 'total_acs': 37656, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 90077, 'question__article__live': None, 'is_new_question': False, 'question_id': 377}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Wiggle Subsequence', 'question__title_slug': 'wiggle-subsequence', 'total_acs': 24040, 'question__hide': False, 'question__article__slug': 'wiggle-subsequence', 'total_submitted': 67541, 'question__article__live': True, 'is_new_question': False, 'question_id': 376}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Guess Number Higher or Lower II', 'question__title_slug': 'guess-number-higher-or-lower-ii', 'total_acs': 21462, 'question__hide': False, 'question__article__slug': 'guess-number-higher-or-lower-ii', 'total_submitted': 60129, 'question__article__live': True, 'is_new_question': False, 'question_id': 375}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Guess Number Higher or Lower', 'question__title_slug': 'guess-number-higher-or-lower', 'total_acs': 49728, 'question__hide': False, 'question__article__slug': 'guess-number-higher-or-lower', 'total_submitted': 141765, 'question__article__live': True, 'is_new_question': False, 'question_id': 374}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find K Pairs with Smallest Sums', 'question__title_slug': 'find-k-pairs-with-smallest-sums', 'total_acs': 28033, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 91707, 'question__article__live': None, 'is_new_question': False, 'question_id': 373}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Super Pow', 'question__title_slug': 'super-pow', 'total_acs': 16206, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 47418, 'question__article__live': None, 'is_new_question': False, 'question_id': 372}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sum of Two Integers', 'question__title_slug': 'sum-of-two-integers', 'total_acs': 72054, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 140642, 'question__article__live': None, 'is_new_question': False, 'question_id': 371}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Range Addition', 'question__title_slug': 'range-addition', 'total_acs': 11736, 'question__hide': False, 'question__article__slug': 'range-addition', 'total_submitted': 21283, 'question__article__live': True, 'is_new_question': False, 'question_id': 370}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Plus One Linked List', 'question__title_slug': 'plus-one-linked-list', 'total_acs': 15239, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 28074, 'question__article__live': None, 'is_new_question': False, 'question_id': 369}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Largest Divisible Subset', 'question__title_slug': 'largest-divisible-subset', 'total_acs': 24834, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 73756, 'question__article__live': None, 'is_new_question': False, 'question_id': 368}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Valid Perfect Square', 'question__title_slug': 'valid-perfect-square', 'total_acs': 46309, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 121687, 'question__article__live': None, 'is_new_question': False, 'question_id': 367}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Find Leaves of Binary Tree', 'question__title_slug': 'find-leaves-of-binary-tree', 'total_acs': 16815, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 28411, 'question__article__live': None, 'is_new_question': False, 'question_id': 366}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Water and Jug Problem', 'question__title_slug': 'water-and-jug-problem', 'total_acs': 14873, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 54604, 'question__article__live': None, 'is_new_question': False, 'question_id': 365}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Nested List Weight Sum II', 'question__title_slug': 'nested-list-weight-sum-ii', 'total_acs': 13925, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 26794, 'question__article__live': None, 'is_new_question': False, 'question_id': 364}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Max Sum of Rectangle No Larger Than K', 'question__title_slug': 'max-sum-of-rectangle-no-larger-than-k', 'total_acs': 13673, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 41488, 'question__article__live': None, 'is_new_question': False, 'question_id': 363}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Design Hit Counter', 'question__title_slug': 'design-hit-counter', 'total_acs': 15629, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 29170, 'question__article__live': None, 'is_new_question': False, 'question_id': 362}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Bomb Enemy', 'question__title_slug': 'bomb-enemy', 'total_acs': 15397, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 39656, 'question__article__live': None, 'is_new_question': False, 'question_id': 361}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Sort Transformed Array', 'question__title_slug': 'sort-transformed-array', 'total_acs': 11285, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 25700, 'question__article__live': None, 'is_new_question': False, 'question_id': 360}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Logger Rate Limiter', 'question__title_slug': 'logger-rate-limiter', 'total_acs': 17154, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 28854, 'question__article__live': None, 'is_new_question': False, 'question_id': 359}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Rearrange String k Distance Apart', 'question__title_slug': 'rearrange-string-k-distance-apart', 'total_acs': 9726, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 30564, 'question__article__live': None, 'is_new_question': False, 'question_id': 358}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Count Numbers with Unique Digits', 'question__title_slug': 'count-numbers-with-unique-digits', 'total_acs': 35022, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 76299, 'question__article__live': None, 'is_new_question': False, 'question_id': 357}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Line Reflection', 'question__title_slug': 'line-reflection', 'total_acs': 10452, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 34763, 'question__article__live': None, 'is_new_question': False, 'question_id': 356}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Design Twitter', 'question__title_slug': 'design-twitter', 'total_acs': 18457, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 73086, 'question__article__live': None, 'is_new_question': False, 'question_id': 355}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Russian Doll Envelopes', 'question__title_slug': 'russian-doll-envelopes', 'total_acs': 20550, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 64017, 'question__article__live': None, 'is_new_question': False, 'question_id': 354}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Design Snake Game', 'question__title_slug': 'design-snake-game', 'total_acs': 8371, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 31667, 'question__article__live': None, 'is_new_question': False, 'question_id': 353}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Data Stream as Disjoint Intervals', 'question__title_slug': 'data-stream-as-disjoint-intervals', 'total_acs': 13015, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 32579, 'question__article__live': None, 'is_new_question': False, 'question_id': 352}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Android Unlock Patterns', 'question__title_slug': 'android-unlock-patterns', 'total_acs': 13601, 'question__hide': False, 'question__article__slug': 'android-unlock-patterns', 'total_submitted': 31267, 'question__article__live': True, 'is_new_question': False, 'question_id': 351}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Intersection of Two Arrays II', 'question__title_slug': 'intersection-of-two-arrays-ii', 'total_acs': 68762, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 154316, 'question__article__live': None, 'is_new_question': False, 'question_id': 350}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Intersection of Two Arrays', 'question__title_slug': 'intersection-of-two-arrays', 'total_acs': 92923, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 197273, 'question__article__live': None, 'is_new_question': False, 'question_id': 349}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Design Tic-Tac-Toe', 'question__title_slug': 'design-tic-tac-toe', 'total_acs': 13711, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 29913, 'question__article__live': None, 'is_new_question': False, 'question_id': 348}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Top K Frequent Elements', 'question__title_slug': 'top-k-frequent-elements', 'total_acs': 65835, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 137601, 'question__article__live': None, 'is_new_question': False, 'question_id': 347}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Moving Average from Data Stream', 'question__title_slug': 'moving-average-from-data-stream', 'total_acs': 23993, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 41051, 'question__article__live': None, 'is_new_question': False, 'question_id': 346}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse Vowels of a String', 'question__title_slug': 'reverse-vowels-of-a-string', 'total_acs': 79427, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 206906, 'question__article__live': None, 'is_new_question': False, 'question_id': 345}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse String', 'question__title_slug': 'reverse-string', 'total_acs': 166267, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 281854, 'question__article__live': None, 'is_new_question': False, 'question_id': 344}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Integer Break', 'question__title_slug': 'integer-break', 'total_acs': 43571, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 94970, 'question__article__live': None, 'is_new_question': False, 'question_id': 343}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Power of Four', 'question__title_slug': 'power-of-four', 'total_acs': 65333, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 170304, 'question__article__live': None, 'is_new_question': False, 'question_id': 342}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Flatten Nested List Iterator', 'question__title_slug': 'flatten-nested-list-iterator', 'total_acs': 38622, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 93891, 'question__article__live': None, 'is_new_question': False, 'question_id': 341}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Longest Substring with At Most K Distinct Characters', 'question__title_slug': 'longest-substring-with-at-most-k-distinct-characters', 'total_acs': 23028, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 59794, 'question__article__live': None, 'is_new_question': False, 'question_id': 340}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Nested List Weight Sum', 'question__title_slug': 'nested-list-weight-sum', 'total_acs': 22387, 'question__hide': False, 'question__article__slug': 'nested-list-weight-sum', 'total_submitted': 36469, 'question__article__live': True, 'is_new_question': False, 'question_id': 339}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Counting Bits', 'question__title_slug': 'counting-bits', 'total_acs': 81040, 'question__hide': False, 'question__article__slug': 'counting-bits', 'total_submitted': 132738, 'question__article__live': True, 'is_new_question': False, 'question_id': 338}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'House Robber III', 'question__title_slug': 'house-robber-iii', 'total_acs': 44586, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 103446, 'question__article__live': None, 'is_new_question': False, 'question_id': 337}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Palindrome Pairs', 'question__title_slug': 'palindrome-pairs', 'total_acs': 25703, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 98791, 'question__article__live': None, 'is_new_question': False, 'question_id': 336}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Self Crossing', 'question__title_slug': 'self-crossing', 'total_acs': 13783, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 55051, 'question__article__live': None, 'is_new_question': False, 'question_id': 335}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Increasing Triplet Subsequence', 'question__title_slug': 'increasing-triplet-subsequence', 'total_acs': 41211, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 105557, 'question__article__live': None, 'is_new_question': False, 'question_id': 334}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Largest BST Subtree', 'question__title_slug': 'largest-bst-subtree', 'total_acs': 14672, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 48267, 'question__article__live': None, 'is_new_question': False, 'question_id': 333}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reconstruct Itinerary', 'question__title_slug': 'reconstruct-itinerary', 'total_acs': 35095, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 120845, 'question__article__live': None, 'is_new_question': False, 'question_id': 332}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Verify Preorder Serialization of a Binary Tree', 'question__title_slug': 'verify-preorder-serialization-of-a-binary-tree', 'total_acs': 35909, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 99595, 'question__article__live': None, 'is_new_question': False, 'question_id': 331}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Patching Array', 'question__title_slug': 'patching-array', 'total_acs': 21958, 'question__hide': False, 'question__article__slug': 'patching-array', 'total_submitted': 68799, 'question__article__live': True, 'is_new_question': False, 'question_id': 330}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Increasing Path in a Matrix', 'question__title_slug': 'longest-increasing-path-in-a-matrix', 'total_acs': 36647, 'question__hide': False, 'question__article__slug': 'longest-increasing-path-matrix', 'total_submitted': 101279, 'question__article__live': True, 'is_new_question': False, 'question_id': 329}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Odd Even Linked List', 'question__title_slug': 'odd-even-linked-list', 'total_acs': 69552, 'question__hide': False, 'question__article__slug': 'odd-even-linked-list', 'total_submitted': 160367, 'question__article__live': True, 'is_new_question': False, 'question_id': 328}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Count of Range Sum', 'question__title_slug': 'count-of-range-sum', 'total_acs': 18508, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 62621, 'question__article__live': None, 'is_new_question': False, 'question_id': 327}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Power of Three', 'question__title_slug': 'power-of-three', 'total_acs': 96507, 'question__hide': False, 'question__article__slug': 'power-of-three', 'total_submitted': 240721, 'question__article__live': True, 'is_new_question': False, 'question_id': 326}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Maximum Size Subarray Sum Equals k', 'question__title_slug': 'maximum-size-subarray-sum-equals-k', 'total_acs': 29640, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 70042, 'question__article__live': None, 'is_new_question': False, 'question_id': 325}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Wiggle Sort II', 'question__title_slug': 'wiggle-sort-ii', 'total_acs': 29180, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 112733, 'question__article__live': None, 'is_new_question': False, 'question_id': 324}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Number of Connected Components in an Undirected Graph', 'question__title_slug': 'number-of-connected-components-in-an-undirected-graph', 'total_acs': 25896, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 54148, 'question__article__live': None, 'is_new_question': False, 'question_id': 323}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Coin Change', 'question__title_slug': 'coin-change', 'total_acs': 62417, 'question__hide': False, 'question__article__slug': 'coin-change', 'total_submitted': 235762, 'question__article__live': True, 'is_new_question': False, 'question_id': 322}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Create Maximum Number', 'question__title_slug': 'create-maximum-number', 'total_acs': 18247, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 74662, 'question__article__live': None, 'is_new_question': False, 'question_id': 321}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Generalized Abbreviation', 'question__title_slug': 'generalized-abbreviation', 'total_acs': 21850, 'question__hide': False, 'question__article__slug': 'generalized-abbreviation', 'total_submitted': 48899, 'question__article__live': True, 'is_new_question': False, 'question_id': 320}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Bulb Switcher', 'question__title_slug': 'bulb-switcher', 'total_acs': 39621, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 93485, 'question__article__live': None, 'is_new_question': False, 'question_id': 319}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximum Product of Word Lengths', 'question__title_slug': 'maximum-product-of-word-lengths', 'total_acs': 50105, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 114018, 'question__article__live': None, 'is_new_question': False, 'question_id': 318}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Shortest Distance from All Buildings', 'question__title_slug': 'shortest-distance-from-all-buildings', 'total_acs': 16562, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 49067, 'question__article__live': None, 'is_new_question': False, 'question_id': 317}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove Duplicate Letters', 'question__title_slug': 'remove-duplicate-letters', 'total_acs': 30324, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 103393, 'question__article__live': None, 'is_new_question': False, 'question_id': 316}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Count of Smaller Numbers After Self', 'question__title_slug': 'count-of-smaller-numbers-after-self', 'total_acs': 32896, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 95769, 'question__article__live': None, 'is_new_question': False, 'question_id': 315}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Binary Tree Vertical Order Traversal', 'question__title_slug': 'binary-tree-vertical-order-traversal', 'total_acs': 27098, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 74566, 'question__article__live': None, 'is_new_question': False, 'question_id': 314}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Super Ugly Number', 'question__title_slug': 'super-ugly-number', 'total_acs': 36730, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 97655, 'question__article__live': None, 'is_new_question': False, 'question_id': 313}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Burst Balloons', 'question__title_slug': 'burst-balloons', 'total_acs': 26817, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 63224, 'question__article__live': None, 'is_new_question': False, 'question_id': 312}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Sparse Matrix Multiplication', 'question__title_slug': 'sparse-matrix-multiplication', 'total_acs': 28697, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 56660, 'question__article__live': None, 'is_new_question': False, 'question_id': 311}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Height Trees', 'question__title_slug': 'minimum-height-trees', 'total_acs': 33185, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 115364, 'question__article__live': None, 'is_new_question': False, 'question_id': 310}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Best Time to Buy and Sell Stock with Cooldown', 'question__title_slug': 'best-time-to-buy-and-sell-stock-with-cooldown', 'total_acs': 42071, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 103778, 'question__article__live': None, 'is_new_question': False, 'question_id': 309}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Range Sum Query 2D - Mutable', 'question__title_slug': 'range-sum-query-2d-mutable', 'total_acs': 14809, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 66625, 'question__article__live': None, 'is_new_question': False, 'question_id': 308}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Range Sum Query - Mutable', 'question__title_slug': 'range-sum-query-mutable', 'total_acs': 33078, 'question__hide': False, 'question__article__slug': 'range-sum-query-mutable', 'total_submitted': 163145, 'question__article__live': True, 'is_new_question': False, 'question_id': 307}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Additive Number', 'question__title_slug': 'additive-number', 'total_acs': 24999, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 90737, 'question__article__live': None, 'is_new_question': False, 'question_id': 306}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Number of Islands II', 'question__title_slug': 'number-of-islands-ii', 'total_acs': 22454, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 57900, 'question__article__live': None, 'is_new_question': False, 'question_id': 305}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Range Sum Query 2D - Immutable', 'question__title_slug': 'range-sum-query-2d-immutable', 'total_acs': 32919, 'question__hide': False, 'question__article__slug': 'range-sum-query-2d-immutable', 'total_submitted': 132818, 'question__article__live': True, 'is_new_question': False, 'question_id': 304}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Range Sum Query - Immutable', 'question__title_slug': 'range-sum-query-immutable', 'total_acs': 70953, 'question__hide': False, 'question__article__slug': 'range-sum-query-immutable', 'total_submitted': 243608, 'question__article__live': True, 'is_new_question': False, 'question_id': 303}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Smallest Rectangle Enclosing Black Pixels', 'question__title_slug': 'smallest-rectangle-enclosing-black-pixels', 'total_acs': 13694, 'question__hide': False, 'question__article__slug': 'smallest-rectangle-enclosing-black-pixels', 'total_submitted': 30310, 'question__article__live': True, 'is_new_question': False, 'question_id': 302}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove Invalid Parentheses', 'question__title_slug': 'remove-invalid-parentheses', 'total_acs': 42290, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 120758, 'question__article__live': None, 'is_new_question': False, 'question_id': 301}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Increasing Subsequence', 'question__title_slug': 'longest-increasing-subsequence', 'total_acs': 81039, 'question__hide': False, 'question__article__slug': 'longest-increasing-subsequence', 'total_submitted': 211856, 'question__article__live': True, 'is_new_question': False, 'question_id': 300}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Bulls and Cows', 'question__title_slug': 'bulls-and-cows', 'total_acs': 58040, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 167868, 'question__article__live': None, 'is_new_question': False, 'question_id': 299}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Binary Tree Longest Consecutive Sequence', 'question__title_slug': 'binary-tree-longest-consecutive-sequence', 'total_acs': 30112, 'question__hide': False, 'question__article__slug': 'binary-tree-longest-consecutive-sequence', 'total_submitted': 73967, 'question__article__live': True, 'is_new_question': False, 'question_id': 298}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Serialize and Deserialize Binary Tree', 'question__title_slug': 'serialize-and-deserialize-binary-tree', 'total_acs': 64776, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 195897, 'question__article__live': None, 'is_new_question': False, 'question_id': 297}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Best Meeting Point', 'question__title_slug': 'best-meeting-point', 'total_acs': 12647, 'question__hide': False, 'question__article__slug': 'best-meeting-point', 'total_submitted': 24483, 'question__article__live': True, 'is_new_question': False, 'question_id': 296}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find Median from Data Stream', 'question__title_slug': 'find-median-from-data-stream', 'total_acs': 42623, 'question__hide': False, 'question__article__slug': 'find-median-from-data-stream', 'total_submitted': 162853, 'question__article__live': True, 'is_new_question': False, 'question_id': 295}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Flip Game II', 'question__title_slug': 'flip-game-ii', 'total_acs': 25191, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 54579, 'question__article__live': None, 'is_new_question': False, 'question_id': 294}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Flip Game', 'question__title_slug': 'flip-game', 'total_acs': 24402, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 43935, 'question__article__live': None, 'is_new_question': False, 'question_id': 293}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Nim Game', 'question__title_slug': 'nim-game', 'total_acs': 137181, 'question__hide': False, 'question__article__slug': 'nim-game', 'total_submitted': 248617, 'question__article__live': True, 'is_new_question': False, 'question_id': 292}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Word Pattern II', 'question__title_slug': 'word-pattern-ii', 'total_acs': 15495, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 40865, 'question__article__live': None, 'is_new_question': False, 'question_id': 291}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Word Pattern', 'question__title_slug': 'word-pattern', 'total_acs': 79298, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 240802, 'question__article__live': None, 'is_new_question': False, 'question_id': 290}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Game of Life', 'question__title_slug': 'game-of-life', 'total_acs': 47863, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 130227, 'question__article__live': None, 'is_new_question': False, 'question_id': 289}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Unique Word Abbreviation', 'question__title_slug': 'unique-word-abbreviation', 'total_acs': 26132, 'question__hide': False, 'question__article__slug': 'unique-word-abbreviation', 'total_submitted': 158722, 'question__article__live': True, 'is_new_question': False, 'question_id': 288}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find the Duplicate Number', 'question__title_slug': 'find-the-duplicate-number', 'total_acs': 71765, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 166314, 'question__article__live': None, 'is_new_question': False, 'question_id': 287}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Walls and Gates', 'question__title_slug': 'walls-and-gates', 'total_acs': 31369, 'question__hide': False, 'question__article__slug': 'walls-and-gates', 'total_submitted': 71583, 'question__article__live': True, 'is_new_question': False, 'question_id': 286}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Inorder Successor in BST', 'question__title_slug': 'inorder-successor-in-bst', 'total_acs': 34433, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 95507, 'question__article__live': None, 'is_new_question': False, 'question_id': 285}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Peeking Iterator', 'question__title_slug': 'peeking-iterator', 'total_acs': 42726, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 120755, 'question__article__live': None, 'is_new_question': False, 'question_id': 284}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Move Zeroes', 'question__title_slug': 'move-zeroes', 'total_acs': 194766, 'question__hide': False, 'question__article__slug': 'move-zeroes', 'total_submitted': 392435, 'question__article__live': True, 'is_new_question': False, 'question_id': 283}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Expression Add Operators', 'question__title_slug': 'expression-add-operators', 'total_acs': 31617, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 107035, 'question__article__live': None, 'is_new_question': False, 'question_id': 282}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Zigzag Iterator', 'question__title_slug': 'zigzag-iterator', 'total_acs': 26513, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 52842, 'question__article__live': None, 'is_new_question': False, 'question_id': 281}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Wiggle Sort', 'question__title_slug': 'wiggle-sort', 'total_acs': 28712, 'question__hide': False, 'question__article__slug': 'wiggle-sort', 'total_submitted': 50544, 'question__article__live': True, 'is_new_question': False, 'question_id': 280}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Perfect Squares', 'question__title_slug': 'perfect-squares', 'total_acs': 77739, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 212701, 'question__article__live': None, 'is_new_question': False, 'question_id': 279}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'First Bad Version', 'question__title_slug': 'first-bad-version', 'total_acs': 102928, 'question__hide': False, 'question__article__slug': 'first-bad-version', 'total_submitted': 409903, 'question__article__live': True, 'is_new_question': False, 'question_id': 278}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Find the Celebrity', 'question__title_slug': 'find-the-celebrity', 'total_acs': 29676, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 84190, 'question__article__live': None, 'is_new_question': False, 'question_id': 277}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Paint Fence', 'question__title_slug': 'paint-fence', 'total_acs': 23284, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 68022, 'question__article__live': None, 'is_new_question': False, 'question_id': 276}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'H-Index II', 'question__title_slug': 'h-index-ii', 'total_acs': 48620, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 141949, 'question__article__live': None, 'is_new_question': False, 'question_id': 275}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'H-Index', 'question__title_slug': 'h-index', 'total_acs': 74915, 'question__hide': False, 'question__article__slug': 'h-index', 'total_submitted': 227011, 'question__article__live': True, 'is_new_question': False, 'question_id': 274}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Integer to English Words', 'question__title_slug': 'integer-to-english-words', 'total_acs': 38282, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 174392, 'question__article__live': None, 'is_new_question': False, 'question_id': 273}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Closest Binary Search Tree Value II', 'question__title_slug': 'closest-binary-search-tree-value-ii', 'total_acs': 16799, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 43521, 'question__article__live': None, 'is_new_question': False, 'question_id': 272}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Encode and Decode Strings', 'question__title_slug': 'encode-and-decode-strings', 'total_acs': 21078, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 80745, 'question__article__live': None, 'is_new_question': False, 'question_id': 271}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Closest Binary Search Tree Value', 'question__title_slug': 'closest-binary-search-tree-value', 'total_acs': 34880, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 88919, 'question__article__live': None, 'is_new_question': False, 'question_id': 270}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Alien Dictionary', 'question__title_slug': 'alien-dictionary', 'total_acs': 26001, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 110355, 'question__article__live': None, 'is_new_question': False, 'question_id': 269}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Missing Number', 'question__title_slug': 'missing-number', 'total_acs': 120314, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 272672, 'question__article__live': None, 'is_new_question': False, 'question_id': 268}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Palindrome Permutation II', 'question__title_slug': 'palindrome-permutation-ii', 'total_acs': 13576, 'question__hide': False, 'question__article__slug': 'palindrome-permutation-ii', 'total_submitted': 42722, 'question__article__live': True, 'is_new_question': False, 'question_id': 267}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Palindrome Permutation', 'question__title_slug': 'palindrome-permutation', 'total_acs': 31978, 'question__hide': False, 'question__article__slug': 'palindrome-permutation', 'total_submitted': 56431, 'question__article__live': True, 'is_new_question': False, 'question_id': 266}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Paint House II', 'question__title_slug': 'paint-house-ii', 'total_acs': 21046, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 55640, 'question__article__live': None, 'is_new_question': False, 'question_id': 265}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Ugly Number II', 'question__title_slug': 'ugly-number-ii', 'total_acs': 59107, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 182179, 'question__article__live': None, 'is_new_question': False, 'question_id': 264}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Ugly Number', 'question__title_slug': 'ugly-number', 'total_acs': 102084, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 261111, 'question__article__live': None, 'is_new_question': False, 'question_id': 263}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Graph Valid Tree', 'question__title_slug': 'graph-valid-tree', 'total_acs': 36846, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 98164, 'question__article__live': None, 'is_new_question': False, 'question_id': 261}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Single Number III', 'question__title_slug': 'single-number-iii', 'total_acs': 67451, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 131602, 'question__article__live': None, 'is_new_question': False, 'question_id': 260}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': '3Sum Smaller', 'question__title_slug': '3sum-smaller', 'total_acs': 25577, 'question__hide': False, 'question__article__slug': '3sum-smaller', 'total_submitted': 62004, 'question__article__live': True, 'is_new_question': False, 'question_id': 259}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Add Digits', 'question__title_slug': 'add-digits', 'total_acs': 165973, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 325223, 'question__article__live': None, 'is_new_question': False, 'question_id': 258}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Tree Paths', 'question__title_slug': 'binary-tree-paths', 'total_acs': 112823, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 297287, 'question__article__live': None, 'is_new_question': False, 'question_id': 257}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Paint House', 'question__title_slug': 'paint-house', 'total_acs': 23046, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 50211, 'question__article__live': None, 'is_new_question': False, 'question_id': 256}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Verify Preorder Sequence in Binary Search Tree', 'question__title_slug': 'verify-preorder-sequence-in-binary-search-tree', 'total_acs': 19280, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 48180, 'question__article__live': None, 'is_new_question': False, 'question_id': 255}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Factor Combinations', 'question__title_slug': 'factor-combinations', 'total_acs': 26051, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 61670, 'question__article__live': None, 'is_new_question': False, 'question_id': 254}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Meeting Rooms II', 'question__title_slug': 'meeting-rooms-ii', 'total_acs': 40013, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 103164, 'question__article__live': None, 'is_new_question': False, 'question_id': 253}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Meeting Rooms', 'question__title_slug': 'meeting-rooms', 'total_acs': 31916, 'question__hide': False, 'question__article__slug': 'meeting-rooms', 'total_submitted': 67878, 'question__article__live': True, 'is_new_question': False, 'question_id': 252}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Flatten 2D Vector', 'question__title_slug': 'flatten-2d-vector', 'total_acs': 25470, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 63315, 'question__article__live': None, 'is_new_question': False, 'question_id': 251}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Count Univalue Subtrees', 'question__title_slug': 'count-univalue-subtrees', 'total_acs': 15908, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 38086, 'question__article__live': None, 'is_new_question': False, 'question_id': 250}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Group Shifted Strings', 'question__title_slug': 'group-shifted-strings', 'total_acs': 24817, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 60552, 'question__article__live': None, 'is_new_question': False, 'question_id': 249}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Strobogrammatic Number III', 'question__title_slug': 'strobogrammatic-number-iii', 'total_acs': 9411, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 29668, 'question__article__live': None, 'is_new_question': False, 'question_id': 248}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Strobogrammatic Number II', 'question__title_slug': 'strobogrammatic-number-ii', 'total_acs': 21186, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 53560, 'question__article__live': None, 'is_new_question': False, 'question_id': 247}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Strobogrammatic Number', 'question__title_slug': 'strobogrammatic-number', 'total_acs': 26275, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 66338, 'question__article__live': None, 'is_new_question': False, 'question_id': 246}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Shortest Word Distance III', 'question__title_slug': 'shortest-word-distance-iii', 'total_acs': 20077, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 39997, 'question__article__live': None, 'is_new_question': False, 'question_id': 245}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Shortest Word Distance II', 'question__title_slug': 'shortest-word-distance-ii', 'total_acs': 22019, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 58837, 'question__article__live': None, 'is_new_question': False, 'question_id': 244}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Shortest Word Distance', 'question__title_slug': 'shortest-word-distance', 'total_acs': 31013, 'question__hide': False, 'question__article__slug': 'shortest-word-distance', 'total_submitted': 59498, 'question__article__live': True, 'is_new_question': False, 'question_id': 243}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Valid Anagram', 'question__title_slug': 'valid-anagram', 'total_acs': 161143, 'question__hide': False, 'question__article__slug': 'valid-anagram', 'total_submitted': 348847, 'question__article__live': True, 'is_new_question': False, 'question_id': 242}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Different Ways to Add Parentheses', 'question__title_slug': 'different-ways-to-add-parentheses', 'total_acs': 44310, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 101588, 'question__article__live': None, 'is_new_question': False, 'question_id': 241}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Search a 2D Matrix II', 'question__title_slug': 'search-a-2d-matrix-ii', 'total_acs': 78937, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 205616, 'question__article__live': None, 'is_new_question': False, 'question_id': 240}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sliding Window Maximum', 'question__title_slug': 'sliding-window-maximum', 'total_acs': 62408, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 190496, 'question__article__live': None, 'is_new_question': False, 'question_id': 239}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Product of Array Except Self', 'question__title_slug': 'product-of-array-except-self', 'total_acs': 101657, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 208371, 'question__article__live': None, 'is_new_question': False, 'question_id': 238}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Delete Node in a Linked List', 'question__title_slug': 'delete-node-in-a-linked-list', 'total_acs': 157319, 'question__hide': False, 'question__article__slug': 'delete-node-linked-list', 'total_submitted': 339477, 'question__article__live': True, 'is_new_question': False, 'question_id': 237}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Lowest Common Ancestor of a Binary Tree', 'question__title_slug': 'lowest-common-ancestor-of-a-binary-tree', 'total_acs': 107268, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 361260, 'question__article__live': None, 'is_new_question': False, 'question_id': 236}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Lowest Common Ancestor of a Binary Search Tree', 'question__title_slug': 'lowest-common-ancestor-of-a-binary-search-tree', 'total_acs': 143129, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 368235, 'question__article__live': None, 'is_new_question': False, 'question_id': 235}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Palindrome Linked List', 'question__title_slug': 'palindrome-linked-list', 'total_acs': 108392, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 332855, 'question__article__live': None, 'is_new_question': False, 'question_id': 234}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Number of Digit One', 'question__title_slug': 'number-of-digit-one', 'total_acs': 29523, 'question__hide': False, 'question__article__slug': 'number-of-digit-one', 'total_submitted': 104536, 'question__article__live': True, 'is_new_question': False, 'question_id': 233}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Implement Queue using Stacks', 'question__title_slug': 'implement-queue-using-stacks', 'total_acs': 83225, 'question__hide': False, 'question__article__slug': 'implement-queue-using-stacks', 'total_submitted': 228044, 'question__article__live': True, 'is_new_question': False, 'question_id': 232}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Power of Two', 'question__title_slug': 'power-of-two', 'total_acs': 137766, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 344125, 'question__article__live': None, 'is_new_question': False, 'question_id': 231}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Kth Smallest Element in a BST', 'question__title_slug': 'kth-smallest-element-in-a-bst', 'total_acs': 101144, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 232129, 'question__article__live': None, 'is_new_question': False, 'question_id': 230}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Majority Element II', 'question__title_slug': 'majority-element-ii', 'total_acs': 55494, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 194692, 'question__article__live': None, 'is_new_question': False, 'question_id': 229}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Summary Ranges', 'question__title_slug': 'summary-ranges', 'total_acs': 79241, 'question__hide': False, 'question__article__slug': 'summary-ranges', 'total_submitted': 268425, 'question__article__live': True, 'is_new_question': False, 'question_id': 228}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Basic Calculator II', 'question__title_slug': 'basic-calculator-ii', 'total_acs': 47493, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 163192, 'question__article__live': None, 'is_new_question': False, 'question_id': 227}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Invert Binary Tree', 'question__title_slug': 'invert-binary-tree', 'total_acs': 178151, 'question__hide': False, 'question__article__slug': 'invert-binary-tree', 'total_submitted': 345591, 'question__article__live': True, 'is_new_question': False, 'question_id': 226}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Implement Stack using Queues', 'question__title_slug': 'implement-stack-using-queues', 'total_acs': 74550, 'question__hide': False, 'question__article__slug': 'implement-stack-using-queues', 'total_submitted': 228362, 'question__article__live': True, 'is_new_question': False, 'question_id': 225}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Basic Calculator', 'question__title_slug': 'basic-calculator', 'total_acs': 50078, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 186595, 'question__article__live': None, 'is_new_question': False, 'question_id': 224}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Rectangle Area', 'question__title_slug': 'rectangle-area', 'total_acs': 62042, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 189351, 'question__article__live': None, 'is_new_question': False, 'question_id': 223}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Count Complete Tree Nodes', 'question__title_slug': 'count-complete-tree-nodes', 'total_acs': 62728, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 228980, 'question__article__live': None, 'is_new_question': False, 'question_id': 222}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximal Square', 'question__title_slug': 'maximal-square', 'total_acs': 62576, 'question__hide': False, 'question__article__slug': 'maximal-square', 'total_submitted': 218729, 'question__article__live': True, 'is_new_question': False, 'question_id': 221}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Contains Duplicate III', 'question__title_slug': 'contains-duplicate-iii', 'total_acs': 54000, 'question__hide': False, 'question__article__slug': 'contains-duplicate-iii', 'total_submitted': 282555, 'question__article__live': True, 'is_new_question': False, 'question_id': 220}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Contains Duplicate II', 'question__title_slug': 'contains-duplicate-ii', 'total_acs': 113058, 'question__hide': False, 'question__article__slug': 'contains-duplicate-ii', 'total_submitted': 350781, 'question__article__live': True, 'is_new_question': False, 'question_id': 219}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'The Skyline Problem', 'question__title_slug': 'the-skyline-problem', 'total_acs': 41894, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 155547, 'question__article__live': None, 'is_new_question': False, 'question_id': 218}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Contains Duplicate', 'question__title_slug': 'contains-duplicate', 'total_acs': 164013, 'question__hide': False, 'question__article__slug': 'contains-duplicate', 'total_submitted': 360680, 'question__article__live': True, 'is_new_question': False, 'question_id': 217}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Combination Sum III', 'question__title_slug': 'combination-sum-iii', 'total_acs': 68868, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 154181, 'question__article__live': None, 'is_new_question': False, 'question_id': 216}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Kth Largest Element in an Array', 'question__title_slug': 'kth-largest-element-in-an-array', 'total_acs': 136840, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 351205, 'question__article__live': None, 'is_new_question': False, 'question_id': 215}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Shortest Palindrome', 'question__title_slug': 'shortest-palindrome', 'total_acs': 40480, 'question__hide': False, 'question__article__slug': 'shortest-palindrome', 'total_submitted': 168241, 'question__article__live': True, 'is_new_question': False, 'question_id': 214}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'House Robber II', 'question__title_slug': 'house-robber-ii', 'total_acs': 56946, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 168359, 'question__article__live': None, 'is_new_question': False, 'question_id': 213}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Word Search II', 'question__title_slug': 'word-search-ii', 'total_acs': 45712, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 196923, 'question__article__live': None, 'is_new_question': False, 'question_id': 212}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Add and Search Word - Data structure design', 'question__title_slug': 'add-and-search-word-data-structure-design', 'total_acs': 54649, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 243991, 'question__article__live': None, 'is_new_question': False, 'question_id': 211}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Course Schedule II', 'question__title_slug': 'course-schedule-ii', 'total_acs': 62920, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 228028, 'question__article__live': None, 'is_new_question': False, 'question_id': 210}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Size Subarray Sum', 'question__title_slug': 'minimum-size-subarray-sum', 'total_acs': 84494, 'question__hide': False, 'question__article__slug': 'minimum-size-subarray-sum', 'total_submitted': 278657, 'question__article__live': True, 'is_new_question': False, 'question_id': 209}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Implement Trie (Prefix Tree)', 'question__title_slug': 'implement-trie-prefix-tree', 'total_acs': 76969, 'question__hide': False, 'question__article__slug': 'implement-trie-prefix-tree', 'total_submitted': 276824, 'question__article__live': True, 'is_new_question': False, 'question_id': 208}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Course Schedule', 'question__title_slug': 'course-schedule', 'total_acs': 84303, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 264843, 'question__article__live': None, 'is_new_question': False, 'question_id': 207}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse Linked List', 'question__title_slug': 'reverse-linked-list', 'total_acs': 236047, 'question__hide': False, 'question__article__slug': 'reverse-linked-list', 'total_submitted': 522341, 'question__article__live': True, 'is_new_question': False, 'question_id': 206}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Isomorphic Strings', 'question__title_slug': 'isomorphic-strings', 'total_acs': 106953, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 318065, 'question__article__live': None, 'is_new_question': False, 'question_id': 205}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Count Primes', 'question__title_slug': 'count-primes', 'total_acs': 117601, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 443363, 'question__article__live': None, 'is_new_question': False, 'question_id': 204}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove Linked List Elements', 'question__title_slug': 'remove-linked-list-elements', 'total_acs': 117625, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 365148, 'question__article__live': None, 'is_new_question': False, 'question_id': 203}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Happy Number', 'question__title_slug': 'happy-number', 'total_acs': 125283, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 309575, 'question__article__live': None, 'is_new_question': False, 'question_id': 202}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Bitwise AND of Numbers Range', 'question__title_slug': 'bitwise-and-of-numbers-range', 'total_acs': 55739, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 164479, 'question__article__live': None, 'is_new_question': False, 'question_id': 201}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Number of Islands', 'question__title_slug': 'number-of-islands', 'total_acs': 110074, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 321723, 'question__article__live': None, 'is_new_question': False, 'question_id': 200}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Tree Right Side View', 'question__title_slug': 'binary-tree-right-side-view', 'total_acs': 82180, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 202865, 'question__article__live': None, 'is_new_question': False, 'question_id': 199}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'House Robber', 'question__title_slug': 'house-robber', 'total_acs': 139816, 'question__hide': False, 'question__article__slug': 'house-robber', 'total_submitted': 361323, 'question__article__live': True, 'is_new_question': False, 'question_id': 198}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Number of 1 Bits', 'question__title_slug': 'number-of-1-bits', 'total_acs': 153842, 'question__hide': False, 'question__article__slug': 'number-1-bits', 'total_submitted': 390081, 'question__article__live': True, 'is_new_question': False, 'question_id': 191}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse Bits', 'question__title_slug': 'reverse-bits', 'total_acs': 106280, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 359760, 'question__article__live': None, 'is_new_question': False, 'question_id': 190}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Rotate Array', 'question__title_slug': 'rotate-array', 'total_acs': 130749, 'question__hide': False, 'question__article__slug': 'rotate-array', 'total_submitted': 535044, 'question__article__live': True, 'is_new_question': False, 'question_id': 189}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Best Time to Buy and Sell Stock IV', 'question__title_slug': 'best-time-to-buy-and-sell-stock-iv', 'total_acs': 46730, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 192839, 'question__article__live': None, 'is_new_question': False, 'question_id': 188}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Repeated DNA Sequences', 'question__title_slug': 'repeated-dna-sequences', 'total_acs': 76331, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 244829, 'question__article__live': None, 'is_new_question': False, 'question_id': 187}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Reverse Words in a String II', 'question__title_slug': 'reverse-words-in-a-string-ii', 'total_acs': 27359, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 99116, 'question__article__live': None, 'is_new_question': False, 'question_id': 186}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Largest Number', 'question__title_slug': 'largest-number', 'total_acs': 74941, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 334023, 'question__article__live': None, 'is_new_question': False, 'question_id': 179}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Dungeon Game', 'question__title_slug': 'dungeon-game', 'total_acs': 39671, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 167829, 'question__article__live': None, 'is_new_question': False, 'question_id': 174}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Search Tree Iterator', 'question__title_slug': 'binary-search-tree-iterator', 'total_acs': 92100, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 224513, 'question__article__live': None, 'is_new_question': False, 'question_id': 173}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Factorial Trailing Zeroes', 'question__title_slug': 'factorial-trailing-zeroes', 'total_acs': 94443, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 263539, 'question__article__live': None, 'is_new_question': False, 'question_id': 172}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Excel Sheet Column Number', 'question__title_slug': 'excel-sheet-column-number', 'total_acs': 133000, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 283878, 'question__article__live': None, 'is_new_question': False, 'question_id': 171}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Two Sum III - Data structure design', 'question__title_slug': 'two-sum-iii-data-structure-design', 'total_acs': 27294, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 112828, 'question__article__live': None, 'is_new_question': False, 'question_id': 170}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Majority Element', 'question__title_slug': 'majority-element', 'total_acs': 199738, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 430541, 'question__article__live': None, 'is_new_question': False, 'question_id': 169}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Excel Sheet Column Title', 'question__title_slug': 'excel-sheet-column-title', 'total_acs': 104325, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 405399, 'question__article__live': None, 'is_new_question': False, 'question_id': 168}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Two Sum II - Input array is sorted', 'question__title_slug': 'two-sum-ii-input-array-is-sorted', 'total_acs': 83981, 'question__hide': False, 'question__article__slug': 'two-sum-ii-input-array-sorted', 'total_submitted': 178368, 'question__article__live': True, 'is_new_question': False, 'question_id': 167}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Fraction to Recurring Decimal', 'question__title_slug': 'fraction-to-recurring-decimal', 'total_acs': 52059, 'question__hide': False, 'question__article__slug': 'fraction-recurring-decimal', 'total_submitted': 299092, 'question__article__live': True, 'is_new_question': False, 'question_id': 166}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Compare Version Numbers', 'question__title_slug': 'compare-version-numbers', 'total_acs': 84907, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 425325, 'question__article__live': None, 'is_new_question': False, 'question_id': 165}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximum Gap', 'question__title_slug': 'maximum-gap', 'total_acs': 48105, 'question__hide': False, 'question__article__slug': 'maximum-gap', 'total_submitted': 163734, 'question__article__live': True, 'is_new_question': False, 'question_id': 164}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Missing Ranges', 'question__title_slug': 'missing-ranges', 'total_acs': 28349, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 114465, 'question__article__live': None, 'is_new_question': False, 'question_id': 163}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find Peak Element', 'question__title_slug': 'find-peak-element', 'total_acs': 115257, 'question__hide': False, 'question__article__slug': 'find-peak-element', 'total_submitted': 310039, 'question__article__live': True, 'is_new_question': False, 'question_id': 162}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'One Edit Distance', 'question__title_slug': 'one-edit-distance', 'total_acs': 33687, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 108159, 'question__article__live': None, 'is_new_question': False, 'question_id': 161}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Intersection of Two Linked Lists', 'question__title_slug': 'intersection-of-two-linked-lists', 'total_acs': 135371, 'question__hide': False, 'question__article__slug': 'intersection-two-linked-lists', 'total_submitted': 443714, 'question__article__live': True, 'is_new_question': False, 'question_id': 160}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Longest Substring with At Most Two Distinct Characters', 'question__title_slug': 'longest-substring-with-at-most-two-distinct-characters', 'total_acs': 26937, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 65788, 'question__article__live': None, 'is_new_question': False, 'question_id': 159}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Read N Characters Given Read4 II - Call multiple times', 'question__title_slug': 'read-n-characters-given-read4-ii-call-multiple-times', 'total_acs': 26668, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 110502, 'question__article__live': None, 'is_new_question': False, 'question_id': 158}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Read N Characters Given Read4', 'question__title_slug': 'read-n-characters-given-read4', 'total_acs': 32133, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 110961, 'question__article__live': None, 'is_new_question': False, 'question_id': 157}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': True, 'stat': {'question__title': 'Binary Tree Upside Down', 'question__title_slug': 'binary-tree-upside-down', 'total_acs': 25518, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 57759, 'question__article__live': None, 'is_new_question': False, 'question_id': 156}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Min Stack', 'question__title_slug': 'min-stack', 'total_acs': 133102, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 469925, 'question__article__live': None, 'is_new_question': False, 'question_id': 155}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find Minimum in Rotated Sorted Array II', 'question__title_slug': 'find-minimum-in-rotated-sorted-array-ii', 'total_acs': 79431, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 214797, 'question__article__live': None, 'is_new_question': False, 'question_id': 154}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Find Minimum in Rotated Sorted Array', 'question__title_slug': 'find-minimum-in-rotated-sorted-array', 'total_acs': 152731, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 384856, 'question__article__live': None, 'is_new_question': False, 'question_id': 153}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximum Product Subarray', 'question__title_slug': 'maximum-product-subarray', 'total_acs': 102878, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 403446, 'question__article__live': None, 'is_new_question': False, 'question_id': 152}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse Words in a String', 'question__title_slug': 'reverse-words-in-a-string', 'total_acs': 159665, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 1016486, 'question__article__live': None, 'is_new_question': False, 'question_id': 151}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Evaluate Reverse Polish Notation', 'question__title_slug': 'evaluate-reverse-polish-notation', 'total_acs': 94247, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 348935, 'question__article__live': None, 'is_new_question': False, 'question_id': 150}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Max Points on a Line', 'question__title_slug': 'max-points-on-a-line', 'total_acs': 79707, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 520341, 'question__article__live': None, 'is_new_question': False, 'question_id': 149}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sort List', 'question__title_slug': 'sort-list', 'total_acs': 106534, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 373505, 'question__article__live': None, 'is_new_question': False, 'question_id': 148}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Insertion Sort List', 'question__title_slug': 'insertion-sort-list', 'total_acs': 102500, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 311442, 'question__article__live': None, 'is_new_question': False, 'question_id': 147}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'LRU Cache', 'question__title_slug': 'lru-cache', 'total_acs': 128072, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 733053, 'question__article__live': None, 'is_new_question': False, 'question_id': 146}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Tree Postorder Traversal', 'question__title_slug': 'binary-tree-postorder-traversal', 'total_acs': 144310, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 361456, 'question__article__live': None, 'is_new_question': False, 'question_id': 145}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Tree Preorder Traversal', 'question__title_slug': 'binary-tree-preorder-traversal', 'total_acs': 183176, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 409522, 'question__article__live': None, 'is_new_question': False, 'question_id': 144}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reorder List', 'question__title_slug': 'reorder-list', 'total_acs': 93764, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 368459, 'question__article__live': None, 'is_new_question': False, 'question_id': 143}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Linked List Cycle II', 'question__title_slug': 'linked-list-cycle-ii', 'total_acs': 116554, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 375826, 'question__article__live': None, 'is_new_question': False, 'question_id': 142}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Linked List Cycle', 'question__title_slug': 'linked-list-cycle', 'total_acs': 185499, 'question__hide': False, 'question__article__slug': 'linked-list-cycle', 'total_submitted': 524118, 'question__article__live': True, 'is_new_question': False, 'question_id': 141}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Word Break II', 'question__title_slug': 'word-break-ii', 'total_acs': 89374, 'question__hide': False, 'question__article__slug': 'word-break-ii', 'total_submitted': 387204, 'question__article__live': True, 'is_new_question': False, 'question_id': 140}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Word Break', 'question__title_slug': 'word-break', 'total_acs': 150736, 'question__hide': False, 'question__article__slug': 'word-break', 'total_submitted': 508664, 'question__article__live': True, 'is_new_question': False, 'question_id': 139}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Copy List with Random Pointer', 'question__title_slug': 'copy-list-with-random-pointer', 'total_acs': 115692, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 439129, 'question__article__live': None, 'is_new_question': False, 'question_id': 138}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Single Number II', 'question__title_slug': 'single-number-ii', 'total_acs': 117547, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 284638, 'question__article__live': None, 'is_new_question': False, 'question_id': 137}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Single Number', 'question__title_slug': 'single-number', 'total_acs': 224299, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 413703, 'question__article__live': None, 'is_new_question': False, 'question_id': 136}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Candy', 'question__title_slug': 'candy', 'total_acs': 69188, 'question__hide': False, 'question__article__slug': 'candy', 'total_submitted': 281515, 'question__article__live': True, 'is_new_question': False, 'question_id': 135}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Gas Station', 'question__title_slug': 'gas-station', 'total_acs': 86736, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 297016, 'question__article__live': None, 'is_new_question': False, 'question_id': 134}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Clone Graph', 'question__title_slug': 'clone-graph', 'total_acs': 113003, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 449998, 'question__article__live': None, 'is_new_question': False, 'question_id': 133}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Palindrome Partitioning II', 'question__title_slug': 'palindrome-partitioning-ii', 'total_acs': 70325, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 292384, 'question__article__live': None, 'is_new_question': False, 'question_id': 132}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Palindrome Partitioning', 'question__title_slug': 'palindrome-partitioning', 'total_acs': 97197, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 295639, 'question__article__live': None, 'is_new_question': False, 'question_id': 131}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Surrounded Regions', 'question__title_slug': 'surrounded-regions', 'total_acs': 82663, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 452606, 'question__article__live': None, 'is_new_question': False, 'question_id': 130}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sum Root to Leaf Numbers', 'question__title_slug': 'sum-root-to-leaf-numbers', 'total_acs': 112448, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 308990, 'question__article__live': None, 'is_new_question': False, 'question_id': 129}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Consecutive Sequence', 'question__title_slug': 'longest-consecutive-sequence', 'total_acs': 105536, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 288588, 'question__article__live': None, 'is_new_question': False, 'question_id': 128}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Word Ladder', 'question__title_slug': 'word-ladder', 'total_acs': 124961, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 646474, 'question__article__live': None, 'is_new_question': False, 'question_id': 127}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Word Ladder II', 'question__title_slug': 'word-ladder-ii', 'total_acs': 67699, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 481998, 'question__article__live': None, 'is_new_question': False, 'question_id': 126}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Valid Palindrome', 'question__title_slug': 'valid-palindrome', 'total_acs': 165369, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 633516, 'question__article__live': None, 'is_new_question': False, 'question_id': 125}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Tree Maximum Path Sum', 'question__title_slug': 'binary-tree-maximum-path-sum', 'total_acs': 98618, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 380325, 'question__article__live': None, 'is_new_question': False, 'question_id': 124}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Best Time to Buy and Sell Stock III', 'question__title_slug': 'best-time-to-buy-and-sell-stock-iii', 'total_acs': 86717, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 298092, 'question__article__live': None, 'is_new_question': False, 'question_id': 123}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Best Time to Buy and Sell Stock II', 'question__title_slug': 'best-time-to-buy-and-sell-stock-ii', 'total_acs': 147397, 'question__hide': False, 'question__article__slug': 'best-time-buy-and-sell-stock-ii', 'total_submitted': 315001, 'question__article__live': True, 'is_new_question': False, 'question_id': 122}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Best Time to Buy and Sell Stock', 'question__title_slug': 'best-time-to-buy-and-sell-stock', 'total_acs': 199570, 'question__hide': False, 'question__article__slug': 'best-time-buy-and-sell-stock', 'total_submitted': 487699, 'question__article__live': True, 'is_new_question': False, 'question_id': 121}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Triangle', 'question__title_slug': 'triangle', 'total_acs': 106387, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 316795, 'question__article__live': None, 'is_new_question': False, 'question_id': 120}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': "Pascal's Triangle II", 'question__title_slug': 'pascals-triangle-ii', 'total_acs': 117725, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 321911, 'question__article__live': None, 'is_new_question': False, 'question_id': 119}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': "Pascal's Triangle", 'question__title_slug': 'pascals-triangle', 'total_acs': 133821, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 349399, 'question__article__live': None, 'is_new_question': False, 'question_id': 118}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Populating Next Right Pointers in Each Node II', 'question__title_slug': 'populating-next-right-pointers-in-each-node-ii', 'total_acs': 98745, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 292768, 'question__article__live': None, 'is_new_question': False, 'question_id': 117}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Populating Next Right Pointers in Each Node', 'question__title_slug': 'populating-next-right-pointers-in-each-node', 'total_acs': 135024, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 365638, 'question__article__live': None, 'is_new_question': False, 'question_id': 116}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Distinct Subsequences', 'question__title_slug': 'distinct-subsequences', 'total_acs': 70846, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 225685, 'question__article__live': None, 'is_new_question': False, 'question_id': 115}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Flatten Binary Tree to Linked List', 'question__title_slug': 'flatten-binary-tree-to-linked-list', 'total_acs': 128643, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 369157, 'question__article__live': None, 'is_new_question': False, 'question_id': 114}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Path Sum II', 'question__title_slug': 'path-sum-ii', 'total_acs': 129398, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 388472, 'question__article__live': None, 'is_new_question': False, 'question_id': 113}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Path Sum', 'question__title_slug': 'path-sum', 'total_acs': 166942, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 493430, 'question__article__live': None, 'is_new_question': False, 'question_id': 112}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Depth of Binary Tree', 'question__title_slug': 'minimum-depth-of-binary-tree', 'total_acs': 170804, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 517511, 'question__article__live': None, 'is_new_question': False, 'question_id': 111}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Balanced Binary Tree', 'question__title_slug': 'balanced-binary-tree', 'total_acs': 177932, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 476902, 'question__article__live': None, 'is_new_question': False, 'question_id': 110}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Convert Sorted List to Binary Search Tree', 'question__title_slug': 'convert-sorted-list-to-binary-search-tree', 'total_acs': 107860, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 318792, 'question__article__live': None, 'is_new_question': False, 'question_id': 109}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Convert Sorted Array to Binary Search Tree', 'question__title_slug': 'convert-sorted-array-to-binary-search-tree', 'total_acs': 128794, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 307228, 'question__article__live': None, 'is_new_question': False, 'question_id': 108}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Tree Level Order Traversal II', 'question__title_slug': 'binary-tree-level-order-traversal-ii', 'total_acs': 130876, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 328460, 'question__article__live': None, 'is_new_question': False, 'question_id': 107}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Construct Binary Tree from Inorder and Postorder Traversal', 'question__title_slug': 'construct-binary-tree-from-inorder-and-postorder-traversal', 'total_acs': 86349, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 270211, 'question__article__live': None, 'is_new_question': False, 'question_id': 106}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Construct Binary Tree from Preorder and Inorder Traversal', 'question__title_slug': 'construct-binary-tree-from-preorder-and-inorder-traversal', 'total_acs': 103686, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 323923, 'question__article__live': None, 'is_new_question': False, 'question_id': 105}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximum Depth of Binary Tree', 'question__title_slug': 'maximum-depth-of-binary-tree', 'total_acs': 249020, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 475075, 'question__article__live': None, 'is_new_question': False, 'question_id': 104}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Tree Zigzag Level Order Traversal', 'question__title_slug': 'binary-tree-zigzag-level-order-traversal', 'total_acs': 102609, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 299631, 'question__article__live': None, 'is_new_question': False, 'question_id': 103}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Tree Level Order Traversal', 'question__title_slug': 'binary-tree-level-order-traversal', 'total_acs': 175666, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 446909, 'question__article__live': None, 'is_new_question': False, 'question_id': 102}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Symmetric Tree', 'question__title_slug': 'symmetric-tree', 'total_acs': 181197, 'question__hide': False, 'question__article__slug': 'symmetric-tree', 'total_submitted': 470466, 'question__article__live': True, 'is_new_question': False, 'question_id': 101}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Same Tree', 'question__title_slug': 'same-tree', 'total_acs': 208012, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 448974, 'question__article__live': None, 'is_new_question': False, 'question_id': 100}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Recover Binary Search Tree', 'question__title_slug': 'recover-binary-search-tree', 'total_acs': 74182, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 249226, 'question__article__live': None, 'is_new_question': False, 'question_id': 99}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Validate Binary Search Tree', 'question__title_slug': 'validate-binary-search-tree', 'total_acs': 168138, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 725753, 'question__article__live': None, 'is_new_question': False, 'question_id': 98}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Interleaving String', 'question__title_slug': 'interleaving-string', 'total_acs': 70560, 'question__hide': False, 'question__article__slug': 'interleaving-strings', 'total_submitted': 287933, 'question__article__live': True, 'is_new_question': False, 'question_id': 97}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Unique Binary Search Trees', 'question__title_slug': 'unique-binary-search-trees', 'total_acs': 122498, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 300360, 'question__article__live': None, 'is_new_question': False, 'question_id': 96}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Unique Binary Search Trees II', 'question__title_slug': 'unique-binary-search-trees-ii', 'total_acs': 83479, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 266873, 'question__article__live': None, 'is_new_question': False, 'question_id': 95}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Binary Tree Inorder Traversal', 'question__title_slug': 'binary-tree-inorder-traversal', 'total_acs': 205884, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 445311, 'question__article__live': None, 'is_new_question': False, 'question_id': 94}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Restore IP Addresses', 'question__title_slug': 'restore-ip-addresses', 'total_acs': 85249, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 315038, 'question__article__live': None, 'is_new_question': False, 'question_id': 93}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse Linked List II', 'question__title_slug': 'reverse-linked-list-ii', 'total_acs': 111660, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 365250, 'question__article__live': None, 'is_new_question': False, 'question_id': 92}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Decode Ways', 'question__title_slug': 'decode-ways', 'total_acs': 123477, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 633100, 'question__article__live': None, 'is_new_question': False, 'question_id': 91}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Subsets II', 'question__title_slug': 'subsets-ii', 'total_acs': 112416, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 313635, 'question__article__live': None, 'is_new_question': False, 'question_id': 90}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Gray Code', 'question__title_slug': 'gray-code', 'total_acs': 90252, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 221003, 'question__article__live': None, 'is_new_question': False, 'question_id': 89}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Merge Sorted Array', 'question__title_slug': 'merge-sorted-array', 'total_acs': 169472, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 530581, 'question__article__live': None, 'is_new_question': False, 'question_id': 88}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Scramble String', 'question__title_slug': 'scramble-string', 'total_acs': 64130, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 221076, 'question__article__live': None, 'is_new_question': False, 'question_id': 87}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Partition List', 'question__title_slug': 'partition-list', 'total_acs': 100767, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 310186, 'question__article__live': None, 'is_new_question': False, 'question_id': 86}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximal Rectangle', 'question__title_slug': 'maximal-rectangle', 'total_acs': 66683, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 241596, 'question__article__live': None, 'is_new_question': False, 'question_id': 85}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Largest Rectangle in Histogram', 'question__title_slug': 'largest-rectangle-in-histogram', 'total_acs': 92530, 'question__hide': False, 'question__article__slug': 'largest-rectangle-histogram', 'total_submitted': 348814, 'question__article__live': True, 'is_new_question': False, 'question_id': 84}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove Duplicates from Sorted List', 'question__title_slug': 'remove-duplicates-from-sorted-list', 'total_acs': 186455, 'question__hide': False, 'question__article__slug': 'remove-duplicates-sorted-list', 'total_submitted': 469213, 'question__article__live': True, 'is_new_question': False, 'question_id': 83}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove Duplicates from Sorted List II', 'question__title_slug': 'remove-duplicates-from-sorted-list-ii', 'total_acs': 110297, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 375733, 'question__article__live': None, 'is_new_question': False, 'question_id': 82}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Search in Rotated Sorted Array II', 'question__title_slug': 'search-in-rotated-sorted-array-ii', 'total_acs': 95834, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 292293, 'question__article__live': None, 'is_new_question': False, 'question_id': 81}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove Duplicates from Sorted Array II', 'question__title_slug': 'remove-duplicates-from-sorted-array-ii', 'total_acs': 119518, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 333611, 'question__article__live': None, 'is_new_question': False, 'question_id': 80}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Word Search', 'question__title_slug': 'word-search', 'total_acs': 128646, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 484537, 'question__article__live': None, 'is_new_question': False, 'question_id': 79}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Subsets', 'question__title_slug': 'subsets', 'total_acs': 167264, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 418559, 'question__article__live': None, 'is_new_question': False, 'question_id': 78}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Combinations', 'question__title_slug': 'combinations', 'total_acs': 117289, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 297846, 'question__article__live': None, 'is_new_question': False, 'question_id': 77}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Window Substring', 'question__title_slug': 'minimum-window-substring', 'total_acs': 104527, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 416818, 'question__article__live': None, 'is_new_question': False, 'question_id': 76}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sort Colors', 'question__title_slug': 'sort-colors', 'total_acs': 164241, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 434812, 'question__article__live': None, 'is_new_question': False, 'question_id': 75}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Search a 2D Matrix', 'question__title_slug': 'search-a-2d-matrix', 'total_acs': 125952, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 358646, 'question__article__live': None, 'is_new_question': False, 'question_id': 74}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Set Matrix Zeroes', 'question__title_slug': 'set-matrix-zeroes', 'total_acs': 105098, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 293373, 'question__article__live': None, 'is_new_question': False, 'question_id': 73}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Edit Distance', 'question__title_slug': 'edit-distance', 'total_acs': 89562, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 283960, 'question__article__live': None, 'is_new_question': False, 'question_id': 72}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Simplify Path', 'question__title_slug': 'simplify-path', 'total_acs': 88018, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 350948, 'question__article__live': None, 'is_new_question': False, 'question_id': 71}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Climbing Stairs', 'question__title_slug': 'climbing-stairs', 'total_acs': 179748, 'question__hide': False, 'question__article__slug': 'climbing-stairs', 'total_submitted': 451518, 'question__article__live': True, 'is_new_question': False, 'question_id': 70}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sqrt(x)', 'question__title_slug': 'sqrtx', 'total_acs': 160507, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 578704, 'question__article__live': None, 'is_new_question': False, 'question_id': 69}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Text Justification', 'question__title_slug': 'text-justification', 'total_acs': 55760, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 294891, 'question__article__live': None, 'is_new_question': False, 'question_id': 68}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Add Binary', 'question__title_slug': 'add-binary', 'total_acs': 147119, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 457657, 'question__article__live': None, 'is_new_question': False, 'question_id': 67}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Plus One', 'question__title_slug': 'plus-one', 'total_acs': 174797, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 454908, 'question__article__live': None, 'is_new_question': False, 'question_id': 66}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Valid Number', 'question__title_slug': 'valid-number', 'total_acs': 68531, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 538934, 'question__article__live': None, 'is_new_question': False, 'question_id': 65}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Minimum Path Sum', 'question__title_slug': 'minimum-path-sum', 'total_acs': 114039, 'question__hide': False, 'question__article__slug': 'minimum-path-sum', 'total_submitted': 297794, 'question__article__live': True, 'is_new_question': False, 'question_id': 64}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Unique Paths II', 'question__title_slug': 'unique-paths-ii', 'total_acs': 105082, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 332754, 'question__article__live': None, 'is_new_question': False, 'question_id': 63}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Unique Paths', 'question__title_slug': 'unique-paths', 'total_acs': 142258, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 348463, 'question__article__live': None, 'is_new_question': False, 'question_id': 62}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Rotate List', 'question__title_slug': 'rotate-list', 'total_acs': 110221, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 452975, 'question__article__live': None, 'is_new_question': False, 'question_id': 61}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Permutation Sequence', 'question__title_slug': 'permutation-sequence', 'total_acs': 84081, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 297371, 'question__article__live': None, 'is_new_question': False, 'question_id': 60}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Spiral Matrix II', 'question__title_slug': 'spiral-matrix-ii', 'total_acs': 81962, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 208146, 'question__article__live': None, 'is_new_question': False, 'question_id': 59}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Length of Last Word', 'question__title_slug': 'length-of-last-word', 'total_acs': 148825, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 468387, 'question__article__live': None, 'is_new_question': False, 'question_id': 58}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Insert Interval', 'question__title_slug': 'insert-interval', 'total_acs': 95998, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 350202, 'question__article__live': None, 'is_new_question': False, 'question_id': 57}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Merge Intervals', 'question__title_slug': 'merge-intervals', 'total_acs': 130541, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 437824, 'question__article__live': None, 'is_new_question': False, 'question_id': 56}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Jump Game', 'question__title_slug': 'jump-game', 'total_acs': 125438, 'question__hide': False, 'question__article__slug': 'jump-game', 'total_submitted': 425209, 'question__article__live': True, 'is_new_question': False, 'question_id': 55}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Spiral Matrix', 'question__title_slug': 'spiral-matrix', 'total_acs': 102542, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 398046, 'question__article__live': None, 'is_new_question': False, 'question_id': 54}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Maximum Subarray', 'question__title_slug': 'maximum-subarray', 'total_acs': 206563, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 523130, 'question__article__live': None, 'is_new_question': False, 'question_id': 53}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'N-Queens II', 'question__title_slug': 'n-queens-ii', 'total_acs': 63337, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 142283, 'question__article__live': None, 'is_new_question': False, 'question_id': 52}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'N-Queens', 'question__title_slug': 'n-queens', 'total_acs': 80382, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 261874, 'question__article__live': None, 'is_new_question': False, 'question_id': 51}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Pow(x, n)', 'question__title_slug': 'powx-n', 'total_acs': 155935, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 590075, 'question__article__live': None, 'is_new_question': False, 'question_id': 50}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Group Anagrams', 'question__title_slug': 'group-anagrams', 'total_acs': 138692, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 405148, 'question__article__live': None, 'is_new_question': False, 'question_id': 49}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Rotate Image', 'question__title_slug': 'rotate-image', 'total_acs': 116732, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 304255, 'question__article__live': None, 'is_new_question': False, 'question_id': 48}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Permutations II', 'question__title_slug': 'permutations-ii', 'total_acs': 122099, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 375632, 'question__article__live': None, 'is_new_question': False, 'question_id': 47}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Permutations', 'question__title_slug': 'permutations', 'total_acs': 170467, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 394126, 'question__article__live': None, 'is_new_question': False, 'question_id': 46}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Jump Game II', 'question__title_slug': 'jump-game-ii', 'total_acs': 94068, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 359497, 'question__article__live': None, 'is_new_question': False, 'question_id': 45}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Wildcard Matching', 'question__title_slug': 'wildcard-matching', 'total_acs': 95004, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 477454, 'question__article__live': None, 'is_new_question': False, 'question_id': 44}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Multiply Strings', 'question__title_slug': 'multiply-strings', 'total_acs': 104426, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 387485, 'question__article__live': None, 'is_new_question': False, 'question_id': 43}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Trapping Rain Water', 'question__title_slug': 'trapping-rain-water', 'total_acs': 116722, 'question__hide': False, 'question__article__slug': 'trapping-rain-water', 'total_submitted': 319431, 'question__article__live': True, 'is_new_question': False, 'question_id': 42}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'First Missing Positive', 'question__title_slug': 'first-missing-positive', 'total_acs': 101287, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 398000, 'question__article__live': None, 'is_new_question': False, 'question_id': 41}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Combination Sum II', 'question__title_slug': 'combination-sum-ii', 'total_acs': 116739, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 349844, 'question__article__live': None, 'is_new_question': False, 'question_id': 40}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Combination Sum', 'question__title_slug': 'combination-sum', 'total_acs': 162144, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 424456, 'question__article__live': None, 'is_new_question': False, 'question_id': 39}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Count and Say', 'question__title_slug': 'count-and-say', 'total_acs': 140008, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 407669, 'question__article__live': None, 'is_new_question': False, 'question_id': 38}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Sudoku Solver', 'question__title_slug': 'sudoku-solver', 'total_acs': 75472, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 252708, 'question__article__live': None, 'is_new_question': False, 'question_id': 37}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Valid Sudoku', 'question__title_slug': 'valid-sudoku', 'total_acs': 121194, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 341513, 'question__article__live': None, 'is_new_question': False, 'question_id': 36}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Search Insert Position', 'question__title_slug': 'search-insert-position', 'total_acs': 181276, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 457282, 'question__article__live': None, 'is_new_question': False, 'question_id': 35}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Search for a Range', 'question__title_slug': 'search-for-a-range', 'total_acs': 140352, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 448206, 'question__article__live': None, 'is_new_question': False, 'question_id': 34}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Search in Rotated Sorted Array', 'question__title_slug': 'search-in-rotated-sorted-array', 'total_acs': 176856, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 550656, 'question__article__live': None, 'is_new_question': False, 'question_id': 33}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Valid Parentheses', 'question__title_slug': 'longest-valid-parentheses', 'total_acs': 97581, 'question__hide': False, 'question__article__slug': 'longest-valid-parentheses', 'total_submitted': 423644, 'question__article__live': True, 'is_new_question': False, 'question_id': 32}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Next Permutation', 'question__title_slug': 'next-permutation', 'total_acs': 112730, 'question__hide': False, 'question__article__slug': 'next-permutation', 'total_submitted': 392595, 'question__article__live': True, 'is_new_question': False, 'question_id': 31}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Substring with Concatenation of All Words', 'question__title_slug': 'substring-with-concatenation-of-all-words', 'total_acs': 80721, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 368207, 'question__article__live': None, 'is_new_question': False, 'question_id': 30}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Divide Two Integers', 'question__title_slug': 'divide-two-integers', 'total_acs': 104438, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 653709, 'question__article__live': None, 'is_new_question': False, 'question_id': 29}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Implement strStr()', 'question__title_slug': 'implement-strstr', 'total_acs': 190047, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 680188, 'question__article__live': None, 'is_new_question': False, 'question_id': 28}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove Element', 'question__title_slug': 'remove-element', 'total_acs': 204958, 'question__hide': False, 'question__article__slug': 'remove-element', 'total_submitted': 528650, 'question__article__live': True, 'is_new_question': False, 'question_id': 27}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove Duplicates from Sorted Array', 'question__title_slug': 'remove-duplicates-from-sorted-array', 'total_acs': 239428, 'question__hide': False, 'question__article__slug': 'remove-duplicates-sorted-array', 'total_submitted': 674085, 'question__article__live': True, 'is_new_question': False, 'question_id': 26}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse Nodes in k-Group', 'question__title_slug': 'reverse-nodes-in-k-group', 'total_acs': 95958, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 313624, 'question__article__live': None, 'is_new_question': False, 'question_id': 25}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Swap Nodes in Pairs', 'question__title_slug': 'swap-nodes-in-pairs', 'total_acs': 167030, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 437761, 'question__article__live': None, 'is_new_question': False, 'question_id': 24}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Merge k Sorted Lists', 'question__title_slug': 'merge-k-sorted-lists', 'total_acs': 153677, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 568323, 'question__article__live': None, 'is_new_question': False, 'question_id': 23}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Generate Parentheses', 'question__title_slug': 'generate-parentheses', 'total_acs': 151219, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 339828, 'question__article__live': None, 'is_new_question': False, 'question_id': 22}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Merge Two Sorted Lists', 'question__title_slug': 'merge-two-sorted-lists', 'total_acs': 233585, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 599305, 'question__article__live': None, 'is_new_question': False, 'question_id': 21}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Valid Parentheses', 'question__title_slug': 'valid-parentheses', 'total_acs': 213317, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 641041, 'question__article__live': None, 'is_new_question': False, 'question_id': 20}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Remove Nth Node From End of List', 'question__title_slug': 'remove-nth-node-from-end-of-list', 'total_acs': 182354, 'question__hide': False, 'question__article__slug': 'remove-nth-node-end-list', 'total_submitted': 547712, 'question__article__live': True, 'is_new_question': False, 'question_id': 19}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': '4Sum', 'question__title_slug': '4sum', 'total_acs': 120881, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 454206, 'question__article__live': None, 'is_new_question': False, 'question_id': 18}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Letter Combinations of a Phone Number', 'question__title_slug': 'letter-combinations-of-a-phone-number', 'total_acs': 156234, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 456340, 'question__article__live': None, 'is_new_question': False, 'question_id': 17}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': '3Sum Closest', 'question__title_slug': '3sum-closest', 'total_acs': 132206, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 426215, 'question__article__live': None, 'is_new_question': False, 'question_id': 16}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': '3Sum', 'question__title_slug': '3sum', 'total_acs': 222434, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 1030593, 'question__article__live': None, 'is_new_question': False, 'question_id': 15}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Common Prefix', 'question__title_slug': 'longest-common-prefix', 'total_acs': 184790, 'question__hide': False, 'question__article__slug': 'longest-common-prefix', 'total_submitted': 587968, 'question__article__live': True, 'is_new_question': False, 'question_id': 14}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Roman to Integer', 'question__title_slug': 'roman-to-integer', 'total_acs': 157581, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 346743, 'question__article__live': None, 'is_new_question': False, 'question_id': 13}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Integer to Roman', 'question__title_slug': 'integer-to-roman', 'total_acs': 108438, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 243976, 'question__article__live': None, 'is_new_question': False, 'question_id': 12}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Container With Most Water', 'question__title_slug': 'container-with-most-water', 'total_acs': 138741, 'question__hide': False, 'question__article__slug': 'container-most-water', 'total_submitted': 380489, 'question__article__live': True, 'is_new_question': False, 'question_id': 11}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Regular Expression Matching', 'question__title_slug': 'regular-expression-matching', 'total_acs': 141838, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 589823, 'question__article__live': None, 'is_new_question': False, 'question_id': 10}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Palindrome Number', 'question__title_slug': 'palindrome-number', 'total_acs': 224405, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 638281, 'question__article__live': None, 'is_new_question': False, 'question_id': 9}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'String to Integer (atoi)', 'question__title_slug': 'string-to-integer-atoi', 'total_acs': 175392, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 1256685, 'question__article__live': None, 'is_new_question': False, 'question_id': 8}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Reverse Integer', 'question__title_slug': 'reverse-integer', 'total_acs': 261848, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 1077505, 'question__article__live': None, 'is_new_question': False, 'question_id': 7}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'ZigZag Conversion', 'question__title_slug': 'zigzag-conversion', 'total_acs': 158377, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 593344, 'question__article__live': None, 'is_new_question': False, 'question_id': 6}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Palindromic Substring', 'question__title_slug': 'longest-palindromic-substring', 'total_acs': 213088, 'question__hide': False, 'question__article__slug': 'longest-palindromic-substring', 'total_submitted': 846879, 'question__article__live': True, 'is_new_question': False, 'question_id': 5}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Median of Two Sorted Arrays', 'question__title_slug': 'median-of-two-sorted-arrays', 'total_acs': 174898, 'question__hide': False, 'question__article__slug': None, 'total_submitted': 810826, 'question__article__live': None, 'is_new_question': False, 'question_id': 4}, 'difficulty': {'level': 3}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Longest Substring Without Repeating Characters', 'question__title_slug': 'longest-substring-without-repeating-characters', 'total_acs': 313978, 'question__hide': False, 'question__article__slug': 'longest-substring-without-repeating-characters', 'total_submitted': 1295142, 'question__article__live': True, 'is_new_question': False, 'question_id': 3}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Add Two Numbers', 'question__title_slug': 'add-two-numbers', 'total_acs': 313719, 'question__hide': False, 'question__article__slug': 'add-two-numbers', 'total_submitted': 1136550, 'question__article__live': True, 'is_new_question': False, 'question_id': 2}, 'difficulty': {'level': 2}, 'status': None, 'is_favor': False, 'frequency': 0}, {'progress': 0, 'paid_only': False, 'stat': {'question__title': 'Two Sum', 'question__title_slug': 'two-sum', 'total_acs': 555059, 'question__hide': False, 'question__article__slug': 'two-sum', 'total_submitted': 1632764, 'question__article__live': True, 'is_new_question': False, 'question_id': 1}, 'difficulty': {'level': 1}, 'status': None, 'is_favor': False, 'frequency': 0}], 'user_name': ''}



Leetcode Api Problems


644 : maximum-average-subarray-ii


b'<div class="question-description">\n<p><p>\r\nGiven an array consisting of <code>n</code> integers, find the contiguous subarray whose <b>length is greater than or equal to</b> <code>k</code> that has the maximum average value. And you need to output the maximum average value.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,12,-5,-6,50,3], k = 4\r\n<b>Output:</b> 12.75\r\n<b>Explanation:</b>\r\nwhen length is 5, maximum average value is 10.8,\r\nwhen length is 6, maximum average value is 9.16667.\r\nThus return 12.75.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>1 &lt;= <code>k</code> &lt;= <code>n</code> &lt;= 10,000.</li>\n<li>Elements of the given array will be in range [-10,000, 10,000].</li>\n<li>The answer with the calculation error less than 10<sup>-5</sup> will be accepted.</li>\n</ol>\n</p></p>\n</div>'


644 : maximum-average-subarray-ii
643 : maximum-average-subarray-i


b'<div class="question-description">\n<p><p>\r\nGiven an array consisting of <code>n</code> integers, find the contiguous subarray whose <b>length is greater than or equal to</b> <code>k</code> that has the maximum average value. And you need to output the maximum average value.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,12,-5,-6,50,3], k = 4\r\n<b>Output:</b> 12.75\r\n<b>Explanation:</b>\r\nwhen length is 5, maximum average value is 10.8,\r\nwhen length is 6, maximum average value is 9.16667.\r\nThus return 12.75.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>1 &lt;= <code>k</code> &lt;= <code>n</code> &lt;= 10,000.</li>\n<li>Elements of the given array will be in range [-10,000, 10,000].</li>\n<li>The answer with the calculation error less than 10<sup>-5</sup> will be accepted.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array consisting of <code>n</code> integers, find the contiguous subarray of given length <code>k</code> that has the maximum average value. And you need to output the maximum average value.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,12,-5,-6,50,3], k = 4\r\n<b>Output:</b> 12.75\r\n<b>Explanation:</b> Maximum average is (12-5-6+50)/4 = 51/4 = 12.75\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>1 &lt;= <code>k</code> &lt;= <code>n</code> &lt;= 30,000.</li>\n<li>Elements of the given array will be in the range [-10,000, 10,000].</li>\n</ol>\n</p></p>\n</div>'


643 : maximum-average-subarray-i
642 : design-search-autocomplete-system


b'<div class="question-description">\n<p><p>\r\nGiven an array consisting of <code>n</code> integers, find the contiguous subarray of given length <code>k</code> that has the maximum average value. And you need to output the maximum average value.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,12,-5,-6,50,3], k = 4\r\n<b>Output:</b> 12.75\r\n<b>Explanation:</b> Maximum average is (12-5-6+50)/4 = 51/4 = 12.75\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>1 &lt;= <code>k</code> &lt;= <code>n</code> &lt;= 30,000.</li>\n<li>Elements of the given array will be in the range [-10,000, 10,000].</li>\n</ol>\n</p></p>\n</div>'




No Description


642 : design-search-autocomplete-system
640 : solve-the-equation


No Description




b'<div class="question-description">\n<p><p>\r\nSolve a given equation and return the value of <code>x</code> in the form of string "x=#value". The equation contains only \'+\', \'-\' operation, the variable <code>x</code> and its coefficient.\r\n</p>\n<p>\r\nIf there is no solution for the equation, return "No solution".\r\n</p>\n<p>\r\nIf there are infinite solutions for the equation, return "Infinite solutions".\r\n</p>\n<p>\r\nIf there is exactly one solution for the equation, we ensure that the value of <code>x</code> is an integer.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "x+5-3+x=6+x-2"\r\n<b>Output:</b> "x=2"\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "x=x"\r\n<b>Output:</b> "Infinite solutions"\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> "2x=x"\r\n<b>Output:</b> "x=0"\r\n</pre>\n</p>\n<p><b>Example 4:</b><br/>\n<pre>\r\n<b>Input:</b> "2x+3x-6x=x+2"\r\n<b>Output:</b> "x=-1"\r\n</pre>\n</p>\n<p><b>Example 5:</b><br/>\n<pre>\r\n<b>Input:</b> "x=x+2"\r\n<b>Output:</b> "No solution"\r\n</pre>\n</p></p>\n</div>'


640 : solve-the-equation
639 : decode-ways-ii


b'<div class="question-description">\n<p><p>\r\nSolve a given equation and return the value of <code>x</code> in the form of string "x=#value". The equation contains only \'+\', \'-\' operation, the variable <code>x</code> and its coefficient.\r\n</p>\n<p>\r\nIf there is no solution for the equation, return "No solution".\r\n</p>\n<p>\r\nIf there are infinite solutions for the equation, return "Infinite solutions".\r\n</p>\n<p>\r\nIf there is exactly one solution for the equation, we ensure that the value of <code>x</code> is an integer.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "x+5-3+x=6+x-2"\r\n<b>Output:</b> "x=2"\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "x=x"\r\n<b>Output:</b> "Infinite solutions"\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> "2x=x"\r\n<b>Output:</b> "x=0"\r\n</pre>\n</p>\n<p><b>Example 4:</b><br/>\n<pre>\r\n<b>Input:</b> "2x+3x-6x=x+2"\r\n<b>Output:</b> "x=-1"\r\n</pre>\n</p>\n<p><b>Example 5:</b><br/>\n<pre>\r\n<b>Input:</b> "x=x+2"\r\n<b>Output:</b> "No solution"\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nA message containing letters from <code>A-Z</code> is being encoded to numbers using the following mapping way:\r\n</p>\n<pre>\r\n\'A\' -&gt; 1\r\n\'B\' -&gt; 2\r\n...\r\n\'Z\' -&gt; 26\r\n</pre>\n<p>\r\nBeyond that, now the encoded string can also contain the character \'*\', which can be treated as one of the numbers from 1 to 9.\r\n</p>\n<p>\r\nGiven the encoded message containing digits and the character \'*\', return the total number of ways to decode it.\r\n</p>\n<p>\r\nAlso, since the answer may be very large, you should return the output mod 10<sup>9</sup> + 7.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "*"\r\n<b>Output:</b> 9\r\n<b>Explanation:</b> The encoded message can be decoded to the string: "A", "B", "C", "D", "E", "F", "G", "H", "I".\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "1*"\r\n<b>Output:</b> 9 + 9 = 18\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the input string will fit in range [1, 10<sup>5</sup>].</li>\n<li>The input string will only contain the character \'*\' and digits \'0\' - \'9\'.</li>\n</ol>\n</p></p>\n</div>'


639 : decode-ways-ii
638 : shopping-offers


b'<div class="question-description">\n<p><p>\r\nIn LeetCode Store, there are some kinds of items to sell. Each item has a price.\r\n</p>\n<p>\r\nHowever, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price.\r\n</p>\n<p>\r\nYou are given the each item\'s price, a set of special offers, and the number we need to buy for each item.\r\nThe job is to output the lowest price you have to pay for <b>exactly</b> certain items as given, where you could make optimal use of the special offers.\r\n</p>\n<p>\r\nEach special offer is represented in the form of an array, the last number represents the price you need to pay for this special offer, other numbers represents how many specific items you could get if you buy this offer.\r\n</p>\n<p>You could use any of special offers as many times as you want.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [2,5], [[3,0,5],[1,2,10]], [3,2]\r\n<b>Output:</b> 14\r\n<b>Explanation:</b> \r\nThere are two kinds of items, A and B. Their prices are $2 and $5 respectively. \r\nIn special offer 1, you can pay $5 for 3A and 0B\r\nIn special offer 2, you can pay $10 for 1A and 2B. \r\nYou need to buy 3A and 2B, so you may pay $10 for 1A and 2B (special offer #2), and $4 for 2A.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [2,3,4], [[1,1,0,4],[2,2,1,9]], [1,2,1]\r\n<b>Output:</b> 11\r\n<b>Explanation:</b> \r\nThe price of A is $2, and $3 for B, $4 for C. \r\nYou may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. \r\nYou need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. \r\nYou cannot add more items, though only $9 for 2A ,2B and 1C.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>There are at most 6 kinds of items, 100 special offers.</li>\n<li>For each item, you need to buy at most 6 of them.</li>\n<li>You are <b>not</b> allowed to buy more items than you want, even if that would lower the overall price.</li>\n</ol>\n</p></p>\n</div>'


638 : shopping-offers
637 : average-of-levels-in-binary-tree


b'<div class="question-description">\n<p><p>\r\nA message containing letters from <code>A-Z</code> is being encoded to numbers using the following mapping way:\r\n</p>\n<pre>\r\n\'A\' -&gt; 1\r\n\'B\' -&gt; 2\r\n...\r\n\'Z\' -&gt; 26\r\n</pre>\n<p>\r\nBeyond that, now the encoded string can also contain the character \'*\', which can be treated as one of the numbers from 1 to 9.\r\n</p>\n<p>\r\nGiven the encoded message containing digits and the character \'*\', return the total number of ways to decode it.\r\n</p>\n<p>\r\nAlso, since the answer may be very large, you should return the output mod 10<sup>9</sup> + 7.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "*"\r\n<b>Output:</b> 9\r\n<b>Explanation:</b> The encoded message can be decoded to the string: "A", "B", "C", "D", "E", "F", "G", "H", "I".\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "1*"\r\n<b>Output:</b> 9 + 9 = 18\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the input string will fit in range [1, 10<sup>5</sup>].</li>\n<li>The input string will only contain the character \'*\' and digits \'0\' - \'9\'.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nIn LeetCode Store, there are some kinds of items to sell. Each item has a price.\r\n</p>\n<p>\r\nHowever, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price.\r\n</p>\n<p>\r\nYou are given the each item\'s price, a set of special offers, and the number we need to buy for each item.\r\nThe job is to output the lowest price you have to pay for <b>exactly</b> certain items as given, where you could make optimal use of the special offers.\r\n</p>\n<p>\r\nEach special offer is represented in the form of an array, the last number represents the price you need to pay for this special offer, other numbers represents how many specific items you could get if you buy this offer.\r\n</p>\n<p>You could use any of special offers as many times as you want.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [2,5], [[3,0,5],[1,2,10]], [3,2]\r\n<b>Output:</b> 14\r\n<b>Explanation:</b> \r\nThere are two kinds of items, A and B. Their prices are $2 and $5 respectively. \r\nIn special offer 1, you can pay $5 for 3A and 0B\r\nIn special offer 2, you can pay $10 for 1A and 2B. \r\nYou need to buy 3A and 2B, so you may pay $10 for 1A and 2B (special offer #2), and $4 for 2A.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [2,3,4], [[1,1,0,4],[2,2,1,9]], [1,2,1]\r\n<b>Output:</b> 11\r\n<b>Explanation:</b> \r\nThe price of A is $2, and $3 for B, $4 for C. \r\nYou may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. \r\nYou need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. \r\nYou cannot add more items, though only $9 for 2A ,2B and 1C.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>There are at most 6 kinds of items, 100 special offers.</li>\n<li>For each item, you need to buy at most 6 of them.</li>\n<li>You are <b>not</b> allowed to buy more items than you want, even if that would lower the overall price.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p>Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.\r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n<b>Output:</b> [3, 14.5, 11]\r\n<b>Explanation:</b>\r\nThe average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The range of node\'s value is in the range of 32-bit signed integer.</li>\n</ol>\n</p></p>\n</div>'


637 : average-of-levels-in-binary-tree
636 : exclusive-time-of-functions


b'<div class="question-description">\n<p>Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.\r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n<b>Output:</b> [3, 14.5, 11]\r\n<b>Explanation:</b>\r\nThe average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The range of node\'s value is in the range of 32-bit signed integer.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given the running logs of <b>n</b> functions that are executed in a nonpreemptive single threaded CPU, find the exclusive time of these functions. </p>\n<p>Each function has a unique id, start from <b>0</b> to <b>n-1</b>. A function may be called recursively or by another function.</p>\n<p>A log is a string has this format : <code>function_id:start_or_end:timestamp</code>. For example, <code>"0:start:0"</code> means function 0 starts from the very beginning of time 0. <code>"0:end:0"</code> means function 0 ends to the very end of time 0. </p>\n<p>Exclusive time of a function is defined as the time spent within this function, the time spent by calling other functions should not be considered as this function\'s exclusive time. You should return the exclusive time of each function sorted by their function id.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>\r\nn = 2\r\nlogs = \r\n["0:start:0",\r\n "1:start:2",\r\n "1:end:5",\r\n "0:end:6"]\r\n<b>Output:</b>[3, 4]\r\n<b>Explanation:</b>\r\nFunction 0 starts at time 0, then it executes 2 units of time and reaches the end of time 1. \r\nNow function 0 <b>calls function 1</b>, function 1 starts at time 2, executes 4 units of time and end at time 5.\r\nFunction 0 is running again at time 6, and also end at the time 6, thus executes 1 unit of time. \r\nSo function 0 totally execute 2 + 1 = 3 units of time, and function 1 totally execute 4 units of time.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Input logs will be sorted by timestamp, NOT log id.</li>\n<li>Your output should be sorted by function id, which means the 0th element of your output corresponds to the exclusive time of function 0.</li>\n<li>Two functions won\'t start or end at the same time.</li>\n<li>Functions could be called recursively, and will always end.</li>\n<li>1 &lt;= n &lt;= 100</li>\n</ol>\n</p></p>\n</div>'


636 : exclusive-time-of-functions
635 : design-log-storage-system


b'<div class="question-description">\n<p><p>Given the running logs of <b>n</b> functions that are executed in a nonpreemptive single threaded CPU, find the exclusive time of these functions. </p>\n<p>Each function has a unique id, start from <b>0</b> to <b>n-1</b>. A function may be called recursively or by another function.</p>\n<p>A log is a string has this format : <code>function_id:start_or_end:timestamp</code>. For example, <code>"0:start:0"</code> means function 0 starts from the very beginning of time 0. <code>"0:end:0"</code> means function 0 ends to the very end of time 0. </p>\n<p>Exclusive time of a function is defined as the time spent within this function, the time spent by calling other functions should not be considered as this function\'s exclusive time. You should return the exclusive time of each function sorted by their function id.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>\r\nn = 2\r\nlogs = \r\n["0:start:0",\r\n "1:start:2",\r\n "1:end:5",\r\n "0:end:6"]\r\n<b>Output:</b>[3, 4]\r\n<b>Explanation:</b>\r\nFunction 0 starts at time 0, then it executes 2 units of time and reaches the end of time 1. \r\nNow function 0 <b>calls function 1</b>, function 1 starts at time 2, executes 4 units of time and end at time 5.\r\nFunction 0 is running again at time 6, and also end at the time 6, thus executes 1 unit of time. \r\nSo function 0 totally execute 2 + 1 = 3 units of time, and function 1 totally execute 4 units of time.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Input logs will be sorted by timestamp, NOT log id.</li>\n<li>Your output should be sorted by function id, which means the 0th element of your output corresponds to the exclusive time of function 0.</li>\n<li>Two functions won\'t start or end at the same time.</li>\n<li>Functions could be called recursively, and will always end.</li>\n<li>1 &lt;= n &lt;= 100</li>\n</ol>\n</p></p>\n</div>'




No Description


635 : design-log-storage-system
634 : find-the-derangement-of-an-array


No Description




No Description


634 : find-the-derangement-of-an-array
633 : sum-of-square-numbers


No Description




b'<div class="question-description">\n<p><p>\r\nGiven a non-negative integer <code>c</code>, your task is to decide whether there\'re two integers <code>a</code> and <code>b</code> such that a<sup>2</sup> + b<sup>2</sup> = c.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 5\r\n<b>Output:</b> True\r\n<b>Explanation:</b> 1 * 1 + 2 * 2 = 5\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> 3\r\n<b>Output:</b> False\r\n</pre>\n</p>\n</p>\n</div>'


633 : sum-of-square-numbers
632 : smallest-range


b'<div class="question-description">\n<p><p>\r\nGiven a non-negative integer <code>c</code>, your task is to decide whether there\'re two integers <code>a</code> and <code>b</code> such that a<sup>2</sup> + b<sup>2</sup> = c.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 5\r\n<b>Output:</b> True\r\n<b>Explanation:</b> 1 * 1 + 2 * 2 = 5\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> 3\r\n<b>Output:</b> False\r\n</pre>\n</p>\n</p>\n</div>'




b'<div class="question-description">\n<p><p>You have <code>k</code> lists of sorted integers in ascending order. Find the <b>smallest</b> range that includes at least one number from each of the <code>k</code> lists. </p>\n<p>We define the range [a,b] is smaller than range [c,d] if <code>b-a &lt; d-c</code> or <code>a &lt; c</code> if <code>b-a == d-c</code>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>[[4,10,15,24,26], [0,9,12,20], [5,18,22,30]]\r\n<b>Output:</b> [20,24]\r\n<b>Explanation:</b> \r\nList 1: [4, 10, 15, 24,26], 24 is in range [20,24].\r\nList 2: [0, 9, 12, 20], 20 is in range [20,24].\r\nList 3: [5, 18, 22, 30], 22 is in range [20,24].\r\n</pre>\n</p>\n<p>\n<b>Note:</b><br/>\n<ol>\n<li>The given list may contain duplicates, so ascending order means &gt;= here.</li>\n<li>1 &lt;= <code>k</code> &lt;= 3500</li>\n<li> -10<sup>5</sup> &lt;= <code>value of elements</code> &lt;= 10<sup>5</sup>.</li>\n<li><b>For Java users, please note that the input type has been changed to List&lt;List&lt;Integer&gt;&gt;. And after you reset the code template, you\'ll see this point.</b></li>\n</ol>\n<br/>\n</p></p>\n</div>'


632 : smallest-range
631 : design-excel-sum-formula


b'<div class="question-description">\n<p><p>You have <code>k</code> lists of sorted integers in ascending order. Find the <b>smallest</b> range that includes at least one number from each of the <code>k</code> lists. </p>\n<p>We define the range [a,b] is smaller than range [c,d] if <code>b-a &lt; d-c</code> or <code>a &lt; c</code> if <code>b-a == d-c</code>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>[[4,10,15,24,26], [0,9,12,20], [5,18,22,30]]\r\n<b>Output:</b> [20,24]\r\n<b>Explanation:</b> \r\nList 1: [4, 10, 15, 24,26], 24 is in range [20,24].\r\nList 2: [0, 9, 12, 20], 20 is in range [20,24].\r\nList 3: [5, 18, 22, 30], 22 is in range [20,24].\r\n</pre>\n</p>\n<p>\n<b>Note:</b><br/>\n<ol>\n<li>The given list may contain duplicates, so ascending order means &gt;= here.</li>\n<li>1 &lt;= <code>k</code> &lt;= 3500</li>\n<li> -10<sup>5</sup> &lt;= <code>value of elements</code> &lt;= 10<sup>5</sup>.</li>\n<li><b>For Java users, please note that the input type has been changed to List&lt;List&lt;Integer&gt;&gt;. And after you reset the code template, you\'ll see this point.</b></li>\n</ol>\n<br/>\n</p></p>\n</div>'




No Description


631 : design-excel-sum-formula
630 : course-schedule-iii


No Description




b'<div class="question-description">\n<p><p>\r\nThere are <code>n</code> different online courses numbered from <code>1</code> to <code>n</code>. Each course has some duration(course length)  <code>t</code> and closed on <code>d<sub>th</sub></code> day. A course should be taken <b>continuously</b> for <code>t</code> days and must be finished before or on the <code>d<sub>th</sub></code> day. You will start at the <code>1<sub>st</sub></code> day.\r\n</p>\n<p>\r\nGiven <code>n</code> online courses represented by pairs <code>(t,d)</code>, your task is to find the maximal number of courses that can be taken.\r\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> [[100, 200], [200, 1300], [1000, 1250], [2000, 3200]]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> \r\nThere\'re totally 4 courses, but you can take 3 courses at most:\r\nFirst, take the 1st course, it costs 100 days so you will finish it on the 100th day, and ready to take the next course on the 101st day.\r\nSecond, take the 3rd course, it costs 1000 days so you will finish it on the 1100th day, and ready to take the next course on the 1101st day. \r\nThird, take the 2nd course, it costs 200 days so you will finish it on the 1300th day. \r\nThe 4th course cannot be taken now, since you will finish it on the 3300th day, which exceeds the closed date.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The integer 1 &lt;= d, t, n &lt;= 10,000. </li>\n<li>You can\'t take two courses simultaneously.</li>\n</ol>\n</p></p>\n</div>'


630 : course-schedule-iii
629 : k-inverse-pairs-array


b'<div class="question-description">\n<p><p>\r\nThere are <code>n</code> different online courses numbered from <code>1</code> to <code>n</code>. Each course has some duration(course length)  <code>t</code> and closed on <code>d<sub>th</sub></code> day. A course should be taken <b>continuously</b> for <code>t</code> days and must be finished before or on the <code>d<sub>th</sub></code> day. You will start at the <code>1<sub>st</sub></code> day.\r\n</p>\n<p>\r\nGiven <code>n</code> online courses represented by pairs <code>(t,d)</code>, your task is to find the maximal number of courses that can be taken.\r\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> [[100, 200], [200, 1300], [1000, 1250], [2000, 3200]]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> \r\nThere\'re totally 4 courses, but you can take 3 courses at most:\r\nFirst, take the 1st course, it costs 100 days so you will finish it on the 100th day, and ready to take the next course on the 101st day.\r\nSecond, take the 3rd course, it costs 1000 days so you will finish it on the 1100th day, and ready to take the next course on the 1101st day. \r\nThird, take the 2nd course, it costs 200 days so you will finish it on the 1300th day. \r\nThe 4th course cannot be taken now, since you will finish it on the 3300th day, which exceeds the closed date.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The integer 1 &lt;= d, t, n &lt;= 10,000. </li>\n<li>You can\'t take two courses simultaneously.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two integers <code>n</code> and <code>k</code>, find how many different arrays consist of numbers from <code>1</code> to <code>n</code> such that there are exactly <code>k</code> inverse pairs. \r\n</p>\n<p>\r\nWe define an inverse pair as following:\r\nFor <code>i<sub>th</sub></code> and <code>j<sub>th</sub></code> element in the array, if <code>i</code> &lt; <code>j</code> and <code>a[i]</code> &gt; <code>a[j]</code> then it\'s an inverse pair; Otherwise, it\'s not.\r\n</p>\n<p>\r\nSince the answer may be very large, the answer should be modulo 10<sup>9</sup> + 7.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> n = 3, k = 0\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> \r\nOnly the array [1,2,3] which consists of numbers from 1 to 3 has exactly 0 inverse pair.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> n = 3, k = 1\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> \r\nThe array [1,3,2] and [2,1,3] have exactly 1 inverse pair.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The integer <code>n</code> is in the range [1, 1000] and <code>k</code> is in the range [0, 1000].</li>\n</ol>\n</p></p>\n</div>'


629 : k-inverse-pairs-array
628 : maximum-product-of-three-numbers


b'<div class="question-description">\n<p><p>\r\nGiven two integers <code>n</code> and <code>k</code>, find how many different arrays consist of numbers from <code>1</code> to <code>n</code> such that there are exactly <code>k</code> inverse pairs. \r\n</p>\n<p>\r\nWe define an inverse pair as following:\r\nFor <code>i<sub>th</sub></code> and <code>j<sub>th</sub></code> element in the array, if <code>i</code> &lt; <code>j</code> and <code>a[i]</code> &gt; <code>a[j]</code> then it\'s an inverse pair; Otherwise, it\'s not.\r\n</p>\n<p>\r\nSince the answer may be very large, the answer should be modulo 10<sup>9</sup> + 7.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> n = 3, k = 0\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> \r\nOnly the array [1,2,3] which consists of numbers from 1 to 3 has exactly 0 inverse pair.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> n = 3, k = 1\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> \r\nThe array [1,3,2] and [2,1,3] have exactly 1 inverse pair.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The integer <code>n</code> is in the range [1, 1000] and <code>k</code> is in the range [0, 1000].</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an integer array, find three numbers whose product is maximum and output the maximum product.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2,3]\r\n<b>Output:</b> 6\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2,3,4]\r\n<b>Output:</b> 24\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the given array will be in range [3,10<sup>4</sup>] and all elements are in the range [-1000, 1000].</li>\n<li>Multiplication of any three numbers in the input won\'t exceed the range of 32-bit signed integer.</li>\n</ol>\n</p></p>\n</div>'


628 : maximum-product-of-three-numbers
625 : minimum-factorization


b'<div class="question-description">\n<p><p>Given an integer array, find three numbers whose product is maximum and output the maximum product.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2,3]\r\n<b>Output:</b> 6\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2,3,4]\r\n<b>Output:</b> 24\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the given array will be in range [3,10<sup>4</sup>] and all elements are in the range [-1000, 1000].</li>\n<li>Multiplication of any three numbers in the input won\'t exceed the range of 32-bit signed integer.</li>\n</ol>\n</p></p>\n</div>'




No Description


625 : minimum-factorization
624 : maximum-distance-in-arrays


No Description




No Description


624 : maximum-distance-in-arrays
623 : add-one-row-to-tree


No Description




b'<div class="question-description">\n<p><p>Given the root of a binary tree, then value <code>v</code> and depth <code>d</code>, you need to add a row of nodes with value <code>v</code> at the given depth <code>d</code>. The root node is at depth 1. </p>\n<p>The adding rule is: given a positive integer depth <code>d</code>, for each NOT null tree nodes <code>N</code> in depth <code>d-1</code>, create two tree nodes with value <code>v</code> as <code>N\'s</code> left subtree root and right subtree root. And <code>N\'s</code> <b>original left subtree</b> should be the left subtree of the new left subtree root, its <b>original right subtree</b> should be the right subtree of the new right subtree root. If depth <code>d</code> is 1 that means there is no depth d-1 at all, then create a tree node with value <b>v</b> as the new root of the whole original tree, and the original tree is the new root\'s left subtree.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\nA binary tree as following:\r\n       4\r\n     /   \\\r\n    2     6\r\n   / \\   / \r\n  3   1 5   \r\n\r\n<b>v = 1</b>\r\n\r\n<b>d = 2</b>\r\n\r\n<b>Output:</b> \r\n       4\r\n      / \\\r\n     1   1\r\n    /     \\\r\n   2       6\r\n  / \\     / \r\n 3   1   5   \r\n\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> \r\nA binary tree as following:\r\n      4\r\n     /   \r\n    2    \r\n   / \\   \r\n  3   1    \r\n\r\n<b>v = 1</b>\r\n\r\n<b>d = 3</b>\r\n\r\n<b>Output:</b> \r\n      4\r\n     /   \r\n    2\r\n   / \\    \r\n  1   1\r\n /     \\  \r\n3       1\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The given d is in range [1, maximum depth of the given tree + 1].</li>\n<li>The given binary tree has at least one tree node.</li>\n</ol>\n</p></p>\n</div>'


623 : add-one-row-to-tree
621 : task-scheduler


b'<div class="question-description">\n<p><p>Given a char array representing tasks CPU need to do. It contains capital letters A to Z where different letters represent different tasks.Tasks could be done without original order. Each task could be done in one interval. For each interval, CPU could finish one task or just be idle.</p>\n<p>However, there is a non-negative cooling interval <b>n</b> that means between two <b>same tasks</b>, there must be at least n intervals that CPU are doing different tasks or just be idle. </p>\n<p>You need to return the <b>least</b> number of intervals the CPU will take to finish all the given tasks.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> tasks = [\'A\',\'A\',\'A\',\'B\',\'B\',\'B\'], n = 2\r\n<b>Output:</b> 8\r\n<b>Explanation:</b> A -&gt; B -&gt; idle -&gt; A -&gt; B -&gt; idle -&gt; A -&gt; B.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The number of tasks is in the range [1, 10000].</li>\n<li>The integer n is in the range [0, 100].</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given the root of a binary tree, then value <code>v</code> and depth <code>d</code>, you need to add a row of nodes with value <code>v</code> at the given depth <code>d</code>. The root node is at depth 1. </p>\n<p>The adding rule is: given a positive integer depth <code>d</code>, for each NOT null tree nodes <code>N</code> in depth <code>d-1</code>, create two tree nodes with value <code>v</code> as <code>N\'s</code> left subtree root and right subtree root. And <code>N\'s</code> <b>original left subtree</b> should be the left subtree of the new left subtree root, its <b>original right subtree</b> should be the right subtree of the new right subtree root. If depth <code>d</code> is 1 that means there is no depth d-1 at all, then create a tree node with value <b>v</b> as the new root of the whole original tree, and the original tree is the new root\'s left subtree.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\nA binary tree as following:\r\n       4\r\n     /   \\\r\n    2     6\r\n   / \\   / \r\n  3   1 5   \r\n\r\n<b>v = 1</b>\r\n\r\n<b>d = 2</b>\r\n\r\n<b>Output:</b> \r\n       4\r\n      / \\\r\n     1   1\r\n    /     \\\r\n   2       6\r\n  / \\     / \r\n 3   1   5   \r\n\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> \r\nA binary tree as following:\r\n      4\r\n     /   \r\n    2    \r\n   / \\   \r\n  3   1    \r\n\r\n<b>v = 1</b>\r\n\r\n<b>d = 3</b>\r\n\r\n<b>Output:</b> \r\n      4\r\n     /   \r\n    2\r\n   / \\    \r\n  1   1\r\n /     \\  \r\n3       1\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The given d is in range [1, maximum depth of the given tree + 1].</li>\n<li>The given binary tree has at least one tree node.</li>\n</ol>\n</p></p>\n</div>'


621 : task-scheduler
617 : merge-two-binary-trees


b'<div class="question-description">\n<p><p>Given a char array representing tasks CPU need to do. It contains capital letters A to Z where different letters represent different tasks.Tasks could be done without original order. Each task could be done in one interval. For each interval, CPU could finish one task or just be idle.</p>\n<p>However, there is a non-negative cooling interval <b>n</b> that means between two <b>same tasks</b>, there must be at least n intervals that CPU are doing different tasks or just be idle. </p>\n<p>You need to return the <b>least</b> number of intervals the CPU will take to finish all the given tasks.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> tasks = [\'A\',\'A\',\'A\',\'B\',\'B\',\'B\'], n = 2\r\n<b>Output:</b> 8\r\n<b>Explanation:</b> A -&gt; B -&gt; idle -&gt; A -&gt; B -&gt; idle -&gt; A -&gt; B.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The number of tasks is in the range [1, 10000].</li>\n<li>The integer n is in the range [0, 100].</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two binary trees and imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not. \r\n</p>\n<p>\r\nYou need to merge them into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of new tree.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n\tTree 1                     Tree 2                  \r\n          1                         2                             \r\n         / \\                       / \\                            \r\n        3   2                     1   3                        \r\n       /                           \\   \\                      \r\n      5                             4   7                  \r\n<b>Output:</b> \r\nMerged tree:\r\n\t     3\r\n\t    / \\\r\n\t   4   5\r\n\t  / \\   \\ \r\n\t 5   4   7\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe merging process must start from the root nodes of both trees.\r\n</p>\n</p>\n</div>'


617 : merge-two-binary-trees
616 : add-bold-tag-in-string


b'<div class="question-description">\n<p><p>\r\nGiven two binary trees and imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not. \r\n</p>\n<p>\r\nYou need to merge them into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of new tree.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n\tTree 1                     Tree 2                  \r\n          1                         2                             \r\n         / \\                       / \\                            \r\n        3   2                     1   3                        \r\n       /                           \\   \\                      \r\n      5                             4   7                  \r\n<b>Output:</b> \r\nMerged tree:\r\n\t     3\r\n\t    / \\\r\n\t   4   5\r\n\t  / \\   \\ \r\n\t 5   4   7\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe merging process must start from the root nodes of both trees.\r\n</p>\n</p>\n</div>'




No Description


616 : add-bold-tag-in-string
611 : valid-triangle-number


b'<div class="question-description">\n<p>Given an array consists of non-negative integers,  your task is to count the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.\r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [2,2,3,4]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b>\r\nValid combinations are: \r\n2,3,4 (using the first 2)\r\n2,3,4 (using the second 2)\r\n2,2,3\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the given array won\'t exceed 1000.</li>\n<li>The integers in the given array are in the range of [0, 1000].</li>\n</ol>\n</p>\n</p>\n</div>'


611 : valid-triangle-number
609 : find-duplicate-file-in-system


No Description




b'<div class="question-description">\n<p>Given an array consists of non-negative integers,  your task is to count the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.\r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [2,2,3,4]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b>\r\nValid combinations are: \r\n2,3,4 (using the first 2)\r\n2,3,4 (using the second 2)\r\n2,2,3\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the given array won\'t exceed 1000.</li>\n<li>The integers in the given array are in the range of [0, 1000].</li>\n</ol>\n</p>\n</p>\n</div>'




b'<div class="question-description">\n<p><p>Given a list of directory info including directory path, and all the files with contents in this directory, you need to find out all the groups of duplicate files in the file system in terms of their paths.</p>\n<p>A group of duplicate files consists of at least <b>two</b> files that have exactly the same content.</p>\n<p>A single directory info string in the <b>input</b> list has the following format: </p>\n<p><code>"root/d1/d2/.../dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)"</code><br/></p>\n<p>It means there are <b>n</b> files (<code>f1.txt</code>, <code>f2.txt</code> ... <code>fn.txt</code> with content <code>f1_content</code>, <code>f2_content</code> ... <code>fn_content</code>, respectively) in directory <code>root/d1/d2/.../dm</code>. Note that n &gt;= 1 and m &gt;= 0. If m = 0, it means the directory is just the root directory.</p>\n<p>The <b>output</b> is a list of group of duplicate file paths. For each group, it contains all the file paths of the files that have the same content. A file path is a string that has the following format: </p>\n<p><code>"directory_path/file_name.txt"</code></p>\n<p><b>Example 1:</b><br>\n<pre>\r\n<b>Input:</b>\r\n["root/a 1.txt(abcd) 2.txt(efgh)", "root/c 3.txt(abcd)", "root/c/d 4.txt(efgh)", "root 4.txt(efgh)"]\r\n<b>Output:</b>  \r\n[["root/a/2.txt","root/c/d/4.txt","root/4.txt"],["root/a/1.txt","root/c/3.txt"]]\r\n</pre>\n</br></p>\n<p><b>Note:</b><br/>\n<ol>\n<li>No order is required for the final output.</li>\n<li>You may assume the directory name, file name and file content only has letters and digits, and the length of file content is in the range of [1,50].</li>\n<li>The number of files given is in the range of [1,20000].</li>\n<li>You may assume no files or directories share the same name in the same directory.</li>\n<li>You may assume each given directory info represents a unique directory. Directory path and file info are separated by a single blank space.</li>\n</ol>\n</p>\n<b>Follow-up beyond contest:</b>\n<ol>\n<li> Imagine you are given a real file system, how will you search files? DFS or BFS?</li>\n<li> If the file content is very large (GB level), how will you modify your solution?</li>\n<li> If you can only read the file by 1kb each time, how will you modify your solution?</li>\n<li> What is the time complexity of your modified solution? What is the most time-consuming part and memory consuming part of it? How to optimize?</li>\n<li> How to make sure the duplicated files you find are not false positive?</li>\n</ol></p>\n</div>'


609 : find-duplicate-file-in-system
606 : construct-string-from-binary-tree


b'<div class="question-description">\n<p><p>Given a list of directory info including directory path, and all the files with contents in this directory, you need to find out all the groups of duplicate files in the file system in terms of their paths.</p>\n<p>A group of duplicate files consists of at least <b>two</b> files that have exactly the same content.</p>\n<p>A single directory info string in the <b>input</b> list has the following format: </p>\n<p><code>"root/d1/d2/.../dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)"</code><br/></p>\n<p>It means there are <b>n</b> files (<code>f1.txt</code>, <code>f2.txt</code> ... <code>fn.txt</code> with content <code>f1_content</code>, <code>f2_content</code> ... <code>fn_content</code>, respectively) in directory <code>root/d1/d2/.../dm</code>. Note that n &gt;= 1 and m &gt;= 0. If m = 0, it means the directory is just the root directory.</p>\n<p>The <b>output</b> is a list of group of duplicate file paths. For each group, it contains all the file paths of the files that have the same content. A file path is a string that has the following format: </p>\n<p><code>"directory_path/file_name.txt"</code></p>\n<p><b>Example 1:</b><br>\n<pre>\r\n<b>Input:</b>\r\n["root/a 1.txt(abcd) 2.txt(efgh)", "root/c 3.txt(abcd)", "root/c/d 4.txt(efgh)", "root 4.txt(efgh)"]\r\n<b>Output:</b>  \r\n[["root/a/2.txt","root/c/d/4.txt","root/4.txt"],["root/a/1.txt","root/c/3.txt"]]\r\n</pre>\n</br></p>\n<p><b>Note:</b><br/>\n<ol>\n<li>No order is required for the final output.</li>\n<li>You may assume the directory name, file name and file content only has letters and digits, and the length of file content is in the range of [1,50].</li>\n<li>The number of files given is in the range of [1,20000].</li>\n<li>You may assume no files or directories share the same name in the same directory.</li>\n<li>You may assume each given directory info represents a unique directory. Directory path and file info are separated by a single blank space.</li>\n</ol>\n</p>\n<b>Follow-up beyond contest:</b>\n<ol>\n<li> Imagine you are given a real file system, how will you search files? DFS or BFS?</li>\n<li> If the file content is very large (GB level), how will you modify your solution?</li>\n<li> If you can only read the file by 1kb each time, how will you modify your solution?</li>\n<li> What is the time complexity of your modified solution? What is the most time-consuming part and memory consuming part of it? How to optimize?</li>\n<li> How to make sure the duplicated files you find are not false positive?</li>\n</ol></p>\n</div>'




b'<div class="question-description">\n<p><p>You need to construct a string consists of parenthesis and integers from a binary tree with the preorder traversing way.</p>\n<p>The null node needs to be represented by empty parenthesis pair "()". And you need to omit all the empty parenthesis pairs that don\'t affect the one-to-one mapping relationship between the string and the original binary tree.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> Binary tree: [1,2,3,4]\r\n       1\r\n     /   \\\r\n    2     3\r\n   /    \r\n  4     \r\n\r\n<b>Output:</b> "1(2(4))(3)"\r\n<br/><b>Explanation:</b> Originallay it needs to be "1(2(4)())(3()())", <br/>but you need to omit all the unnecessary empty parenthesis pairs. <br/>And it will be "1(2(4))(3)".\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> Binary tree: [1,2,3,null,4]\r\n       1\r\n     /   \\\r\n    2     3\r\n     \\  \r\n      4 \r\n\r\n<b>Output:</b> "1(2()(4))(3)"\r\n<br/><b>Explanation:</b> Almost the same as the first example, <br/>except we can\'t omit the first parenthesis pair to break the one-to-one mapping relationship between the input and the output.\r\n</pre>\n</p></p>\n</div>'


606 : construct-string-from-binary-tree
605 : can-place-flowers


b'<div class="question-description">\n<p><p>You need to construct a string consists of parenthesis and integers from a binary tree with the preorder traversing way.</p>\n<p>The null node needs to be represented by empty parenthesis pair "()". And you need to omit all the empty parenthesis pairs that don\'t affect the one-to-one mapping relationship between the string and the original binary tree.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> Binary tree: [1,2,3,4]\r\n       1\r\n     /   \\\r\n    2     3\r\n   /    \r\n  4     \r\n\r\n<b>Output:</b> "1(2(4))(3)"\r\n<br/><b>Explanation:</b> Originallay it needs to be "1(2(4)())(3()())", <br/>but you need to omit all the unnecessary empty parenthesis pairs. <br/>And it will be "1(2(4))(3)".\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> Binary tree: [1,2,3,null,4]\r\n       1\r\n     /   \\\r\n    2     3\r\n     \\  \r\n      4 \r\n\r\n<b>Output:</b> "1(2()(4))(3)"\r\n<br/><b>Explanation:</b> Almost the same as the first example, <br/>except we can\'t omit the first parenthesis pair to break the one-to-one mapping relationship between the input and the output.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Suppose you have a long flowerbed in which some of the plots are planted and some are not. However, flowers cannot be planted in adjacent plots - they would compete for water and both would die.</p>\n<p>Given a flowerbed (represented as an array containing 0 and 1, where 0 means empty and 1 means not empty), and a number <b>n</b>, return if <b>n</b> new flowers can be planted in it without violating the no-adjacent-flowers rule.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> flowerbed = [1,0,0,0,1], n = 1\r\n<b>Output:</b> True\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> flowerbed = [1,0,0,0,1], n = 2\r\n<b>Output:</b> False\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input array won\'t violate no-adjacent-flowers rule.</li>\n<li>The input array size is in the range of [1, 20000].</li>\n<li><b>n</b> is a non-negative integer which won\'t exceed the input array size.</li>\n</ol>\n</p></p>\n</div>'


605 : can-place-flowers
604 : design-compressed-string-iterator


b'<div class="question-description">\n<p><p>Suppose you have a long flowerbed in which some of the plots are planted and some are not. However, flowers cannot be planted in adjacent plots - they would compete for water and both would die.</p>\n<p>Given a flowerbed (represented as an array containing 0 and 1, where 0 means empty and 1 means not empty), and a number <b>n</b>, return if <b>n</b> new flowers can be planted in it without violating the no-adjacent-flowers rule.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> flowerbed = [1,0,0,0,1], n = 1\r\n<b>Output:</b> True\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> flowerbed = [1,0,0,0,1], n = 2\r\n<b>Output:</b> False\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input array won\'t violate no-adjacent-flowers rule.</li>\n<li>The input array size is in the range of [1, 20000].</li>\n<li><b>n</b> is a non-negative integer which won\'t exceed the input array size.</li>\n</ol>\n</p></p>\n</div>'




No Description


604 : design-compressed-string-iterator
600 : non-negative-integers-without-consecutive-ones


No Description




b'<div class="question-description">\n<p><p>Given a positive integer n, find the number of <b>non-negative</b> integers less than or equal to n, whose binary representations do NOT contain <b>consecutive ones</b>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 5\r\n<b>Output:</b> 5\r\n<b>Explanation:</b> \r\nHere are the non-negative integers &lt;= 5 with their corresponding binary representations:\r\n0 : 0\r\n1 : 1\r\n2 : 10\r\n3 : 11\r\n4 : 100\r\n5 : 101\r\nAmong them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule. \r\n</pre>\n</p>\n<p><b>Note:</b>\r\n1 &lt;= n &lt;= 10<sup>9</sup>\n</p>\n</p>\n</div>'


600 : non-negative-integers-without-consecutive-ones
599 : minimum-index-sum-of-two-lists


b'<div class="question-description">\n<p><p>Given a positive integer n, find the number of <b>non-negative</b> integers less than or equal to n, whose binary representations do NOT contain <b>consecutive ones</b>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 5\r\n<b>Output:</b> 5\r\n<b>Explanation:</b> \r\nHere are the non-negative integers &lt;= 5 with their corresponding binary representations:\r\n0 : 0\r\n1 : 1\r\n2 : 10\r\n3 : 11\r\n4 : 100\r\n5 : 101\r\nAmong them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule. \r\n</pre>\n</p>\n<p><b>Note:</b>\r\n1 &lt;= n &lt;= 10<sup>9</sup>\n</p>\n</p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nSuppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of favorite restaurants represented by strings. \r\n</p>\n<p>\r\nYou need to help them find out their <b>common interest</b> with the <b>least list index sum</b>. If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n["Shogun", "Tapioca Express", "Burger King", "KFC"]\r\n["Piatti", "The Grill at Torrey Pines", "Hungry Hunter Steakhouse", "Shogun"]\r\n<b>Output:</b> ["Shogun"]\r\n<b>Explanation:</b> The only restaurant they both like is "Shogun".\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n["Shogun", "Tapioca Express", "Burger King", "KFC"]\r\n["KFC", "Shogun", "Burger King"]\r\n<b>Output:</b> ["Shogun"]\r\n<b>Explanation:</b> The restaurant they both like and have the least index sum is "Shogun" with index sum 1 (0+1).\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of both lists will be in the range of [1, 1000].</li>\n<li>The length of strings in both lists will be in the range of [1, 30].</li>\n<li>The index is starting from 0 to the list length minus 1.</li>\n<li>No duplicates in both lists.</li>\n</ol>\n</p></p>\n</div>'


599 : minimum-index-sum-of-two-lists
598 : range-addition-ii


b'<div class="question-description">\n<p><p>\r\nSuppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of favorite restaurants represented by strings. \r\n</p>\n<p>\r\nYou need to help them find out their <b>common interest</b> with the <b>least list index sum</b>. If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n["Shogun", "Tapioca Express", "Burger King", "KFC"]\r\n["Piatti", "The Grill at Torrey Pines", "Hungry Hunter Steakhouse", "Shogun"]\r\n<b>Output:</b> ["Shogun"]\r\n<b>Explanation:</b> The only restaurant they both like is "Shogun".\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n["Shogun", "Tapioca Express", "Burger King", "KFC"]\r\n["KFC", "Shogun", "Burger King"]\r\n<b>Output:</b> ["Shogun"]\r\n<b>Explanation:</b> The restaurant they both like and have the least index sum is "Shogun" with index sum 1 (0+1).\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of both lists will be in the range of [1, 1000].</li>\n<li>The length of strings in both lists will be in the range of [1, 30].</li>\n<li>The index is starting from 0 to the list length minus 1.</li>\n<li>No duplicates in both lists.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an m * n matrix <b>M</b> initialized with all <b>0</b>\'s and several update operations.</p>\n<p>Operations are represented by a 2D array, and each operation is represented by an array with two <b>positive</b> integers <b>a</b> and <b>b</b>, which means <b>M[i][j]</b> should be <b>added by one</b> for all <b>0 &lt;= i &lt; a</b> and <b>0 &lt;= j &lt; b</b>. </p>\n<p>You need to count and return the number of maximum integers in the matrix after performing all the operations.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\nm = 3, n = 3\r\noperations = [[2,2],[3,3]]\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> \r\nInitially, M = \r\n[[0, 0, 0],\r\n [0, 0, 0],\r\n [0, 0, 0]]\r\n\r\nAfter performing [2,2], M = \r\n[[1, 1, 0],\r\n [1, 1, 0],\r\n [0, 0, 0]]\r\n\r\nAfter performing [3,3], M = \r\n[[2, 2, 1],\r\n [2, 2, 1],\r\n [1, 1, 1]]\r\n\r\nSo the maximum integer in M is 2, and there are four of it in M. So return 4.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The range of m and n is [1,40000].</li>\n<li>The range of a is [1,m], and the range of b is [1,n].</li>\n<li>The range of operations size won\'t exceed 10,000.</li>\n</ol>\n</p></p>\n</div>'


598 : range-addition-ii
594 : longest-harmonious-subsequence


b'<div class="question-description">\n<p><p>Given an m * n matrix <b>M</b> initialized with all <b>0</b>\'s and several update operations.</p>\n<p>Operations are represented by a 2D array, and each operation is represented by an array with two <b>positive</b> integers <b>a</b> and <b>b</b>, which means <b>M[i][j]</b> should be <b>added by one</b> for all <b>0 &lt;= i &lt; a</b> and <b>0 &lt;= j &lt; b</b>. </p>\n<p>You need to count and return the number of maximum integers in the matrix after performing all the operations.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\nm = 3, n = 3\r\noperations = [[2,2],[3,3]]\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> \r\nInitially, M = \r\n[[0, 0, 0],\r\n [0, 0, 0],\r\n [0, 0, 0]]\r\n\r\nAfter performing [2,2], M = \r\n[[1, 1, 0],\r\n [1, 1, 0],\r\n [0, 0, 0]]\r\n\r\nAfter performing [3,3], M = \r\n[[2, 2, 1],\r\n [2, 2, 1],\r\n [1, 1, 1]]\r\n\r\nSo the maximum integer in M is 2, and there are four of it in M. So return 4.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The range of m and n is [1,40000].</li>\n<li>The range of a is [1,m], and the range of b is [1,n].</li>\n<li>The range of operations size won\'t exceed 10,000.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>We define a harmonious array is an array where the difference between its maximum value and its minimum value is <b>exactly</b> 1.</p>\n<p>Now, given an integer array, you need to find the length of its longest harmonious subsequence among all its possible <a href="https://en.wikipedia.org/wiki/Subsequence">subsequences</a>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,3,2,2,5,2,3,7]\r\n<b>Output:</b> 5\r\n<b>Explanation:</b> The longest harmonious subsequence is [3,2,2,2,3].\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe length of the input array will not exceed 20,000.\r\n</p>\n</p>\n</div>'


594 : longest-harmonious-subsequence
593 : valid-square


b'<div class="question-description">\n<p><p>We define a harmonious array is an array where the difference between its maximum value and its minimum value is <b>exactly</b> 1.</p>\n<p>Now, given an integer array, you need to find the length of its longest harmonious subsequence among all its possible <a href="https://en.wikipedia.org/wiki/Subsequence">subsequences</a>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,3,2,2,5,2,3,7]\r\n<b>Output:</b> 5\r\n<b>Explanation:</b> The longest harmonious subsequence is [3,2,2,2,3].\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe length of the input array will not exceed 20,000.\r\n</p>\n</p>\n</div>'




b'<div class="question-description">\n<p><p>Given the coordinates of four points in 2D space, return whether the four points could construct a square.</p>\n<p>The coordinate (x,y) of a point is represented by an integer array with two integers.</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\r\n<b>Output:</b> True\r\n</pre>\n</p>\n<p> Note: \r\n<ol>\n<li>All the input integers are in the range [-10000, 10000].</li>\n<li>A valid square has four equal sides with positive length and four equal angles (90-degree angles).</li>\n<li>Input points have no order.</li>\n</ol>\n</p></p>\n</div>'


593 : valid-square
592 : fraction-addition-and-subtraction


b'<div class="question-description">\n<p><p>Given the coordinates of four points in 2D space, return whether the four points could construct a square.</p>\n<p>The coordinate (x,y) of a point is represented by an integer array with two integers.</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\r\n<b>Output:</b> True\r\n</pre>\n</p>\n<p> Note: \r\n<ol>\n<li>All the input integers are in the range [-10000, 10000].</li>\n<li>A valid square has four equal sides with positive length and four equal angles (90-degree angles).</li>\n<li>Input points have no order.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string representing an expression of fraction addition and subtraction, you need to return the calculation result in string format. The final result should be <a href="https://en.wikipedia.org/wiki/Irreducible_fraction">irreducible fraction</a>. If your final result is an integer, say <code>2</code>, you need to change it to the format of fraction that has denominator <code>1</code>. So in this case, <code>2</code> should be converted to <code>2/1</code>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>"-1/2+1/2"\r\n<b>Output:</b> "0/1"\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b>"-1/2+1/2+1/3"\r\n<b>Output:</b> "1/3"\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b>"1/3-1/2"\r\n<b>Output:</b> "-1/6"\r\n</pre>\n</p>\n<p><b>Example 4:</b><br/>\n<pre>\r\n<b>Input:</b>"5/3+1/3"\r\n<b>Output:</b> "2/1"\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input string only contains <code>\'0\'</code> to <code>\'9\'</code>, <code>\'/\'</code>, <code>\'+\'</code> and <code>\'-\'</code>. So does the output.</li>\n<li>Each fraction (input and output) has format <code>\xc2\xb1numerator/denominator</code>. If the first input fraction or the output is positive, then <code>\'+\'</code> will be omitted.</li>\n<li>The input only contains valid <b>irreducible fractions</b>, where the <b>numerator</b> and <b>denominator</b> of each fraction will always be in the range [1,10]. If the denominator is 1, it means this fraction is actually an integer in a fraction format defined above.</li>\n<li>The number of given fractions will be in the range [1,10].</li>\n<li>The numerator and denominator of the <b>final result</b> are guaranteed to be valid and in the range of 32-bit int.</li>\n</ol>\n</p></p>\n</div>'


592 : fraction-addition-and-subtraction
591 : tag-validator


b'<div class="question-description">\n<p><p>Given a string representing an expression of fraction addition and subtraction, you need to return the calculation result in string format. The final result should be <a href="https://en.wikipedia.org/wiki/Irreducible_fraction">irreducible fraction</a>. If your final result is an integer, say <code>2</code>, you need to change it to the format of fraction that has denominator <code>1</code>. So in this case, <code>2</code> should be converted to <code>2/1</code>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>"-1/2+1/2"\r\n<b>Output:</b> "0/1"\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b>"-1/2+1/2+1/3"\r\n<b>Output:</b> "1/3"\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b>"1/3-1/2"\r\n<b>Output:</b> "-1/6"\r\n</pre>\n</p>\n<p><b>Example 4:</b><br/>\n<pre>\r\n<b>Input:</b>"5/3+1/3"\r\n<b>Output:</b> "2/1"\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input string only contains <code>\'0\'</code> to <code>\'9\'</code>, <code>\'/\'</code>, <code>\'+\'</code> and <code>\'-\'</code>. So does the output.</li>\n<li>Each fraction (input and output) has format <code>\xc2\xb1numerator/denominator</code>. If the first input fraction or the output is positive, then <code>\'+\'</code> will be omitted.</li>\n<li>The input only contains valid <b>irreducible fractions</b>, where the <b>numerator</b> and <b>denominator</b> of each fraction will always be in the range [1,10]. If the denominator is 1, it means this fraction is actually an integer in a fraction format defined above.</li>\n<li>The number of given fractions will be in the range [1,10].</li>\n<li>The numerator and denominator of the <b>final result</b> are guaranteed to be valid and in the range of 32-bit int.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string representing a code snippet, you need to implement a tag validator to parse the code and return whether it is valid. A code snippet is valid if all the following rules hold:<p>\n<ol>\n<li>The code must be wrapped in a <b>valid closed tag</b>. Otherwise, the code is invalid.</li>\n<li>A <b>closed tag</b> (not necessarily valid) has exactly the following format : <code>&lt;TAG_NAME&gt;TAG_CONTENT&lt;/TAG_NAME&gt;</code>. Among them, <code>&lt;TAG_NAME&gt;</code> is the start tag, and <code>&lt;/TAG_NAME&gt;</code> is the end tag. The TAG_NAME in start and end tags should be the same. A closed tag is <b>valid</b> if and only if the TAG_NAME and TAG_CONTENT are valid.</li>\n<li>A <b>valid</b> <code>TAG_NAME</code> only contain <b>upper-case letters</b>, and has length in range [1,9]. Otherwise, the <code>TAG_NAME</code> is <b>invalid</b>.</li>\n<li>A <b>valid</b> <code>TAG_CONTENT</code> may contain other <b>valid closed tags</b>, <b>cdata</b> and any characters (see note1) <b>EXCEPT</b> unmatched <code>&lt;</code>, unmatched start and end tag, and unmatched or closed tags with invalid TAG_NAME. Otherwise, the <code>TAG_CONTENT</code> is <b>invalid</b>.</li>\n<li>A start tag is unmatched if no end tag exists with the same TAG_NAME, and vice versa. However, you also need to consider the issue of unbalanced when tags are nested.</li>\n<li>A <code>&lt;</code> is unmatched if you cannot find a subsequent <code>&gt;</code>. And when you find a <code>&lt;</code> or <code>&lt;/</code>, all the subsequent characters until the next <code>&gt;</code> should be parsed as TAG_NAME  (not necessarily valid).</li>\n<li>The cdata has the following format : <code>&lt;![CDATA[CDATA_CONTENT]]&gt;</code>. The range of <code>CDATA_CONTENT</code> is defined as the characters between <code>&lt;![CDATA[</code> and the <b>first subsequent</b> <code>]]&gt;</code>. </li>\n<li><code>CDATA_CONTENT</code> may contain <b>any characters</b>. The function of cdata is to forbid the validator to parse <code>CDATA_CONTENT</code>, so even it has some characters that can be parsed as tag (no matter valid or invalid), you should treat it as <b>regular characters</b>. </li>\n</ol>\n<p><b>Valid Code Examples:</b><br/>\n<pre>\r\n<b>Input:</b> "&lt;DIV&gt;This is the first line &lt;![CDATA[&lt;div&gt;]]&gt;&lt;/DIV&gt;"<br/>\r\n<b>Output:</b> True<br/>\r\n<b>Explanation:</b> <br/>\r\nThe code is wrapped in a closed tag : &lt;DIV&gt; and &lt;/DIV&gt;. <br/>\r\nThe TAG_NAME is valid, the TAG_CONTENT consists of some characters and cdata. <br/>\r\nAlthough CDATA_CONTENT has unmatched start tag with invalid TAG_NAME, it should be considered as plain text, not parsed as tag.<br/>\r\nSo TAG_CONTENT is valid, and then the code is valid. Thus return true.<br>\r\n\r\n<b>Input:</b> "&lt;DIV&gt;&gt;&gt;  ![cdata[]] &lt;![CDATA[&lt;div&gt;]&gt;]]&gt;]]&gt;&gt;]&lt;/DIV&gt;"<br>\r\n<b>Output:</b> True<br>\r\n<b>Explanation:</b><br>\r\nWe first separate the code into : start_tag|tag_content|end_tag.<br/>\r\nstart_tag -&gt; <b>"&lt;DIV&gt;"</b><br/>\r\nend_tag -&gt; <b>"&lt;/DIV&gt;"</b><br/>\r\ntag_content could also be separated into : text1|cdata|text2.<br/>\r\ntext1 -&gt; <b>"&gt;&gt;  ![cdata[]] "</b><br/>\r\ncdata -&gt; <b>"&lt;![CDATA[&lt;div&gt;]&gt;]]&gt;"</b>, where the CDATA_CONTENT is <b>"&lt;div&gt;]&gt;"</b><br/>\r\ntext2 -&gt; <b>"]]&gt;&gt;]"</b><br/>\r\n\r\nThe reason why start_tag is NOT <b>"&lt;DIV&gt;&gt;&gt;"</b> is because of the rule 6.\r\nThe reason why cdata is NOT <b>"&lt;![CDATA[&lt;div&gt;]&gt;]]&gt;]]&gt;"</b> is because of the rule 7.\r\n</br></br></br></br></pre>\n</p>\n<p><b>Invalid Code Examples:</b><br/>\n<pre>\r\n<b>Input:</b> "&lt;A&gt;  &lt;B&gt; &lt;/A&gt;   &lt;/B&gt;"\r\n<b>Output:</b> False\r\n<b>Explanation:</b> Unbalanced. If "&lt;A&gt;" is closed, then "&lt;B&gt;" must be unmatched, and vice versa.\r\n\r\n<b>Input:</b> "&lt;DIV&gt;  div tag is not closed  &lt;DIV&gt;"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> "&lt;DIV&gt;  unmatched &lt;  &lt;/DIV&gt;"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> "&lt;DIV&gt; closed tags with invalid tag name  &lt;b&gt;123&lt;/b&gt; &lt;/DIV&gt;"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> "&lt;DIV&gt; unmatched tags with invalid tag name  &lt;/1234567890&gt; and &lt;CDATA[[]]&gt;  &lt;/DIV&gt;"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> "&lt;DIV&gt;  unmatched start tag &lt;B&gt;  and unmatched end tag &lt;/C&gt;  &lt;/DIV&gt;"\r\n<b>Output:</b> False\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>For simplicity, you could assume the input code (including the <b>any characters</b> mentioned above) only contain <code>letters</code>, <code>digits</code>, <code>\'&lt;\'</code>,<code>\'&gt;\'</code>,<code>\'/\'</code>,<code>\'!\'</code>,<code>\'[\'</code>,<code>\']\'</code> and <code>\' \'</code>.</li>\n</ol>\n</p></p>\n</p></p></div>'


591 : tag-validator
588 : design-in-memory-file-system


b'<div class="question-description">\n<p><p>Given a string representing a code snippet, you need to implement a tag validator to parse the code and return whether it is valid. A code snippet is valid if all the following rules hold:<p>\n<ol>\n<li>The code must be wrapped in a <b>valid closed tag</b>. Otherwise, the code is invalid.</li>\n<li>A <b>closed tag</b> (not necessarily valid) has exactly the following format : <code>&lt;TAG_NAME&gt;TAG_CONTENT&lt;/TAG_NAME&gt;</code>. Among them, <code>&lt;TAG_NAME&gt;</code> is the start tag, and <code>&lt;/TAG_NAME&gt;</code> is the end tag. The TAG_NAME in start and end tags should be the same. A closed tag is <b>valid</b> if and only if the TAG_NAME and TAG_CONTENT are valid.</li>\n<li>A <b>valid</b> <code>TAG_NAME</code> only contain <b>upper-case letters</b>, and has length in range [1,9]. Otherwise, the <code>TAG_NAME</code> is <b>invalid</b>.</li>\n<li>A <b>valid</b> <code>TAG_CONTENT</code> may contain other <b>valid closed tags</b>, <b>cdata</b> and any characters (see note1) <b>EXCEPT</b> unmatched <code>&lt;</code>, unmatched start and end tag, and unmatched or closed tags with invalid TAG_NAME. Otherwise, the <code>TAG_CONTENT</code> is <b>invalid</b>.</li>\n<li>A start tag is unmatched if no end tag exists with the same TAG_NAME, and vice versa. However, you also need to consider the issue of unbalanced when tags are nested.</li>\n<li>A <code>&lt;</code> is unmatched if you cannot find a subsequent <code>&gt;</code>. And when you find a <code>&lt;</code> or <code>&lt;/</code>, all the subsequent characters until the next <code>&gt;</code> should be parsed as TAG_NAME  (not necessarily valid).</li>\n<li>The cdata has the following format : <code>&lt;![CDATA[CDATA_CONTENT]]&gt;</code>. The range of <code>CDATA_CONTENT</code> is defined as the characters between <code>&lt;![CDATA[</code> and the <b>first subsequent</b> <code>]]&gt;</code>. </li>\n<li><code>CDATA_CONTENT</code> may contain <b>any characters</b>. The function of cdata is to forbid the validator to parse <code>CDATA_CONTENT</code>, so even it has some characters that can be parsed as tag (no matter valid or invalid), you should treat it as <b>regular characters</b>. </li>\n</ol>\n<p><b>Valid Code Examples:</b><br/>\n<pre>\r\n<b>Input:</b> "&lt;DIV&gt;This is the first line &lt;![CDATA[&lt;div&gt;]]&gt;&lt;/DIV&gt;"<br/>\r\n<b>Output:</b> True<br/>\r\n<b>Explanation:</b> <br/>\r\nThe code is wrapped in a closed tag : &lt;DIV&gt; and &lt;/DIV&gt;. <br/>\r\nThe TAG_NAME is valid, the TAG_CONTENT consists of some characters and cdata. <br/>\r\nAlthough CDATA_CONTENT has unmatched start tag with invalid TAG_NAME, it should be considered as plain text, not parsed as tag.<br/>\r\nSo TAG_CONTENT is valid, and then the code is valid. Thus return true.<br>\r\n\r\n<b>Input:</b> "&lt;DIV&gt;&gt;&gt;  ![cdata[]] &lt;![CDATA[&lt;div&gt;]&gt;]]&gt;]]&gt;&gt;]&lt;/DIV&gt;"<br>\r\n<b>Output:</b> True<br>\r\n<b>Explanation:</b><br>\r\nWe first separate the code into : start_tag|tag_content|end_tag.<br/>\r\nstart_tag -&gt; <b>"&lt;DIV&gt;"</b><br/>\r\nend_tag -&gt; <b>"&lt;/DIV&gt;"</b><br/>\r\ntag_content could also be separated into : text1|cdata|text2.<br/>\r\ntext1 -&gt; <b>"&gt;&gt;  ![cdata[]] "</b><br/>\r\ncdata -&gt; <b>"&lt;![CDATA[&lt;div&gt;]&gt;]]&gt;"</b>, where the CDATA_CONTENT is <b>"&lt;div&gt;]&gt;"</b><br/>\r\ntext2 -&gt; <b>"]]&gt;&gt;]"</b><br/>\r\n\r\nThe reason why start_tag is NOT <b>"&lt;DIV&gt;&gt;&gt;"</b> is because of the rule 6.\r\nThe reason why cdata is NOT <b>"&lt;![CDATA[&lt;div&gt;]&gt;]]&gt;]]&gt;"</b> is because of the rule 7.\r\n</br></br></br></br></pre>\n</p>\n<p><b>Invalid Code Examples:</b><br/>\n<pre>\r\n<b>Input:</b> "&lt;A&gt;  &lt;B&gt; &lt;/A&gt;   &lt;/B&gt;"\r\n<b>Output:</b> False\r\n<b>Explanation:</b> Unbalanced. If "&lt;A&gt;" is closed, then "&lt;B&gt;" must be unmatched, and vice versa.\r\n\r\n<b>Input:</b> "&lt;DIV&gt;  div tag is not closed  &lt;DIV&gt;"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> "&lt;DIV&gt;  unmatched &lt;  &lt;/DIV&gt;"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> "&lt;DIV&gt; closed tags with invalid tag name  &lt;b&gt;123&lt;/b&gt; &lt;/DIV&gt;"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> "&lt;DIV&gt; unmatched tags with invalid tag name  &lt;/1234567890&gt; and &lt;CDATA[[]]&gt;  &lt;/DIV&gt;"\r\n<b>Output:</b> False\r\n\r\n<b>Input:</b> "&lt;DIV&gt;  unmatched start tag &lt;B&gt;  and unmatched end tag &lt;/C&gt;  &lt;/DIV&gt;"\r\n<b>Output:</b> False\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>For simplicity, you could assume the input code (including the <b>any characters</b> mentioned above) only contain <code>letters</code>, <code>digits</code>, <code>\'&lt;\'</code>,<code>\'&gt;\'</code>,<code>\'/\'</code>,<code>\'!\'</code>,<code>\'[\'</code>,<code>\']\'</code> and <code>\' \'</code>.</li>\n</ol>\n</p></p>\n</p></p></div>'




No Description


588 : design-in-memory-file-system
587 : erect-the-fence


No Description




b'<div class="question-description">\n<p><p>There are some trees, where each tree is represented by (x,y) coordinate in a two-dimensional garden. Your job is to fence the entire garden using the <b>minimum length</b> of rope as it is expensive. The garden is well fenced only if all the trees are enclosed. Your task is to help find the coordinates of trees which are exactly located on the fence perimeter.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]\r\n<b>Output:</b> [[1,1],[2,0],[4,2],[3,3],[2,4]]\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/erect_the_fence_1.png" width="30%">\r\n</img></pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [[1,2],[2,2],[4,2]]\r\n<b>Output:</b> [[1,2],[2,2],[4,2]]\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/erect_the_fence_2.png" width="30%"/>\r\nEven you only have trees in a line, you need to use rope to enclose them. \r\n</pre>\n</p>\n<p> Note: \r\n<ol>\n<li>All trees should be enclosed together. You cannot cut the rope to enclose trees that will separate them in more than one group.</li>\n<li>All input integers will range from 0 to 100. </li>\n<li>The garden has at least one tree. </li>\n<li>All coordinates are distinct. </li>\n<li>Input points have <b>NO</b> order. No order required for output.</li>\n</ol>\n</p></p>\n</div>'


587 : erect-the-fence
583 : delete-operation-for-two-strings


b'<div class="question-description">\n<p><p>There are some trees, where each tree is represented by (x,y) coordinate in a two-dimensional garden. Your job is to fence the entire garden using the <b>minimum length</b> of rope as it is expensive. The garden is well fenced only if all the trees are enclosed. Your task is to help find the coordinates of trees which are exactly located on the fence perimeter.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]\r\n<b>Output:</b> [[1,1],[2,0],[4,2],[3,3],[2,4]]\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/erect_the_fence_1.png" width="30%">\r\n</img></pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [[1,2],[2,2],[4,2]]\r\n<b>Output:</b> [[1,2],[2,2],[4,2]]\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/erect_the_fence_2.png" width="30%"/>\r\nEven you only have trees in a line, you need to use rope to enclose them. \r\n</pre>\n</p>\n<p> Note: \r\n<ol>\n<li>All trees should be enclosed together. You cannot cut the rope to enclose trees that will separate them in more than one group.</li>\n<li>All input integers will range from 0 to 100. </li>\n<li>The garden has at least one tree. </li>\n<li>All coordinates are distinct. </li>\n<li>Input points have <b>NO</b> order. No order required for output.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two words <i>word1</i> and <i>word2</i>, find the minimum number of steps required to make <i>word1</i> and <i>word2</i> the same, where in each step you can delete one character in either string.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "sea", "eat"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> You need one step to make "sea" to "ea" and another step to make "eat" to "ea".\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of given words won\'t exceed 500.</li>\n<li>Characters in given words can only be lower-case letters.</li>\n</ol>\n</p></p>\n</div>'


583 : delete-operation-for-two-strings
582 : kill-process


b'<div class="question-description">\n<p><p>\r\nGiven two words <i>word1</i> and <i>word2</i>, find the minimum number of steps required to make <i>word1</i> and <i>word2</i> the same, where in each step you can delete one character in either string.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "sea", "eat"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> You need one step to make "sea" to "ea" and another step to make "eat" to "ea".\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of given words won\'t exceed 500.</li>\n<li>Characters in given words can only be lower-case letters.</li>\n</ol>\n</p></p>\n</div>'




No Description


582 : kill-process
581 : shortest-unsorted-continuous-subarray


No Description




b'<div class="question-description">\n<p><p>Given an integer array, you need to find one <b>continuous subarray</b> that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order, too. </p>\n<p>You need to find the <b>shortest</b> such subarray and output its length.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [2, 6, 4, 8, 10, 9, 15]\r\n<b>Output:</b> 5\r\n<b>Explanation:</b> You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Then length of the input array is in range [1, 10,000].</li>\n<li>The input array may contain duplicates, so ascending order here means <b>&lt;=</b>. </li>\n</ol>\n</p></p>\n</div>'


581 : shortest-unsorted-continuous-subarray
576 : out-of-boundary-paths


b'<div class="question-description">\n<p><p>Given an integer array, you need to find one <b>continuous subarray</b> that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order, too. </p>\n<p>You need to find the <b>shortest</b> such subarray and output its length.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [2, 6, 4, 8, 10, 9, 15]\r\n<b>Output:</b> 5\r\n<b>Explanation:</b> You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Then length of the input array is in range [1, 10,000].</li>\n<li>The input array may contain duplicates, so ascending order here means <b>&lt;=</b>. </li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>There is an <b>m</b> by <b>n</b> grid with a ball. Given the start coordinate <b>(i,j)</b> of the ball, you can move the ball to <b>adjacent</b> cell or cross the grid boundary in four directions (up, down, left, right). However, you can <b>at most</b> move <b>N</b> times. Find out the number of paths to move the ball out of grid boundary. The answer may be very large, return it after mod 10<sup>9</sup> + 7.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>m = 2, n = 2, N = 2, i = 0, j = 0\r\n<b>Output:</b> 6\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/out_of_boundary_paths_1.png" width="40%">\r\n</img></pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b>m = 1, n = 3, N = 3, i = 0, j = 1\r\n<b>Output:</b> 12\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/out_of_boundary_paths_2.png" width="37%"/>\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Once you move the ball out of boundary, you cannot move it back.</li>\n<li>The length and height of the grid is in range [1,50].</li>\n<li>N is in range [0,50].</li>\n</ol>\n</p></p>\n</div>'


576 : out-of-boundary-paths
575 : distribute-candies


b'<div class="question-description">\n<p>Given an integer array with <b>even</b> length, where different numbers in this array represent different <b>kinds</b> of candies. Each number means one candy of the corresponding kind. You need to distribute these candies <b>equally</b> in number to brother and sister. Return the maximum number of <b>kinds</b> of candies the sister could gain. \r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> candies = [1,1,2,2,3,3]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b>\r\nThere are three different kinds of candies (1, 2 and 3), and two candies for each kind.\r\nOptimal distribution: The sister has candies [1,2,3] and the brother has candies [1,2,3], too. \r\nThe sister has three different kinds of candies. \r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> candies = [1,1,2,3]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> For example, the sister has candies [2,3] and the brother has candies [1,1]. \r\nThe sister has two different kinds of candies, the brother has only one kind of candies. \r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>The length of the given array is in range [2, 10,000], and will be even.</li>\n<li>The number in given array is in range [-100,000, 100,000].</li>\n<ol>\n</ol></ol></p></p>\n</div>'




b'<div class="question-description">\n<p><p>There is an <b>m</b> by <b>n</b> grid with a ball. Given the start coordinate <b>(i,j)</b> of the ball, you can move the ball to <b>adjacent</b> cell or cross the grid boundary in four directions (up, down, left, right). However, you can <b>at most</b> move <b>N</b> times. Find out the number of paths to move the ball out of grid boundary. The answer may be very large, return it after mod 10<sup>9</sup> + 7.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>m = 2, n = 2, N = 2, i = 0, j = 0\r\n<b>Output:</b> 6\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/out_of_boundary_paths_1.png" width="40%">\r\n</img></pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b>m = 1, n = 3, N = 3, i = 0, j = 1\r\n<b>Output:</b> 12\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/out_of_boundary_paths_2.png" width="37%"/>\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Once you move the ball out of boundary, you cannot move it back.</li>\n<li>The length and height of the grid is in range [1,50].</li>\n<li>N is in range [0,50].</li>\n</ol>\n</p></p>\n</div>'


575 : distribute-candies
573 : squirrel-simulation


b'<div class="question-description">\n<p>Given an integer array with <b>even</b> length, where different numbers in this array represent different <b>kinds</b> of candies. Each number means one candy of the corresponding kind. You need to distribute these candies <b>equally</b> in number to brother and sister. Return the maximum number of <b>kinds</b> of candies the sister could gain. \r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> candies = [1,1,2,2,3,3]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b>\r\nThere are three different kinds of candies (1, 2 and 3), and two candies for each kind.\r\nOptimal distribution: The sister has candies [1,2,3] and the brother has candies [1,2,3], too. \r\nThe sister has three different kinds of candies. \r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> candies = [1,1,2,3]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> For example, the sister has candies [2,3] and the brother has candies [1,1]. \r\nThe sister has two different kinds of candies, the brother has only one kind of candies. \r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>The length of the given array is in range [2, 10,000], and will be even.</li>\n<li>The number in given array is in range [-100,000, 100,000].</li>\n<ol>\n</ol></ol></p></p>\n</div>'




No Description


573 : squirrel-simulation
572 : subtree-of-another-tree


b'<div class="question-description">\n<p><p>\r\nGiven two non-empty binary trees <b>s</b> and <b>t</b>, check whether tree <b>t</b> has exactly the same structure and node values with a subtree of <b>s</b>. A subtree of <b>s</b> is a tree consists of a node in <b>s</b> and all of this node\'s descendants. The tree <b>s</b> could also be considered as a subtree of itself.\r\n</p>\n<p><b>Example 1:</b><br/>\r\n\r\nGiven tree s:\r\n<pre>\r\n     3\r\n    / \\\r\n   4   5\r\n  / \\\r\n 1   2\r\n</pre>\r\nGiven tree t:\r\n<pre>\r\n   4 \r\n  / \\\r\n 1   2\r\n</pre>\r\nReturn <b>true</b>, because t has the same structure and node values with a subtree of s.\r\n</p>\n<p><b>Example 2:</b><br/>\r\n\r\nGiven tree s:\r\n<pre>\r\n     3\r\n    / \\\r\n   4   5\r\n  / \\\r\n 1   2\r\n    /\r\n   0\r\n</pre>\r\nGiven tree t:\r\n<pre>\r\n   4\r\n  / \\\r\n 1   2\r\n</pre>\r\nReturn <b>false</b>.\r\n</p></p>\n</div>'


572 : subtree-of-another-tree
568 : maximum-vacation-days


No Description




b'<div class="question-description">\n<p><p>\r\nGiven two non-empty binary trees <b>s</b> and <b>t</b>, check whether tree <b>t</b> has exactly the same structure and node values with a subtree of <b>s</b>. A subtree of <b>s</b> is a tree consists of a node in <b>s</b> and all of this node\'s descendants. The tree <b>s</b> could also be considered as a subtree of itself.\r\n</p>\n<p><b>Example 1:</b><br/>\r\n\r\nGiven tree s:\r\n<pre>\r\n     3\r\n    / \\\r\n   4   5\r\n  / \\\r\n 1   2\r\n</pre>\r\nGiven tree t:\r\n<pre>\r\n   4 \r\n  / \\\r\n 1   2\r\n</pre>\r\nReturn <b>true</b>, because t has the same structure and node values with a subtree of s.\r\n</p>\n<p><b>Example 2:</b><br/>\r\n\r\nGiven tree s:\r\n<pre>\r\n     3\r\n    / \\\r\n   4   5\r\n  / \\\r\n 1   2\r\n    /\r\n   0\r\n</pre>\r\nGiven tree t:\r\n<pre>\r\n   4\r\n  / \\\r\n 1   2\r\n</pre>\r\nReturn <b>false</b>.\r\n</p></p>\n</div>'




No Description


568 : maximum-vacation-days
567 : permutation-in-string


No Description




b'<div class="question-description">\n<p>Given two strings <b>s1</b> and <b>s2</b>, write a function to return true if <b>s2</b> contains the permutation of <b>s1</b>. In other words, one of the first string\'s permutations is the <b>substring</b> of the second string.\r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>s1 = "ab" s2 = "eidbaooo"\r\n<b>Output:</b>True\r\n<b>Explanation:</b> s2 contains one permutation of s1 ("ba").\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b>s1= "ab" s2 = "eidboaoo"\r\n<b>Output:</b> False\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input strings only contain lower case letters.</li>\n<li>The length of both given strings is in range [1, 10,000].</li>\n</ol>\n</p></p>\n</div>'


567 : permutation-in-string
566 : reshape-the-matrix


b'<div class="question-description">\n<p>Given two strings <b>s1</b> and <b>s2</b>, write a function to return true if <b>s2</b> contains the permutation of <b>s1</b>. In other words, one of the first string\'s permutations is the <b>substring</b> of the second string.\r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>s1 = "ab" s2 = "eidbaooo"\r\n<b>Output:</b>True\r\n<b>Explanation:</b> s2 contains one permutation of s1 ("ba").\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b>s1= "ab" s2 = "eidboaoo"\r\n<b>Output:</b> False\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input strings only contain lower case letters.</li>\n<li>The length of both given strings is in range [1, 10,000].</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>In MATLAB, there is a very useful function called \'reshape\', which can reshape a matrix into a new one with different size but keep its original data.\r\n</p>\n<p>\r\nYou\'re given a matrix represented by a two-dimensional array, and two <b>positive</b> integers <b>r</b> and <b>c</b> representing the <b>row</b> number and <b>column</b> number of the wanted reshaped matrix, respectively.</p>\n<p>The reshaped matrix need to be filled with all the elements of the original matrix in the same <b>row-traversing</b> order as they were.\r\n</p>\n<p>\r\nIf the \'reshape\' operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\nnums = \r\n[[1,2],\r\n [3,4]]\r\nr = 1, c = 4\r\n<b>Output:</b> \r\n[[1,2,3,4]]\r\n<b>Explanation:</b><br/>The <b>row-traversing</b> of nums is [1,2,3,4]. The new reshaped matrix is a 1 * 4 matrix, fill it row by row by using the previous list.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br>\n<pre>\r\n<b>Input:</b> \r\nnums = \r\n[[1,2],\r\n [3,4]]\r\nr = 2, c = 4\r\n<b>Output:</b> \r\n[[1,2],\r\n [3,4]]\r\n<b>Explanation:</b><br/>There is no way to reshape a 2 * 2 matrix to a 2 * 4 matrix. So output the original matrix.\r\n</pre>\n</br></p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The height and width of the given matrix is in range [1, 100].</li>\n<li>The given r and c are all positive.</li>\n</ol>\n</p></p>\n</div>'


566 : reshape-the-matrix
565 : array-nesting


b'<div class="question-description">\n<p><p>In MATLAB, there is a very useful function called \'reshape\', which can reshape a matrix into a new one with different size but keep its original data.\r\n</p>\n<p>\r\nYou\'re given a matrix represented by a two-dimensional array, and two <b>positive</b> integers <b>r</b> and <b>c</b> representing the <b>row</b> number and <b>column</b> number of the wanted reshaped matrix, respectively.</p>\n<p>The reshaped matrix need to be filled with all the elements of the original matrix in the same <b>row-traversing</b> order as they were.\r\n</p>\n<p>\r\nIf the \'reshape\' operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\nnums = \r\n[[1,2],\r\n [3,4]]\r\nr = 1, c = 4\r\n<b>Output:</b> \r\n[[1,2,3,4]]\r\n<b>Explanation:</b><br/>The <b>row-traversing</b> of nums is [1,2,3,4]. The new reshaped matrix is a 1 * 4 matrix, fill it row by row by using the previous list.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br>\n<pre>\r\n<b>Input:</b> \r\nnums = \r\n[[1,2],\r\n [3,4]]\r\nr = 2, c = 4\r\n<b>Output:</b> \r\n[[1,2],\r\n [3,4]]\r\n<b>Explanation:</b><br/>There is no way to reshape a 2 * 2 matrix to a 2 * 4 matrix. So output the original matrix.\r\n</pre>\n</br></p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The height and width of the given matrix is in range [1, 100].</li>\n<li>The given r and c are all positive.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>A zero-indexed array A consisting of N different integers is given. The array contains all integers in the range [0, N - 1]. </p>\n<p>Sets S[K] for 0 &lt;= K &lt; N are defined as follows:</p>\n<p>S[K] = { A[K], A[A[K]], A[A[A[K]]], ... }.</p>\n<p>Sets S[K] are finite for each K and should NOT contain duplicates.</p>\n<p>\r\nWrite a function that given an array A consisting of N integers, return the size of the largest set S[K] for this array.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> A = [5,4,0,3,1,6,2]\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> \r\nA[0] = 5, A[1] = 4, A[2] = 0, A[3] = 3, A[4] = 1, A[5] = 6, A[6] = 2.</pre></p></p></div>'


565 : array-nesting
564 : find-the-closest-palindrome


b'<div class="question-description">\n<p><p>Given an integer n, find the closest integer (not including itself), which is a palindrome. </p>\n<p>The \'closest\' is defined as absolute difference minimized between two integers.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "123"\r\n<b>Output:</b> "121"\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input <b>n</b> is a positive integer represented by string, whose length will not exceed 18.</li>\n<li>If there is a tie, return the smaller one as answer.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>A zero-indexed array A consisting of N different integers is given. The array contains all integers in the range [0, N - 1]. </p>\n<p>Sets S[K] for 0 &lt;= K &lt; N are defined as follows:</p>\n<p>S[K] = { A[K], A[A[K]], A[A[A[K]]], ... }.</p>\n<p>Sets S[K] are finite for each K and should NOT contain duplicates.</p>\n<p>\r\nWrite a function that given an array A consisting of N integers, return the size of the largest set S[K] for this array.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> A = [5,4,0,3,1,6,2]\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> \r\nA[0] = 5, A[1] = 4, A[2] = 0, A[3] = 3, A[4] = 1, A[5] = 6, A[6] = 2.</pre></p></p></div>'


564 : find-the-closest-palindrome
563 : binary-tree-tilt


b'<div class="question-description">\n<p><p>Given a binary tree, return the tilt of the <b>whole tree</b>.</p>\n<p>The tilt of a <b>tree node</b> is defined as the <b>absolute difference</b> between the sum of all left subtree node values and the sum of all right subtree node values. Null node has tilt 0.</p>\n<p>The tilt of the <b>whole tree</b> is defined as the sum of all nodes\' tilt.</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n         1\r\n       /   \\\r\n      2     3\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> \r\nTilt of node 2 : 0\r\nTilt of node 3 : 0\r\nTilt of node 1 : |2-3| = 1\r\nTilt of binary tree : 0 + 0 + 1 = 1\r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>The sum of node values in any subtree won\'t exceed the range of 32-bit integer. </li>\n<li>All the tilt values won\'t exceed the range of 32-bit integer.</li>\n</ol>\n</p></p>\n</div>'


563 : binary-tree-tilt
562 : longest-line-of-consecutive-one-in-matrix


b'<div class="question-description">\n<p><p>Given an integer n, find the closest integer (not including itself), which is a palindrome. </p>\n<p>The \'closest\' is defined as absolute difference minimized between two integers.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "123"\r\n<b>Output:</b> "121"\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input <b>n</b> is a positive integer represented by string, whose length will not exceed 18.</li>\n<li>If there is a tie, return the smaller one as answer.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, return the tilt of the <b>whole tree</b>.</p>\n<p>The tilt of a <b>tree node</b> is defined as the <b>absolute difference</b> between the sum of all left subtree node values and the sum of all right subtree node values. Null node has tilt 0.</p>\n<p>The tilt of the <b>whole tree</b> is defined as the sum of all nodes\' tilt.</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n         1\r\n       /   \\\r\n      2     3\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> \r\nTilt of node 2 : 0\r\nTilt of node 3 : 0\r\nTilt of node 1 : |2-3| = 1\r\nTilt of binary tree : 0 + 0 + 1 = 1\r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>The sum of node values in any subtree won\'t exceed the range of 32-bit integer. </li>\n<li>All the tilt values won\'t exceed the range of 32-bit integer.</li>\n</ol>\n</p></p>\n</div>'




No Description


562 : longest-line-of-consecutive-one-in-matrix
561 : array-partition-i


b'<div class="question-description">\n<p><p>\r\nGiven an array of <b>2n</b> integers, your task is to group these integers into <b>n</b> pairs of integer, say (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>) which makes sum of min(a<sub>i</sub>, b<sub>i</sub>) for all i from 1 to n as large as possible.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,4,3,2]\r\n\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li><b>n</b> is a positive integer, which is in the range of [1, 10000].</li>\n<li>All the integers in the array will be in the range of [-10000, 10000].</li>\n</ol>\n</p></p>\n</div>'


561 : array-partition-i
560 : subarray-sum-equals-k


No Description




b'<div class="question-description">\n<p><p>\r\nGiven an array of <b>2n</b> integers, your task is to group these integers into <b>n</b> pairs of integer, say (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>) which makes sum of min(a<sub>i</sub>, b<sub>i</sub>) for all i from 1 to n as large as possible.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,4,3,2]\r\n\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li><b>n</b> is a positive integer, which is in the range of [1, 10000].</li>\n<li>All the integers in the array will be in the range of [-10000, 10000].</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array of integers and an integer <b>k</b>, you need to find the total number of continuous subarrays whose sum equals to <b>k</b>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>nums = [1,1,1], k = 2\r\n<b>Output:</b> 2\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the array is in range [1, 20,000].</li>\n<li>The range of numbers in the array is [-1000, 1000] and the range of the integer <b>k</b> is [-1e7, 1e7].</li>\n</ol>\n</p>\n</p>\n</div>'


560 : subarray-sum-equals-k
557 : reverse-words-in-a-string-iii


b'<div class="question-description">\n<p><p>Given an array of integers and an integer <b>k</b>, you need to find the total number of continuous subarrays whose sum equals to <b>k</b>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>nums = [1,1,1], k = 2\r\n<b>Output:</b> 2\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the array is in range [1, 20,000].</li>\n<li>The range of numbers in the array is [-1000, 1000] and the range of the integer <b>k</b> is [-1e7, 1e7].</li>\n</ol>\n</p>\n</p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "Let\'s take LeetCode contest"\r\n<b>Output:</b> "s\'teL ekat edoCteeL tsetnoc"\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nIn the string, each word is separated by single space and there will not be any extra space in the string.\r\n</p></p>\n</div>'


557 : reverse-words-in-a-string-iii
556 : next-greater-element-iii


b'<div class="question-description">\n<p><p>Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "Let\'s take LeetCode contest"\r\n<b>Output:</b> "s\'teL ekat edoCteeL tsetnoc"\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nIn the string, each word is separated by single space and there will not be any extra space in the string.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a positive <b>32-bit</b> integer <b>n</b>, you need to find the smallest <b>32-bit</b> integer which has exactly the same digits existing in the integer <b>n</b> and is greater in value than n. If no such positive <b>32-bit</b> integer exists, you need to return -1.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 12\r\n<b>Output:</b> 21\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> 21\r\n<b>Output:</b> -1\r\n</pre>\n</p></p>\n</div>'


556 : next-greater-element-iii
555 : split-concatenated-strings


b'<div class="question-description">\n<p><p>\r\nGiven a positive <b>32-bit</b> integer <b>n</b>, you need to find the smallest <b>32-bit</b> integer which has exactly the same digits existing in the integer <b>n</b> and is greater in value than n. If no such positive <b>32-bit</b> integer exists, you need to return -1.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 12\r\n<b>Output:</b> 21\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> 21\r\n<b>Output:</b> -1\r\n</pre>\n</p></p>\n</div>'




No Description


555 : split-concatenated-strings
554 : brick-wall


No Description




b'<div class="question-description">\n<p><p>There is a brick wall in front of you. The wall is rectangular and has several rows of bricks. The bricks have the same height but different width. You want to draw a vertical line from the <b>top</b> to the <b>bottom</b> and cross the <b>least</b> bricks. </p>\n<p>\r\nThe brick wall is represented by a list of rows. Each row is a list of integers representing the width of each brick in this row from left to right. \r\n</p>\n<p>If your line go through the edge of a brick, then the brick is not considered as crossed. You need to find out how to draw the line to cross the least bricks and return the number of crossed bricks. </p>\n<p><b>You cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks. </b></p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n[[1,2,2,1],\r\n [3,1,2],\r\n [1,3,2],\r\n [2,4],\r\n [3,1,2],\r\n [1,3,1,1]]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> \r\n<img src="https://leetcode.com/static/images/problemset/brick_wall.png" width="30%">\r\n</img></pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The width sum of bricks in different rows are the same and won\'t exceed INT_MAX.</li>\n<li>The number of bricks in each row is in range [1,10,000]. The height of wall is in range [1,10,000]. Total number of bricks of the wall won\'t exceed 20,000. </li>\n</ol>\n</p></p>\n</div>'


554 : brick-wall
553 : optimal-division


b'<div class="question-description">\n<p><p>There is a brick wall in front of you. The wall is rectangular and has several rows of bricks. The bricks have the same height but different width. You want to draw a vertical line from the <b>top</b> to the <b>bottom</b> and cross the <b>least</b> bricks. </p>\n<p>\r\nThe brick wall is represented by a list of rows. Each row is a list of integers representing the width of each brick in this row from left to right. \r\n</p>\n<p>If your line go through the edge of a brick, then the brick is not considered as crossed. You need to find out how to draw the line to cross the least bricks and return the number of crossed bricks. </p>\n<p><b>You cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks. </b></p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n[[1,2,2,1],\r\n [3,1,2],\r\n [1,3,2],\r\n [2,4],\r\n [3,1,2],\r\n [1,3,1,1]]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> \r\n<img src="https://leetcode.com/static/images/problemset/brick_wall.png" width="30%">\r\n</img></pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The width sum of bricks in different rows are the same and won\'t exceed INT_MAX.</li>\n<li>The number of bricks in each row is in range [1,10,000]. The height of wall is in range [1,10,000]. Total number of bricks of the wall won\'t exceed 20,000. </li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a list of <b>positive integers</b>, the adjacent integers will perform the float division. For example, [2,3,4] -&gt; 2 / 3 / 4.</p>\n<p>However, you can add any number of parenthesis at any position to change the priority of operations. You should find out how to add parenthesis to get the <b>maximum</b> result, and return the corresponding expression in string format. <b>Your expression should NOT contain redundant parenthesis.</b></p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> [1000,100,10,2]\r\n<b>Output:</b> "1000/(100/10/2)"\r\n<b>Explanation:</b>\r\n1000/(100/10/2) = 1000/((100/10)/2) = 200\r\nHowever, the bold parenthesis in "1000/(<b>(</b>100/10<b>)</b>/2)" are redundant, <br/>since they don\'t influence the operation priority. So you should return "1000/(100/10/2)". \r\n\r\nOther cases:\r\n1000/(100/10)/2 = 50\r\n1000/(100/(10/2)) = 50\r\n1000/100/10/2 = 0.5\r\n1000/100/(10/2) = 2\r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>The length of the input array is [1, 10].</li>\n<li>Elements in the given array will be in range [2, 1000].</li>\n<li>There is only one optimal division for each test case.</li>\n</ol>\n</p></p>\n</div>'


553 : optimal-division
552 : student-attendance-record-ii


b'<div class="question-description">\n<p><p>Given a list of <b>positive integers</b>, the adjacent integers will perform the float division. For example, [2,3,4] -&gt; 2 / 3 / 4.</p>\n<p>However, you can add any number of parenthesis at any position to change the priority of operations. You should find out how to add parenthesis to get the <b>maximum</b> result, and return the corresponding expression in string format. <b>Your expression should NOT contain redundant parenthesis.</b></p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> [1000,100,10,2]\r\n<b>Output:</b> "1000/(100/10/2)"\r\n<b>Explanation:</b>\r\n1000/(100/10/2) = 1000/((100/10)/2) = 200\r\nHowever, the bold parenthesis in "1000/(<b>(</b>100/10<b>)</b>/2)" are redundant, <br/>since they don\'t influence the operation priority. So you should return "1000/(100/10/2)". \r\n\r\nOther cases:\r\n1000/(100/10)/2 = 50\r\n1000/(100/(10/2)) = 50\r\n1000/100/10/2 = 0.5\r\n1000/100/(10/2) = 2\r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>The length of the input array is [1, 10].</li>\n<li>Elements in the given array will be in range [2, 1000].</li>\n<li>There is only one optimal division for each test case.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a positive integer <b>n</b>, return the number of all possible attendance records with length n, which will be regarded as rewardable. The answer may be very large, return it after mod 10<sup>9</sup> + 7.</p>\n<p>A student attendance record is a string that only contains the following three characters:</p>\n<p>\n<ol>\n<li><b>\'A\'</b> : Absent. </li>\n<li><b>\'L\'</b> : Late.</li>\n<li> <b>\'P\'</b> : Present. </li>\n</ol>\n</p>\n<p>\r\nA record is regarded as rewardable if it doesn\'t contain <b>more than one \'A\' (absent)</b> or <b>more than two continuous \'L\' (late)</b>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> n = 2\r\n<b>Output:</b> 8 \r\n<b>Explanation:</b>\r\nThere are 8 records with length 2 will be regarded as rewardable:\r\n"PP" , "AP", "PA", "LP", "PL", "AL", "LA", "LL"\r\nOnly "AA" won\'t be regarded as rewardable owing to more than one absent times. \r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe value of <b>n</b> won\'t exceed 100,000.\r\n</p>\n</p>\n</div>'


552 : student-attendance-record-ii
551 : student-attendance-record-i


b'<div class="question-description">\n<p><p>Given a positive integer <b>n</b>, return the number of all possible attendance records with length n, which will be regarded as rewardable. The answer may be very large, return it after mod 10<sup>9</sup> + 7.</p>\n<p>A student attendance record is a string that only contains the following three characters:</p>\n<p>\n<ol>\n<li><b>\'A\'</b> : Absent. </li>\n<li><b>\'L\'</b> : Late.</li>\n<li> <b>\'P\'</b> : Present. </li>\n</ol>\n</p>\n<p>\r\nA record is regarded as rewardable if it doesn\'t contain <b>more than one \'A\' (absent)</b> or <b>more than two continuous \'L\' (late)</b>.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> n = 2\r\n<b>Output:</b> 8 \r\n<b>Explanation:</b>\r\nThere are 8 records with length 2 will be regarded as rewardable:\r\n"PP" , "AP", "PA", "LP", "PL", "AL", "LA", "LL"\r\nOnly "AA" won\'t be regarded as rewardable owing to more than one absent times. \r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe value of <b>n</b> won\'t exceed 100,000.\r\n</p>\n</p>\n</div>'




b'<div class="question-description">\n<p>You are given a string representing an attendance record for a student. The record only contains the following three characters:\r\n\r\n<p>\n<ol>\n<li><b>\'A\'</b> : Absent. </li>\n<li><b>\'L\'</b> : Late.</li>\n<li> <b>\'P\'</b> : Present. </li>\n</ol>\n</p>\n<p>\r\nA student could be rewarded if his attendance record doesn\'t contain <b>more than one \'A\' (absent)</b> or <b>more than two continuous \'L\' (late)</b>.    </p>\n<p>You need to return whether the student could be rewarded according to his attendance record.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "PPALLP"\r\n<b>Output:</b> True\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "PPALLL"\r\n<b>Output:</b> False\r\n</pre>\n</p>\n</p>\n</div>'


551 : student-attendance-record-i
549 : binary-tree-longest-consecutive-sequence-ii


b'<div class="question-description">\n<p>You are given a string representing an attendance record for a student. The record only contains the following three characters:\r\n\r\n<p>\n<ol>\n<li><b>\'A\'</b> : Absent. </li>\n<li><b>\'L\'</b> : Late.</li>\n<li> <b>\'P\'</b> : Present. </li>\n</ol>\n</p>\n<p>\r\nA student could be rewarded if his attendance record doesn\'t contain <b>more than one \'A\' (absent)</b> or <b>more than two continuous \'L\' (late)</b>.    </p>\n<p>You need to return whether the student could be rewarded according to his attendance record.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "PPALLP"\r\n<b>Output:</b> True\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "PPALLL"\r\n<b>Output:</b> False\r\n</pre>\n</p>\n</p>\n</div>'




No Description


549 : binary-tree-longest-consecutive-sequence-ii
548 : split-array-with-equal-sum


No Description




No Description


548 : split-array-with-equal-sum
547 : friend-circles


No Description




b'<div class="question-description">\n<p><p>\r\nThere are <b>N</b> students in a class. Some of them are friends, while some are not. Their friendship is transitive in nature. For example, if A is a <b>direct</b> friend of B, and B is a <b>direct</b> friend of C, then A is an <b>indirect</b> friend of C. And we defined a friend circle is a group of students who are direct or indirect friends.\r\n</p>\n<p>\r\nGiven a <b>N*N</b> matrix <b>M</b> representing the friend relationship between students in the class. If M[i][j] = 1, then the i<sub>th</sub> and j<sub>th</sub> students are <b>direct</b> friends with each other, otherwise not. And you have to output the total number of friend circles among all the students.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n[[1,1,0],\r\n [1,1,0],\r\n [0,0,1]]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b>The 0<sub>th</sub> and 1<sub>st</sub> students are direct friends, so they are in a friend circle. <br/>The 2<sub>nd</sub> student himself is in a friend circle. So return 2.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n[[1,1,0],\r\n [1,1,1],\r\n [0,1,1]]\r\n<b>Output:</b> 1\r\n<b>Explanation:</b>The 0<sub>th</sub> and 1<sub>st</sub> students are direct friends, the 1<sub>st</sub> and 2<sub>nd</sub> students are direct friends, <br/>so the 0<sub>th</sub> and 2<sub>nd</sub> students are indirect friends. All of them are in the same friend circle, so return 1.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>N is in range [1,200].</li>\n<li>M[i][i] = 1 for all students.</li>\n<li>If M[i][j] = 1, then M[j][i] = 1.</li>\n</ol>\n</p></p>\n</div>'


547 : friend-circles
546 : remove-boxes


b'<div class="question-description">\n<p><p>\r\nThere are <b>N</b> students in a class. Some of them are friends, while some are not. Their friendship is transitive in nature. For example, if A is a <b>direct</b> friend of B, and B is a <b>direct</b> friend of C, then A is an <b>indirect</b> friend of C. And we defined a friend circle is a group of students who are direct or indirect friends.\r\n</p>\n<p>\r\nGiven a <b>N*N</b> matrix <b>M</b> representing the friend relationship between students in the class. If M[i][j] = 1, then the i<sub>th</sub> and j<sub>th</sub> students are <b>direct</b> friends with each other, otherwise not. And you have to output the total number of friend circles among all the students.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n[[1,1,0],\r\n [1,1,0],\r\n [0,0,1]]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b>The 0<sub>th</sub> and 1<sub>st</sub> students are direct friends, so they are in a friend circle. <br/>The 2<sub>nd</sub> student himself is in a friend circle. So return 2.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n[[1,1,0],\r\n [1,1,1],\r\n [0,1,1]]\r\n<b>Output:</b> 1\r\n<b>Explanation:</b>The 0<sub>th</sub> and 1<sub>st</sub> students are direct friends, the 1<sub>st</sub> and 2<sub>nd</sub> students are direct friends, <br/>so the 0<sub>th</sub> and 2<sub>nd</sub> students are indirect friends. All of them are in the same friend circle, so return 1.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>N is in range [1,200].</li>\n<li>M[i][i] = 1 for all students.</li>\n<li>If M[i][j] = 1, then M[j][i] = 1.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given several boxes with different colors represented by different positive numbers. <br/>\r\nYou may experience several rounds to remove boxes until there is no box left. Each time you can choose some continuous boxes with the same color (composed of k boxes, k &gt;= 1), remove them and get <code>k*k</code> points.<br/>\r\nFind the maximum points you can get.\r\n</p>\n<p><b>Example 1:</b><br/>\r\nInput: \r\n<pre>\r\n[1, 3, 2, 2, 2, 3, 4, 3, 1]\r\n</pre>\r\nOutput:\r\n<pre>\r\n23\r\n</pre>\r\nExplanation: \r\n<pre>\r\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \r\n----&gt; [1, 3, 3, 4, 3, 1] (3*3=9 points) \r\n----&gt; [1, 3, 3, 3, 1] (1*1=1 points) \r\n----&gt; [1, 1] (3*3=9 points) \r\n----&gt; [] (2*2=4 points)\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe number of boxes <code>n</code> would not exceed 100.\r\n</p>\n</p>\n</div>'


546 : remove-boxes
545 : boundary-of-binary-tree


b'<div class="question-description">\n<p><p>Given several boxes with different colors represented by different positive numbers. <br/>\r\nYou may experience several rounds to remove boxes until there is no box left. Each time you can choose some continuous boxes with the same color (composed of k boxes, k &gt;= 1), remove them and get <code>k*k</code> points.<br/>\r\nFind the maximum points you can get.\r\n</p>\n<p><b>Example 1:</b><br/>\r\nInput: \r\n<pre>\r\n[1, 3, 2, 2, 2, 3, 4, 3, 1]\r\n</pre>\r\nOutput:\r\n<pre>\r\n23\r\n</pre>\r\nExplanation: \r\n<pre>\r\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \r\n----&gt; [1, 3, 3, 4, 3, 1] (3*3=9 points) \r\n----&gt; [1, 3, 3, 3, 1] (1*1=1 points) \r\n----&gt; [1, 1] (3*3=9 points) \r\n----&gt; [] (2*2=4 points)\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe number of boxes <code>n</code> would not exceed 100.\r\n</p>\n</p>\n</div>'




No Description


545 : boundary-of-binary-tree
544 : output-contest-matches


No Description




No Description


544 : output-contest-matches
543 : diameter-of-binary-tree


No Description




b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the <b>longest</b> path between any two nodes in a tree. This path may or may not pass through the root.\r\n</p>\n<p>\n<b>Example:</b><br/>\r\nGiven a binary tree <br/>\n<pre>\r\n          1\r\n         / \\\r\n        2   3\r\n       / \\     \r\n      4   5    \r\n</pre>\n</p>\n<p>\r\nReturn <b>3</b>, which is the length of the path [4,2,1,3] or [5,2,1,3].\r\n</p>\n<p><b>Note:</b>\r\nThe length of path between two nodes is represented by the number of edges between them.\r\n</p></p>\n</div>'


543 : diameter-of-binary-tree
542 : 01-matrix


b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the <b>longest</b> path between any two nodes in a tree. This path may or may not pass through the root.\r\n</p>\n<p>\n<b>Example:</b><br/>\r\nGiven a binary tree <br/>\n<pre>\r\n          1\r\n         / \\\r\n        2   3\r\n       / \\     \r\n      4   5    \r\n</pre>\n</p>\n<p>\r\nReturn <b>3</b>, which is the length of the path [4,2,1,3] or [5,2,1,3].\r\n</p>\n<p><b>Note:</b>\r\nThe length of path between two nodes is represented by the number of edges between them.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.\r\n</p>\r\nThe distance between two adjacent cells is 1.\r\n\r\n<p><b>Example 1: </b><br/>\r\nInput:\r\n<pre>\r\n0 0 0\r\n0 1 0\r\n0 0 0\r\n</pre>\r\nOutput:\r\n<pre>\r\n0 0 0\r\n0 1 0\r\n0 0 0\r\n</pre>\n</p>\n<p><b>Example 2: </b><br/>\r\nInput:\r\n<pre>\r\n0 0 0\r\n0 1 0\r\n1 1 1\r\n</pre>\r\nOutput:\r\n<pre>\r\n0 0 0\r\n0 1 0\r\n1 2 1\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The number of elements of the given matrix will not exceed 10,000.</li>\n<li>There are at least one 0 in the given matrix.</li>\n<li>The cells are adjacent in only four directions: up, down, left and right.</li>\n</ol>\n</p>\n</p>\n</div>'


542 : 01-matrix
541 : reverse-string-ii


b'<div class="question-description">\n<p><p>\r\nGiven a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.\r\n</p>\r\nThe distance between two adjacent cells is 1.\r\n\r\n<p><b>Example 1: </b><br/>\r\nInput:\r\n<pre>\r\n0 0 0\r\n0 1 0\r\n0 0 0\r\n</pre>\r\nOutput:\r\n<pre>\r\n0 0 0\r\n0 1 0\r\n0 0 0\r\n</pre>\n</p>\n<p><b>Example 2: </b><br/>\r\nInput:\r\n<pre>\r\n0 0 0\r\n0 1 0\r\n1 1 1\r\n</pre>\r\nOutput:\r\n<pre>\r\n0 0 0\r\n0 1 0\r\n1 2 1\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The number of elements of the given matrix will not exceed 10,000.</li>\n<li>There are at least one 0 in the given matrix.</li>\n<li>The cells are adjacent in only four directions: up, down, left and right.</li>\n</ol>\n</p>\n</p>\n</div>'




b'<div class="question-description">\n<p></p>\r\nGiven a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.\r\n</div>'


541 : reverse-string-ii
540 : single-element-in-a-sorted-array


b'<div class="question-description">\n<p></p>\r\nGiven a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.\r\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a sorted array consisting of only integers where every element appears twice except for one element which appears once. Find this single element that appears only once. \r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,1,2,3,3,4,4,8,8]\r\n<b>Output:</b> 2\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [3,3,7,7,10,11,11]\r\n<b>Output:</b> 10\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nYour solution should run in O(log n) time and O(1) space.\r\n</p>\n</p>\n</div>'


540 : single-element-in-a-sorted-array539 : minimum-time-difference



b'<div class="question-description">\n<p><p>\r\nGiven a sorted array consisting of only integers where every element appears twice except for one element which appears once. Find this single element that appears only once. \r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,1,2,3,3,4,4,8,8]\r\n<b>Output:</b> 2\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [3,3,7,7,10,11,11]\r\n<b>Output:</b> 10\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nYour solution should run in O(log n) time and O(1) space.\r\n</p>\n</p>\n</div>'




b'<div class="question-description">\n<p>Given a list of 24-hour clock time points in "Hour:Minutes" format, find the minimum <b>minutes</b> difference between any two time points in the list. \r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> ["23:59","00:00"]\r\n<b>Output:</b> 1\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The number of time points in the given list is at least 2 and won\'t exceed 20000.</li>\n<li>The input time is legal and ranges from 00:00 to 23:59.</li>\n</ol>\n</p></p>\n</div>'


539 : minimum-time-difference
538 : convert-bst-to-greater-tree


b'<div class="question-description">\n<p>Given a list of 24-hour clock time points in "Hour:Minutes" format, find the minimum <b>minutes</b> difference between any two time points in the list. \r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> ["23:59","00:00"]\r\n<b>Output:</b> 1\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The number of time points in the given list is at least 2 and won\'t exceed 20000.</li>\n<li>The input time is legal and ranges from 00:00 to 23:59.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST.</p>\n<p>\n<b>Example:</b>\n<pre>\r\n<b>Input:</b> The root of a Binary Search Tree like this:\r\n              5\r\n            /   \\\r\n           2     13\r\n\r\n<b>Output:</b> The root of a Greater Tree like this:\r\n             18\r\n            /   \\\r\n          20     13\r\n</pre>\n</p></p>\n</div>'


538 : convert-bst-to-greater-tree
537 : complex-number-multiplication


b'<div class="question-description">\n<p><p>Given a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST.</p>\n<p>\n<b>Example:</b>\n<pre>\r\n<b>Input:</b> The root of a Binary Search Tree like this:\r\n              5\r\n            /   \\\r\n           2     13\r\n\r\n<b>Output:</b> The root of a Greater Tree like this:\r\n             18\r\n            /   \\\r\n          20     13\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two strings representing two <a href="https://en.wikipedia.org/wiki/Complex_number">complex numbers</a>.</p>\n<p>\r\nYou need to return a string representing their multiplication. Note i<sup>2</sup> = -1 according to the definition.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "1+1i", "1+1i"\r\n<b>Output:</b> "0+2i"\r\n<b>Explanation:</b> (1 + i) * (1 + i) = 1 + i<sup>2</sup> + 2 * i = 2i, and you need convert it to the form of 0+2i.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "1+-1i", "1+-1i"\r\n<b>Output:</b> "0+-2i"\r\n<b>Explanation:</b> (1 - i) * (1 - i) = 1 + i<sup>2</sup> - 2 * i = -2i, and you need convert it to the form of 0+-2i.\r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>The input strings will not have extra blank.</li>\n<li>The input strings will be given in the form of <b>a+bi</b>, where the integer <b>a</b> and <b>b</b> will both belong to the range of [-100, 100]. And <b>the output should be also in this form</b>.</li>\n</ol>\n</p></p>\n</div>'


537 : complex-number-multiplication
536 : construct-binary-tree-from-string


b'<div class="question-description">\n<p><p>\r\nGiven two strings representing two <a href="https://en.wikipedia.org/wiki/Complex_number">complex numbers</a>.</p>\n<p>\r\nYou need to return a string representing their multiplication. Note i<sup>2</sup> = -1 according to the definition.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "1+1i", "1+1i"\r\n<b>Output:</b> "0+2i"\r\n<b>Explanation:</b> (1 + i) * (1 + i) = 1 + i<sup>2</sup> + 2 * i = 2i, and you need convert it to the form of 0+2i.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "1+-1i", "1+-1i"\r\n<b>Output:</b> "0+-2i"\r\n<b>Explanation:</b> (1 - i) * (1 - i) = 1 + i<sup>2</sup> - 2 * i = -2i, and you need convert it to the form of 0+-2i.\r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>The input strings will not have extra blank.</li>\n<li>The input strings will be given in the form of <b>a+bi</b>, where the integer <b>a</b> and <b>b</b> will both belong to the range of [-100, 100]. And <b>the output should be also in this form</b>.</li>\n</ol>\n</p></p>\n</div>'




No Description


536 : construct-binary-tree-from-string
535 : encode-and-decode-tinyurl


No Description




b'<div class="question-description">\n<p><blockquote>Note: This is a companion problem to the <a href="https://leetcode.com/problemset/system-design/">System Design</a> problem: <a href="https://leetcode.com/problems/design-tinyurl/">Design TinyURL</a>.</blockquote>\n<p>TinyURL is a URL shortening service where you enter a URL such as <code>https://leetcode.com/problems/design-tinyurl</code> and it returns a short URL such as <code>http://tinyurl.com/4e9iAk</code>.</p>\n<p>Design the <code>encode</code> and <code>decode</code> methods for the TinyURL service. There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.</p></p>\n</div>'


535 : encode-and-decode-tinyurl
533 : lonely-pixel-ii


b'<div class="question-description">\n<p><blockquote>Note: This is a companion problem to the <a href="https://leetcode.com/problemset/system-design/">System Design</a> problem: <a href="https://leetcode.com/problems/design-tinyurl/">Design TinyURL</a>.</blockquote>\n<p>TinyURL is a URL shortening service where you enter a URL such as <code>https://leetcode.com/problems/design-tinyurl</code> and it returns a short URL such as <code>http://tinyurl.com/4e9iAk</code>.</p>\n<p>Design the <code>encode</code> and <code>decode</code> methods for the TinyURL service. There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.</p></p>\n</div>'




No Description


533 : lonely-pixel-ii
532 : k-diff-pairs-in-an-array


No Description




b'<div class="question-description">\n<p><p>\r\nGiven an array of integers and an integer <b>k</b>, you need to find the number of <b>unique</b> k-diff pairs in the array. Here a <b>k-diff</b> pair is defined as an integer pair (i, j), where <b>i</b> and <b>j</b> are both numbers in the array and their <a href="https://en.wikipedia.org/wiki/Absolute_difference">absolute difference</a> is <b>k</b>.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [3, 1, 4, 1, 5], k = 2\r\n<b>Output:</b> 2\r\n<b>Explanation: </b>There are two 2-diff pairs in the array, (1, 3) and (3, 5).</pre></p></p></div>'


532 : k-diff-pairs-in-an-array
531 : lonely-pixel-i


b'<div class="question-description">\n<p><p>\r\nGiven an array of integers and an integer <b>k</b>, you need to find the number of <b>unique</b> k-diff pairs in the array. Here a <b>k-diff</b> pair is defined as an integer pair (i, j), where <b>i</b> and <b>j</b> are both numbers in the array and their <a href="https://en.wikipedia.org/wiki/Absolute_difference">absolute difference</a> is <b>k</b>.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [3, 1, 4, 1, 5], k = 2\r\n<b>Output:</b> 2\r\n<b>Explanation: </b>There are two 2-diff pairs in the array, (1, 3) and (3, 5).</pre></p></p></div>'




No Description


531 : lonely-pixel-i
530 : minimum-absolute-difference-in-bst


b'<div class="question-description">\n<p><p>Given a binary search tree with non-negative values, find the minimum <a href="https://en.wikipedia.org/wiki/Absolute_difference">absolute difference</a> between values of any two nodes.</p>\n<p>\n<b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\n\r\n   1\r\n    \\\r\n     3\r\n    /\r\n   2\r\n\r\n<b>Output:</b>\r\n1\r\n\r\n<b>Explanation:</b>\r\nThe minimum absolute difference is 1, which is the difference between 2 and 1 (or between 2 and 3).\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThere are at least two nodes in this BST.\r\n</p></p>\n</div>'




No Description


530 : minimum-absolute-difference-in-bst
529 : minesweeper


b'<div class="question-description">\n<p><p>Given a binary search tree with non-negative values, find the minimum <a href="https://en.wikipedia.org/wiki/Absolute_difference">absolute difference</a> between values of any two nodes.</p>\n<p>\n<b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\n\r\n   1\r\n    \\\r\n     3\r\n    /\r\n   2\r\n\r\n<b>Output:</b>\r\n1\r\n\r\n<b>Explanation:</b>\r\nThe minimum absolute difference is 1, which is the difference between 2 and 1 (or between 2 and 3).\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThere are at least two nodes in this BST.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Let\'s play the minesweeper game (<a href="https://en.wikipedia.org/wiki/Minesweeper_(video_game)">Wikipedia</a>, <a href="http://minesweeperonline.com">online game</a>)! </p>\n<p>You are given a 2D char matrix representing the game board. <b>\'M\'</b> represents an <b>unrevealed</b> mine, <b>\'E\'</b> represents an <b>unrevealed</b> empty square, <b>\'B\'</b> represents a <b>revealed</b> blank square that has no adjacent (above, below, left, right, and all 4 diagonals) mines, <b>digit</b> (\'1\' to \'8\') represents how many mines are adjacent to this <b>revealed</b> square, and finally <b>\'X\'</b> represents a <b>revealed</b> mine.</p>\n<p>Now given the next click position (row and column indices) among all the <b>unrevealed</b> squares (\'M\' or \'E\'), return the board after revealing this position according to the following rules:</p>\n<p>\n<ol>\n<li>If a mine (\'M\') is revealed, then the game is over - change it to <b>\'X\'</b>.</li>\n<li>If an empty square (\'E\') with <b>no adjacent mines</b> is revealed, then change it to revealed blank (\'B\') and all of its adjacent <b>unrevealed</b> squares should be revealed recursively.</li>\n<li>If an empty square (\'E\') with <b>at least one adjacent mine</b> is revealed, then change it to a digit (\'1\' to \'8\') representing the number of adjacent mines.</li>\n<li>Return the board when no more squares will be revealed.</li>\n</ol>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n\r\n[[\'E\', \'E\', \'E\', \'E\', \'E\'],\r\n [\'E\', \'E\', \'M\', \'E\', \'E\'],\r\n [\'E\', \'E\', \'E\', \'E\', \'E\'],\r\n [\'E\', \'E\', \'E\', \'E\', \'E\']]\r\n\r\nClick : [3,0]\r\n\r\n<b>Output:</b> \r\n\r\n[[\'B\', \'1\', \'E\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'M\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'1\', \'1\', \'B\'],\r\n [\'B\', \'B\', \'B\', \'B\', \'B\']]\r\n\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/minesweeper_example_1.png" width="40%">\r\n</img></pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n\r\n[[\'B\', \'1\', \'E\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'M\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'1\', \'1\', \'B\'],\r\n [\'B\', \'B\', \'B\', \'B\', \'B\']]\r\n\r\nClick : [1,2]\r\n\r\n<b>Output:</b> \r\n\r\n[[\'B\', \'1\', \'E\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'X\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'1\', \'1\', \'B\'],\r\n [\'B\', \'B\', \'B\', \'B\', \'B\']]\r\n\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/minesweeper_example_2.png" width="40%"/>\r\n</pre>\n</p>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The range of the input matrix\'s height and width is [1,50].</li>\n<li>The click position will only be an unrevealed square (\'M\' or \'E\'), which also means the input board contains at least one clickable square.</li>\n<li>The input board won\'t be a stage when game is over (some mines have been revealed).</li>\n<li>For simplicity, not mentioned rules should be ignored in this problem. For example, you <b>don\'t</b> need to reveal all the unrevealed mines when the game is over, consider any cases that you will win the game or flag any squares.</li>\n</ol>\n</p></p>\n</div>'


529 : minesweeper
527 : word-abbreviation


b'<div class="question-description">\n<p><p>Let\'s play the minesweeper game (<a href="https://en.wikipedia.org/wiki/Minesweeper_(video_game)">Wikipedia</a>, <a href="http://minesweeperonline.com">online game</a>)! </p>\n<p>You are given a 2D char matrix representing the game board. <b>\'M\'</b> represents an <b>unrevealed</b> mine, <b>\'E\'</b> represents an <b>unrevealed</b> empty square, <b>\'B\'</b> represents a <b>revealed</b> blank square that has no adjacent (above, below, left, right, and all 4 diagonals) mines, <b>digit</b> (\'1\' to \'8\') represents how many mines are adjacent to this <b>revealed</b> square, and finally <b>\'X\'</b> represents a <b>revealed</b> mine.</p>\n<p>Now given the next click position (row and column indices) among all the <b>unrevealed</b> squares (\'M\' or \'E\'), return the board after revealing this position according to the following rules:</p>\n<p>\n<ol>\n<li>If a mine (\'M\') is revealed, then the game is over - change it to <b>\'X\'</b>.</li>\n<li>If an empty square (\'E\') with <b>no adjacent mines</b> is revealed, then change it to revealed blank (\'B\') and all of its adjacent <b>unrevealed</b> squares should be revealed recursively.</li>\n<li>If an empty square (\'E\') with <b>at least one adjacent mine</b> is revealed, then change it to a digit (\'1\' to \'8\') representing the number of adjacent mines.</li>\n<li>Return the board when no more squares will be revealed.</li>\n</ol>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n\r\n[[\'E\', \'E\', \'E\', \'E\', \'E\'],\r\n [\'E\', \'E\', \'M\', \'E\', \'E\'],\r\n [\'E\', \'E\', \'E\', \'E\', \'E\'],\r\n [\'E\', \'E\', \'E\', \'E\', \'E\']]\r\n\r\nClick : [3,0]\r\n\r\n<b>Output:</b> \r\n\r\n[[\'B\', \'1\', \'E\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'M\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'1\', \'1\', \'B\'],\r\n [\'B\', \'B\', \'B\', \'B\', \'B\']]\r\n\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/minesweeper_example_1.png" width="40%">\r\n</img></pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n\r\n[[\'B\', \'1\', \'E\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'M\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'1\', \'1\', \'B\'],\r\n [\'B\', \'B\', \'B\', \'B\', \'B\']]\r\n\r\nClick : [1,2]\r\n\r\n<b>Output:</b> \r\n\r\n[[\'B\', \'1\', \'E\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'X\', \'1\', \'B\'],\r\n [\'B\', \'1\', \'1\', \'1\', \'B\'],\r\n [\'B\', \'B\', \'B\', \'B\', \'B\']]\r\n\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/minesweeper_example_2.png" width="40%"/>\r\n</pre>\n</p>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The range of the input matrix\'s height and width is [1,50].</li>\n<li>The click position will only be an unrevealed square (\'M\' or \'E\'), which also means the input board contains at least one clickable square.</li>\n<li>The input board won\'t be a stage when game is over (some mines have been revealed).</li>\n<li>For simplicity, not mentioned rules should be ignored in this problem. For example, you <b>don\'t</b> need to reveal all the unrevealed mines when the game is over, consider any cases that you will win the game or flag any squares.</li>\n</ol>\n</p></p>\n</div>'




No Description


527 : word-abbreviation
526 : beautiful-arrangement


No Description




b'<div class="question-description">\n<p><p>\r\nSuppose you have <b>N</b> integers from 1 to N. We define a beautiful arrangement as an array that is constructed by these <b>N</b> numbers successfully if one of the following is true for the i<sub>th</sub> position (1 ? i ? N) in this array:\r\n<ol>\n<li>The number at the i<sub>th</sub> position is divisible by <b>i</b>.</li>\n<li><b>i</b> is divisible by the number at the i<sub>th</sub> position.</li>\n</ol>\n</p>\n<p>\r\nNow given N, how many beautiful arrangements can you construct?\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 2\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> \r\n<br/>The first beautiful arrangement is [1, 2]:\r\n<br/>Number at the 1st position (i=1) is 1, and 1 is divisible by i (i=1).\r\n<br/>Number at the 2nd position (i=2) is 2, and 2 is divisible by i (i=2).\r\n<br/>The second beautiful arrangement is [2, 1]:\r\n<br/>Number at the 1st position (i=1) is 2, and 2 is divisible by i (i=1).\r\n<br/>Number at the 2nd position (i=2) is 1, and i (i=2) is divisible by 1.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li><b>N</b> is a positive integer and will not exceed 15.</li>\n</ol>\n</p></p>\n</div>'


526 : beautiful-arrangement
525 : contiguous-array


b'<div class="question-description">\n<p><p>\r\nSuppose you have <b>N</b> integers from 1 to N. We define a beautiful arrangement as an array that is constructed by these <b>N</b> numbers successfully if one of the following is true for the i<sub>th</sub> position (1 ? i ? N) in this array:\r\n<ol>\n<li>The number at the i<sub>th</sub> position is divisible by <b>i</b>.</li>\n<li><b>i</b> is divisible by the number at the i<sub>th</sub> position.</li>\n</ol>\n</p>\n<p>\r\nNow given N, how many beautiful arrangements can you construct?\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 2\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> \r\n<br/>The first beautiful arrangement is [1, 2]:\r\n<br/>Number at the 1st position (i=1) is 1, and 1 is divisible by i (i=1).\r\n<br/>Number at the 2nd position (i=2) is 2, and 2 is divisible by i (i=2).\r\n<br/>The second beautiful arrangement is [2, 1]:\r\n<br/>Number at the 1st position (i=1) is 2, and 2 is divisible by i (i=1).\r\n<br/>Number at the 2nd position (i=2) is 1, and i (i=2) is divisible by 1.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li><b>N</b> is a positive integer and will not exceed 15.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1. </p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [0,1]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> [0, 1] is the longest contiguous subarray with equal number of 0 and 1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [0,1,0]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe length of the given binary array will not exceed 50,000.\r\n</p></p>\n</div>'


525 : contiguous-array
524 : longest-word-in-dictionary-through-deleting


b'<div class="question-description">\n<p><p>Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1. </p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [0,1]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> [0, 1] is the longest contiguous subarray with equal number of 0 and 1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [0,1,0]\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe length of the given binary array will not exceed 50,000.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string and a string dictionary, find the longest string in the dictionary that can be formed by deleting some characters of the given string. If there are more than one possible results, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>\r\ns = "abpcplea", d = ["ale","apple","monkey","plea"]\r\n\r\n<b>Output:</b> \r\n"apple"\r\n</pre>\n</p>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b>\r\ns = "abpcplea", d = ["a","b","c"]\r\n\r\n<b>Output:</b> \r\n"a"\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>All the strings in the input will only contain lower-case letters.</li>\n<li>The size of the dictionary won\'t exceed 1,000.</li>\n<li>The length of all the strings in the input won\'t exceed 1,000.</li>\n</ol>\n</p></div>'


524 : longest-word-in-dictionary-through-deleting
523 : continuous-subarray-sum


b'<div class="question-description">\n<p><p>\r\nGiven a string and a string dictionary, find the longest string in the dictionary that can be formed by deleting some characters of the given string. If there are more than one possible results, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b>\r\ns = "abpcplea", d = ["ale","apple","monkey","plea"]\r\n\r\n<b>Output:</b> \r\n"apple"\r\n</pre>\n</p>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b>\r\ns = "abpcplea", d = ["a","b","c"]\r\n\r\n<b>Output:</b> \r\n"a"\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>All the strings in the input will only contain lower-case letters.</li>\n<li>The size of the dictionary won\'t exceed 1,000.</li>\n<li>The length of all the strings in the input won\'t exceed 1,000.</li>\n</ol>\n</p></div>'




b'<div class="question-description">\n<p><p>\r\nGiven a list of <b>non-negative</b> numbers and a target <b>integer</b> k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to the multiple of <b>k</b>, that is, sums up to n*k where n is also an <b>integer</b>.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [23, 2, 4, 6, 7],  k=6\r\n<b>Output:</b> True\r\n<b>Explanation:</b> Because [2, 4] is a continuous subarray of size 2 and sums up to 6.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [23, 2, 6, 4, 7],  k=6\r\n<b>Output:</b> True\r\n<b>Explanation:</b> Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the array won\'t exceed 10,000.</li>\n<li>You may assume the sum of all the numbers is in the range of a signed 32-bit integer.</li>\n</ol>\n</p></p>\n</div>'


523 : continuous-subarray-sum
522 : longest-uncommon-subsequence-ii


b'<div class="question-description">\n<p><p>\r\nGiven a list of <b>non-negative</b> numbers and a target <b>integer</b> k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to the multiple of <b>k</b>, that is, sums up to n*k where n is also an <b>integer</b>.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [23, 2, 4, 6, 7],  k=6\r\n<b>Output:</b> True\r\n<b>Explanation:</b> Because [2, 4] is a continuous subarray of size 2 and sums up to 6.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [23, 2, 6, 4, 7],  k=6\r\n<b>Output:</b> True\r\n<b>Explanation:</b> Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the array won\'t exceed 10,000.</li>\n<li>You may assume the sum of all the numbers is in the range of a signed 32-bit integer.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a list of strings, you need to find the longest uncommon subsequence among them. The longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be <b>any</b> subsequence of the other strings.\r\n</p>\n<p>\r\nA <b>subsequence</b> is a sequence that can be derived from one sequence by deleting some characters without changing the order of the remaining elements. Trivially, any string is a subsequence of itself and an empty string is a subsequence of any string.\r\n</p>\n<p>\r\nThe input will be a list of strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesn\'t exist, return -1.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "aba", "cdc", "eae"\r\n<b>Output:</b> 3\r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>All the given strings\' lengths will not exceed 10.</li>\n<li>The length of the given list will be in the range of [2, 50].</li>\n</ol>\n</p></p>\n</div>'


522 : longest-uncommon-subsequence-ii
521 : longest-uncommon-subsequence-i


b'<div class="question-description">\n<p><p>\r\nGiven a list of strings, you need to find the longest uncommon subsequence among them. The longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be <b>any</b> subsequence of the other strings.\r\n</p>\n<p>\r\nA <b>subsequence</b> is a sequence that can be derived from one sequence by deleting some characters without changing the order of the remaining elements. Trivially, any string is a subsequence of itself and an empty string is a subsequence of any string.\r\n</p>\n<p>\r\nThe input will be a list of strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesn\'t exist, return -1.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "aba", "cdc", "eae"\r\n<b>Output:</b> 3\r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>All the given strings\' lengths will not exceed 10.</li>\n<li>The length of the given list will be in the range of [2, 50].</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a group of two strings, you need to find the longest uncommon subsequence of this group of two strings.\r\nThe longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be <b>any</b> subsequence of the other strings.\r\n</p>\n<p>\r\nA <b>subsequence</b> is a sequence that can be derived from one sequence by deleting some characters without changing the order of the remaining elements. Trivially, any string is a subsequence of itself and an empty string is a subsequence of any string.\r\n</p>\n<p>\r\nThe input will be two strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesn\'t exist, return -1.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "aba", "cdc"\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> The longest uncommon subsequence is "aba" (or "cdc"), <br/>because "aba" is a subsequence of "aba", <br/>but not a subsequence of any other strings in the group of two strings. \r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>Both strings\' lengths will not exceed 100.</li>\n<li>Only letters from a ~ z will appear in input strings. </li>\n</ol>\n</p></p>\n</div>'


521 : longest-uncommon-subsequence-i
520 : detect-capital


b'<div class="question-description">\n<p><p>\r\nGiven a group of two strings, you need to find the longest uncommon subsequence of this group of two strings.\r\nThe longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be <b>any</b> subsequence of the other strings.\r\n</p>\n<p>\r\nA <b>subsequence</b> is a sequence that can be derived from one sequence by deleting some characters without changing the order of the remaining elements. Trivially, any string is a subsequence of itself and an empty string is a subsequence of any string.\r\n</p>\n<p>\r\nThe input will be two strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesn\'t exist, return -1.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "aba", "cdc"\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> The longest uncommon subsequence is "aba" (or "cdc"), <br/>because "aba" is a subsequence of "aba", <br/>but not a subsequence of any other strings in the group of two strings. \r\n</pre>\n</p>\n<p><b>Note:</b>\n<ol>\n<li>Both strings\' lengths will not exceed 100.</li>\n<li>Only letters from a ~ z will appear in input strings. </li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a word, you need to judge whether the usage of capitals in it is right or not.\r\n</p>\n<p>\r\nWe define the usage of capitals in a word to be right when one of the following cases holds:\r\n<ol>\n<li>All letters in this word are capitals, like "USA".</li>\n<li>All letters in this word are not capitals, like "leetcode".</li>\n<li>Only the first letter in this word is capital if it has more than one letter, like "Google".</li>\n</ol>\r\nOtherwise, we define that this word doesn\'t use capitals in a right way.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "USA"\r\n<b>Output:</b> True\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "FlaG"\r\n<b>Output:</b> False\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe input will be a non-empty word consisting of uppercase and lowercase latin letters.\r\n</p></p>\n</div>'


520 : detect-capital
517 : super-washing-machines


b'<div class="question-description">\n<p><p>\r\nGiven a word, you need to judge whether the usage of capitals in it is right or not.\r\n</p>\n<p>\r\nWe define the usage of capitals in a word to be right when one of the following cases holds:\r\n<ol>\n<li>All letters in this word are capitals, like "USA".</li>\n<li>All letters in this word are not capitals, like "leetcode".</li>\n<li>Only the first letter in this word is capital if it has more than one letter, like "Google".</li>\n</ol>\r\nOtherwise, we define that this word doesn\'t use capitals in a right way.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "USA"\r\n<b>Output:</b> True\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "FlaG"\r\n<b>Output:</b> False\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe input will be a non-empty word consisting of uppercase and lowercase latin letters.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You have <b>n</b> super washing machines on a line. Initially, each washing machine has some dresses or is empty. \r\n</p>\n<p>For each <b>move</b>, you could choose <b>any m</b> (1 ? m ? n) washing machines, and pass <b>one dress</b> of each washing machine to one of its adjacent washing machines <b> at the same time </b>.  </p>\n<p>Given an integer array representing the number of dresses in each washing machine from left to right on the line, you should find the <b>minimum number of moves</b> to make all the washing machines have the same number of dresses. If it is not possible to do it, return -1.</p>\n<p><b>Example1</b>\n<pre>\r\n<b>Input:</b> [1,0,5]\r\n\r\n<b>Output:</b> 3\r\n\r\n<b>Explanation:</b> \r\n1st move:    1     0 &lt;-- 5    =&gt;    1     1     4\r\n2nd move:    1 &lt;-- 1 &lt;-- 4    =&gt;    2     1     3    \r\n3rd move:    2     1 &lt;-- 3    =&gt;    2     2     2   \r\n</pre>\n<p><b>Example2</b>\n<pre>\r\n<b>Input:</b> [0,3,0]\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> \r\n1st move:    0 &lt;-- 3     0    =&gt;    1     2     0    \r\n2nd move:    1     2 --&gt; 0    =&gt;    1     1     1     \r\n</pre>\n<p><b>Example3</b>\n<pre>\r\n<b>Input:</b> [0,2,0]\r\n\r\n<b>Output:</b> -1\r\n\r\n<b>Explanation:</b> \r\nIt\'s impossible to make all the three washing machines have the same number of dresses. \r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The range of n is [1, 10000].</li>\n<li>The range of dresses number in a super washing machine is [0, 1e5].</li>\n</ol>\n</p></p>\n</p></p></div>'


517 : super-washing-machines
516 : longest-palindromic-subsequence


b'<div class="question-description">\n<p><p>You have <b>n</b> super washing machines on a line. Initially, each washing machine has some dresses or is empty. \r\n</p>\n<p>For each <b>move</b>, you could choose <b>any m</b> (1 ? m ? n) washing machines, and pass <b>one dress</b> of each washing machine to one of its adjacent washing machines <b> at the same time </b>.  </p>\n<p>Given an integer array representing the number of dresses in each washing machine from left to right on the line, you should find the <b>minimum number of moves</b> to make all the washing machines have the same number of dresses. If it is not possible to do it, return -1.</p>\n<p><b>Example1</b>\n<pre>\r\n<b>Input:</b> [1,0,5]\r\n\r\n<b>Output:</b> 3\r\n\r\n<b>Explanation:</b> \r\n1st move:    1     0 &lt;-- 5    =&gt;    1     1     4\r\n2nd move:    1 &lt;-- 1 &lt;-- 4    =&gt;    2     1     3    \r\n3rd move:    2     1 &lt;-- 3    =&gt;    2     2     2   \r\n</pre>\n<p><b>Example2</b>\n<pre>\r\n<b>Input:</b> [0,3,0]\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> \r\n1st move:    0 &lt;-- 3     0    =&gt;    1     2     0    \r\n2nd move:    1     2 --&gt; 0    =&gt;    1     1     1     \r\n</pre>\n<p><b>Example3</b>\n<pre>\r\n<b>Input:</b> [0,2,0]\r\n\r\n<b>Output:</b> -1\r\n\r\n<b>Explanation:</b> \r\nIt\'s impossible to make all the three washing machines have the same number of dresses. \r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The range of n is [1, 10000].</li>\n<li>The range of dresses number in a super washing machine is [0, 1e5].</li>\n</ol>\n</p></p>\n</p></p></div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string s, find the longest palindromic subsequence\'s length in s. You may assume that the maximum length of s is 1000.\r\n</p>\n<p><b>Example 1:</b><br/>\r\nInput: \r\n<pre>\r\n"bbbab"\r\n</pre>\r\nOutput: \r\n<pre>\r\n4\r\n</pre>\r\nOne possible longest palindromic subsequence is "bbbb".\r\n</p>\n<p><b>Example 2:</b><br/>\r\nInput:\r\n<pre>\r\n"cbbd"\r\n</pre>\r\nOutput:\r\n<pre>\r\n2\r\n</pre>\r\nOne possible longest palindromic subsequence is "bb".\r\n</p></p>\n</div>'


516 : longest-palindromic-subsequence
515 : find-largest-value-in-each-tree-row


b'<div class="question-description">\n<p><p>\r\nGiven a string s, find the longest palindromic subsequence\'s length in s. You may assume that the maximum length of s is 1000.\r\n</p>\n<p><b>Example 1:</b><br/>\r\nInput: \r\n<pre>\r\n"bbbab"\r\n</pre>\r\nOutput: \r\n<pre>\r\n4\r\n</pre>\r\nOne possible longest palindromic subsequence is "bbbb".\r\n</p>\n<p><b>Example 2:</b><br/>\r\nInput:\r\n<pre>\r\n"cbbd"\r\n</pre>\r\nOutput:\r\n<pre>\r\n2\r\n</pre>\r\nOne possible longest palindromic subsequence is "bb".\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You need to find the largest value in each row of a binary tree.</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n\r\n          1\r\n         / \\\r\n        3   2\r\n       / \\   \\  \r\n      5   3   9 \r\n\r\n<b>Output:</b> [1, 3, 9]\r\n</pre>\n</p>\n</p>\n</div>'


515 : find-largest-value-in-each-tree-row
514 : freedom-trail


b'<div class="question-description">\n<p><p>You need to find the largest value in each row of a binary tree.</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> \r\n\r\n          1\r\n         / \\\r\n        3   2\r\n       / \\   \\  \r\n      5   3   9 \r\n\r\n<b>Output:</b> [1, 3, 9]\r\n</pre>\n</p>\n</p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nIn the video game Fallout 4, the quest "Road to Freedom" requires players to reach a metal dial called the "Freedom Trail Ring", and use the dial to spell a specific keyword in order to open the door. \r\n</p>\n<p>\r\nGiven a string <b>ring</b>, which represents the code engraved on the outer ring and another string <b>key</b>, which represents the keyword needs to be spelled. You need to find the <b>minimum</b> number of steps in order to spell all the characters in the keyword.\r\n</p>\r\nInitially, the first character of the <b>ring</b> is aligned at 12:00 direction. You need to spell all the characters in the string <b>key</b> one by one by rotating the ring clockwise or anticlockwise to make each character of the string <b>key</b> aligned at 12:00 direction and then by pressing the center button.\r\n<br/>\r\n\r\nAt the stage of rotating the ring to spell the key character <b>key[i]</b>:\r\n<ol>\n<li>You can rotate the <b>ring</b> clockwise or anticlockwise <b>one place</b>, which counts as 1 step. The final purpose of the rotation is to align one of the string <b>ring\'s</b> characters at the 12:00 direction, where this character must equal to the character <b>key[i]</b>.\r\n\r\n<li>If the character <b>key[i]</b> has been aligned at the 12:00 direction, you need to press the center button to spell, which also counts as 1 step. After the pressing, you could begin to spell the next character in the key (next stage), otherwise, you\'ve finished all the spelling.</li>\n</li></ol>\n</p>\n<p><b>Example:</b><br>\n<center>\n<img src="https://leetcode.com/static/images/problemset/ring.jpg" width="26%">\n</img></center>\n</br>\n<pre>\r\n<b>Input:</b> ring = "godding", key = "gd"\r\n<b>Output:</b> 4\r\n<b>Explanation:</b></pre></p></div>'


514 : freedom-trail
513 : find-bottom-left-tree-value


b'<div class="question-description">\n<p><p>\r\nIn the video game Fallout 4, the quest "Road to Freedom" requires players to reach a metal dial called the "Freedom Trail Ring", and use the dial to spell a specific keyword in order to open the door. \r\n</p>\n<p>\r\nGiven a string <b>ring</b>, which represents the code engraved on the outer ring and another string <b>key</b>, which represents the keyword needs to be spelled. You need to find the <b>minimum</b> number of steps in order to spell all the characters in the keyword.\r\n</p>\r\nInitially, the first character of the <b>ring</b> is aligned at 12:00 direction. You need to spell all the characters in the string <b>key</b> one by one by rotating the ring clockwise or anticlockwise to make each character of the string <b>key</b> aligned at 12:00 direction and then by pressing the center button.\r\n<br/>\r\n\r\nAt the stage of rotating the ring to spell the key character <b>key[i]</b>:\r\n<ol>\n<li>You can rotate the <b>ring</b> clockwise or anticlockwise <b>one place</b>, which counts as 1 step. The final purpose of the rotation is to align one of the string <b>ring\'s</b> characters at the 12:00 direction, where this character must equal to the character <b>key[i]</b>.\r\n\r\n<li>If the character <b>key[i]</b> has been aligned at the 12:00 direction, you need to press the center button to spell, which also counts as 1 step. After the pressing, you could begin to spell the next character in the key (next stage), otherwise, you\'ve finished all the spelling.</li>\n</li></ol>\n</p>\n<p><b>Example:</b><br>\n<center>\n<img src="https://leetcode.com/static/images/problemset/ring.jpg" width="26%">\n</img></center>\n</br>\n<pre>\r\n<b>Input:</b> ring = "godding", key = "gd"\r\n<b>Output:</b> 4\r\n<b>Explanation:</b></pre></p></div>'




b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, find the leftmost value in the last row of the tree. \r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\nInput:\r\n\r\n    2\r\n   / \\\r\n  1   3\r\n\r\nOutput:\r\n1\r\n</pre>\n</p>\n<p> <b> Example 2: </b><br/>\n<pre>\r\nInput:\r\n\r\n        1\r\n       / \\\r\n      2   3\r\n     /   / \\\r\n    4   5   6\r\n       /\r\n      7\r\n\r\nOutput:\r\n7\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nYou may assume the tree (i.e., the given root node) is not <b>NULL</b>.\r\n</p></p>\n</div>'


513 : find-bottom-left-tree-value
508 : most-frequent-subtree-sum


b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, find the leftmost value in the last row of the tree. \r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\nInput:\r\n\r\n    2\r\n   / \\\r\n  1   3\r\n\r\nOutput:\r\n1\r\n</pre>\n</p>\n<p> <b> Example 2: </b><br/>\n<pre>\r\nInput:\r\n\r\n        1\r\n       / \\\r\n      2   3\r\n     /   / \\\r\n    4   5   6\r\n       /\r\n      7\r\n\r\nOutput:\r\n7\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nYou may assume the tree (i.e., the given root node) is not <b>NULL</b>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven the root of a tree, you are asked to find the most frequent subtree sum. The subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself). So what is the most frequent subtree sum value? If there is a tie, return all the values with the highest frequency in any order.\r\n</p>\n<p><b>Examples 1</b><br/>\r\nInput:\r\n<pre>\r\n  5\r\n /  \\\r\n2   -3\r\n</pre>\r\nreturn [2, -3, 4], since all the values happen only once, return all of them in any order.\r\n</p>\n<p><b>Examples 2</b><br/>\r\nInput:\r\n<pre>\r\n  5\r\n /  \\\r\n2   -5\r\n</pre>\r\nreturn [2], since 2 happens twice, however -5 only occur once.\r\n</p>\n<p><b>Note:</b>\r\nYou may assume the sum of values in any subtree is in the range of 32-bit signed integer.\r\n</p></p>\n</div>'


508 : most-frequent-subtree-sum
507 : perfect-number


b'<div class="question-description">\n<p><p>\r\nGiven the root of a tree, you are asked to find the most frequent subtree sum. The subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself). So what is the most frequent subtree sum value? If there is a tie, return all the values with the highest frequency in any order.\r\n</p>\n<p><b>Examples 1</b><br/>\r\nInput:\r\n<pre>\r\n  5\r\n /  \\\r\n2   -3\r\n</pre>\r\nreturn [2, -3, 4], since all the values happen only once, return all of them in any order.\r\n</p>\n<p><b>Examples 2</b><br/>\r\nInput:\r\n<pre>\r\n  5\r\n /  \\\r\n2   -5\r\n</pre>\r\nreturn [2], since 2 happens twice, however -5 only occur once.\r\n</p>\n<p><b>Note:</b>\r\nYou may assume the sum of values in any subtree is in the range of 32-bit signed integer.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>We define the Perfect Number is a <b>positive</b> integer that is equal to the sum of all its <b>positive</b> divisors except itself. \r\n</p>\r\nNow, given an <b>integer</b> n, write a function that returns true when it is a perfect number and false when it is not.\r\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> 28\r\n<b>Output:</b> True\r\n<b>Explanation:</b> 28 = 1 + 2 + 4 + 7 + 14\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe input number <b>n</b> will not exceed 100,000,000. (1e8)\r\n</p></div>'


507 : perfect-number
506 : relative-ranks


b'<div class="question-description">\n<p><p>We define the Perfect Number is a <b>positive</b> integer that is equal to the sum of all its <b>positive</b> divisors except itself. \r\n</p>\r\nNow, given an <b>integer</b> n, write a function that returns true when it is a perfect number and false when it is not.\r\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> 28\r\n<b>Output:</b> True\r\n<b>Explanation:</b> 28 = 1 + 2 + 4 + 7 + 14\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe input number <b>n</b> will not exceed 100,000,000. (1e8)\r\n</p></div>'




b'<div class="question-description">\n<p><p>\r\nGiven scores of <b>N</b> athletes, find their relative ranks and the people with the top three highest scores, who will be awarded medals: "Gold Medal", "Silver Medal" and "Bronze Medal".</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [5, 4, 3, 2, 1]\r\n<b>Output:</b> ["Gold Medal", "Silver Medal", "Bronze Medal", "4", "5"]\r\n<b>Explanation:</b> The first three athletes got the top three highest scores, so they got "Gold Medal", "Silver Medal" and "Bronze Medal". <br/>For the left two athletes, you just need to output their relative ranks according to their scores.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>N is a positive integer and won\'t exceed 10,000.</li>\n<li>All the scores of athletes are guaranteed to be unique.</li>\n</ol>\n</p>\n</p>\n</div>'


506 : relative-ranks
505 : the-maze-ii


b'<div class="question-description">\n<p><p>\r\nGiven scores of <b>N</b> athletes, find their relative ranks and the people with the top three highest scores, who will be awarded medals: "Gold Medal", "Silver Medal" and "Bronze Medal".</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [5, 4, 3, 2, 1]\r\n<b>Output:</b> ["Gold Medal", "Silver Medal", "Bronze Medal", "4", "5"]\r\n<b>Explanation:</b> The first three athletes got the top three highest scores, so they got "Gold Medal", "Silver Medal" and "Bronze Medal". <br/>For the left two athletes, you just need to output their relative ranks according to their scores.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>N is a positive integer and won\'t exceed 10,000.</li>\n<li>All the scores of athletes are guaranteed to be unique.</li>\n</ol>\n</p>\n</p>\n</div>'




No Description


505 : the-maze-ii
504 : base-7


No Description




b'<div class="question-description">\n<p><p>Given an integer, return its base 7 string representation.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 100\r\n<b>Output:</b> "202"\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> -7\r\n<b>Output:</b> "-10"\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe input will be in range of [-1e7, 1e7].\r\n</p></p>\n</div>'


504 : base-7
503 : next-greater-element-ii


b'<div class="question-description">\n<p><p>Given an integer, return its base 7 string representation.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 100\r\n<b>Output:</b> "202"\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> -7\r\n<b>Output:</b> "-10"\r\n</pre>\n</p>\n<p><b>Note:</b>\r\nThe input will be in range of [-1e7, 1e7].\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn\'t exist, output -1 for this number.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2,1]\r\n<b>Output:</b> [2,-1,2]\r\n<b>Explanation:</b> The first 1\'s next greater number is 2; </pre></p></p></div>'


503 : next-greater-element-ii
502 : ipo


b'<div class="question-description">\n<p><p>\r\nGiven a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn\'t exist, output -1 for this number.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2,1]\r\n<b>Output:</b> [2,-1,2]\r\n<b>Explanation:</b> The first 1\'s next greater number is 2; </pre></p></p></div>'




b'<div class="question-description">\n<p><p>\r\nSuppose LeetCode will start its IPO soon. In order to sell a good price of its shares to Venture Capital, LeetCode would like to work on some projects to increase its capital before the IPO. Since it has limited resources, it can only finish at most <b>k</b> distinct projects before the IPO. Help LeetCode design the best way to maximize its total capital after finishing at most <b>k</b> distinct projects. \r\n</p>\n<p>\r\nYou are given several projects. For each project <b>i</b>, it has a pure profit <b>P<sub>i</sub></b> and a minimum capital of <b>C<sub>i</sub></b> is needed to start the corresponding project. Initially, you have <b>W</b> capital. When you finish a project, you will obtain its pure profit and the profit will be added to your total capital.\r\n</p>\n<p>\r\nTo sum up, pick a list of at most <b>k</b> distinct projects from given projects to maximize your final capital, and output your final maximized capital.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> k=2, W=0, Profits=[1,2,3], Capital=[0,1,1].\r\n\r\n<b>Output:</b> 4\r\n\r\n<b>Explanation:</b> Since your initial capital is 0, you can only start the project indexed 0.\r\n             After finishing it you will obtain profit 1 and your capital becomes 1.\r\n             With capital 1, you can either start the project indexed 1 or the project indexed 2.\r\n             Since you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.\r\n             Therefore, output the final maximized capital, which is 0 + 1 + 3 = 4.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume all numbers in the input are non-negative integers.</li>\n<li>The length of Profits array and Capital array will not exceed 50,000.</li>\n<li>The answer is guaranteed to fit in a 32-bit signed integer.</li>\n</ol>\n</p></p>\n</div>'


502 : ipo
501 : find-mode-in-binary-search-tree


b'<div class="question-description">\n<p><p>Given a binary search tree (BST) with duplicates, find all the <a href="https://en.wikipedia.org/wiki/Mode_(statistics)" target="_blank">mode(s)</a> (the most frequently occurred element) in the given BST.</p>\n<p>\r\nAssume a BST is defined as follows:\r\n<ul>\n<li>The left subtree of a node contains only nodes with keys <b>less than or equal to</b> the node\'s key.</li>\n<li>The right subtree of a node contains only nodes with keys <b>greater than or equal to</b> the node\'s key.</li>\n<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n</p>\n<p>\r\nFor example:<br/>\r\nGiven BST <code>[1,null,2,2]</code>,<br/>\n<pre>\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   2\r\n</pre>\n</p>\n<p>\r\nreturn <code>[2]</code>.\r\n</p>\n<p><b>Note:</b>\r\nIf a tree has more than one mode, you can return them in any order.\r\n</p>\n<p><b>Follow up:</b>\r\nCould you do that without using any extra space? (Assume that the implicit stack space incurred due to recursion does not count).\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nSuppose LeetCode will start its IPO soon. In order to sell a good price of its shares to Venture Capital, LeetCode would like to work on some projects to increase its capital before the IPO. Since it has limited resources, it can only finish at most <b>k</b> distinct projects before the IPO. Help LeetCode design the best way to maximize its total capital after finishing at most <b>k</b> distinct projects. \r\n</p>\n<p>\r\nYou are given several projects. For each project <b>i</b>, it has a pure profit <b>P<sub>i</sub></b> and a minimum capital of <b>C<sub>i</sub></b> is needed to start the corresponding project. Initially, you have <b>W</b> capital. When you finish a project, you will obtain its pure profit and the profit will be added to your total capital.\r\n</p>\n<p>\r\nTo sum up, pick a list of at most <b>k</b> distinct projects from given projects to maximize your final capital, and output your final maximized capital.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> k=2, W=0, Profits=[1,2,3], Capital=[0,1,1].\r\n\r\n<b>Output:</b> 4\r\n\r\n<b>Explanation:</b> Since your initial capital is 0, you can only start the project indexed 0.\r\n             After finishing it you will obtain profit 1 and your capital becomes 1.\r\n             With capital 1, you can either start the project indexed 1 or the project indexed 2.\r\n             Since you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.\r\n             Therefore, output the final maximized capital, which is 0 + 1 + 3 = 4.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume all numbers in the input are non-negative integers.</li>\n<li>The length of Profits array and Capital array will not exceed 50,000.</li>\n<li>The answer is guaranteed to fit in a 32-bit signed integer.</li>\n</ol>\n</p></p>\n</div>'


501 : find-mode-in-binary-search-tree
500 : keyboard-row


b'<div class="question-description">\n<p><p>Given a binary search tree (BST) with duplicates, find all the <a href="https://en.wikipedia.org/wiki/Mode_(statistics)" target="_blank">mode(s)</a> (the most frequently occurred element) in the given BST.</p>\n<p>\r\nAssume a BST is defined as follows:\r\n<ul>\n<li>The left subtree of a node contains only nodes with keys <b>less than or equal to</b> the node\'s key.</li>\n<li>The right subtree of a node contains only nodes with keys <b>greater than or equal to</b> the node\'s key.</li>\n<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n</p>\n<p>\r\nFor example:<br/>\r\nGiven BST <code>[1,null,2,2]</code>,<br/>\n<pre>\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   2\r\n</pre>\n</p>\n<p>\r\nreturn <code>[2]</code>.\r\n</p>\n<p><b>Note:</b>\r\nIf a tree has more than one mode, you can return them in any order.\r\n</p>\n<p><b>Follow up:</b>\r\nCould you do that without using any extra space? (Assume that the implicit stack space incurred due to recursion does not count).\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a List of words, return the words that can be typed using letters of <b>alphabet</b> on only one row\'s of American keyboard like the image below. </p>\n<br/>\n<p>\n<img alt="American keyboard" src="https://leetcode.com/static/images/problemset/keyboard.png">\n</img></p>\n<br/>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> ["Hello", "Alaska", "Dad", "Peace"]\r\n<b>Output:</b> ["Alaska", "Dad"]\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may use one character in the keyboard more than once.</li>\n<li>You may assume the input string will only contain letters of alphabet.</li>\n</ol>\n</p></p>\n</div>'


500 : keyboard-row
499 : the-maze-iii


b'<div class="question-description">\n<p><p>Given a List of words, return the words that can be typed using letters of <b>alphabet</b> on only one row\'s of American keyboard like the image below. </p>\n<br/>\n<p>\n<img alt="American keyboard" src="https://leetcode.com/static/images/problemset/keyboard.png">\n</img></p>\n<br/>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> ["Hello", "Alaska", "Dad", "Peace"]\r\n<b>Output:</b> ["Alaska", "Dad"]\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may use one character in the keyboard more than once.</li>\n<li>You may assume the input string will only contain letters of alphabet.</li>\n</ol>\n</p></p>\n</div>'




No Description


499 : the-maze-iii
498 : diagonal-traverse


No Description




b'<div class="question-description">\n<p><p>\r\nGiven a matrix of M x N elements (M rows, N columns), return all elements of the matrix in diagonal order as shown in the below image. \r\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n[\r\n [ 1, 2, 3 ],\r\n [ 4, 5, 6 ],\r\n [ 7, 8, 9 ]\r\n]\r\n<b>Output:</b>  [1,2,4,7,5,3,6,8,9]\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/diagonal_traverse.png" width="20%">\r\n</img></pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The total number of elements of the given matrix will not exceed 10,000.</li>\n</ol>\n</p></p>\n</div>'


498 : diagonal-traverse
496 : next-greater-element-i


b'<div class="question-description">\n<p><p>\r\nGiven a matrix of M x N elements (M rows, N columns), return all elements of the matrix in diagonal order as shown in the below image. \r\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n[\r\n [ 1, 2, 3 ],\r\n [ 4, 5, 6 ],\r\n [ 7, 8, 9 ]\r\n]\r\n<b>Output:</b>  [1,2,4,7,5,3,6,8,9]\r\n<b>Explanation:</b>\r\n<img src="https://leetcode.com/static/images/problemset/diagonal_traverse.png" width="20%">\r\n</img></pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The total number of elements of the given matrix will not exceed 10,000.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nYou are given two arrays <b>(without duplicates)</b> <code>nums1</code> and <code>nums2</code> where <code>nums1</code>\xe2\x80\x99s elements are subset of <code>nums2</code>. Find all the next greater numbers for <code>nums1</code>\'s elements in the corresponding places of <code>nums2</code>. \r\n</p>\n<p>\r\nThe Next Greater Number of a number <b>x</b> in <code>nums1</code> is the first greater number to its right in <code>nums2</code>. If it does not exist, output -1 for this number.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> <b>nums1</b> = [4,1,2], <b>nums2</b> = [1,3,4,2].\r\n<b>Output:</b> [-1,3,-1]\r\n<b>Explanation:</b>\r\n    For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.\r\n    For number 1 in the first array, the next greater number for it in the second array is 3.\r\n    For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> <b>nums1</b> = [2,4], <b>nums2</b> = [1,2,3,4].\r\n<b>Output:</b> [3,-1]\r\n<b>Explanation:</b>\r\n    For number 2 in the first array, the next greater number for it in the second array is 3.\r\n    For number 4 in the first array, there is no next greater number for it in the second array, so output -1.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>All elements in <code>nums1</code> and <code>nums2</code> are unique.</li>\n<li>The length of both <code>nums1</code> and <code>nums2</code> would not exceed 1000.</li>\n</ol>\n</p></p>\n</div>'


496 : next-greater-element-i
495 : teemo-attacking


b'<div class="question-description">\n<p><p>\r\nYou are given two arrays <b>(without duplicates)</b> <code>nums1</code> and <code>nums2</code> where <code>nums1</code>\xe2\x80\x99s elements are subset of <code>nums2</code>. Find all the next greater numbers for <code>nums1</code>\'s elements in the corresponding places of <code>nums2</code>. \r\n</p>\n<p>\r\nThe Next Greater Number of a number <b>x</b> in <code>nums1</code> is the first greater number to its right in <code>nums2</code>. If it does not exist, output -1 for this number.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> <b>nums1</b> = [4,1,2], <b>nums2</b> = [1,3,4,2].\r\n<b>Output:</b> [-1,3,-1]\r\n<b>Explanation:</b>\r\n    For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.\r\n    For number 1 in the first array, the next greater number for it in the second array is 3.\r\n    For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> <b>nums1</b> = [2,4], <b>nums2</b> = [1,2,3,4].\r\n<b>Output:</b> [3,-1]\r\n<b>Explanation:</b>\r\n    For number 2 in the first array, the next greater number for it in the second array is 3.\r\n    For number 4 in the first array, there is no next greater number for it in the second array, so output -1.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>All elements in <code>nums1</code> and <code>nums2</code> are unique.</li>\n<li>The length of both <code>nums1</code> and <code>nums2</code> would not exceed 1000.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nIn LLP world, there is a hero called Teemo and his attacking can make his enemy Ashe be in poisoned condition. Now, given the Teemo\'s attacking <b>ascending</b> time series towards Ashe and the poisoning time duration per Teemo\'s attacking, you need to output the total time that Ashe is in poisoned condition.\r\n</p>\n<p>You may assume that Teemo attacks at the very beginning of a specific time point, and makes Ashe be in poisoned condition immediately.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,4], 2\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned immediately. <br/>This poisoned status will last 2 seconds until the end of time point 2. <br/>And at time point 4, Teemo attacks Ashe again, and causes Ashe to be in poisoned status for another 2 seconds. <br/>So you finally need to output 4.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2], 2\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned. <br/>This poisoned status will last 2 seconds until the end of time point 2. <br/>However, at the beginning of time point 2, Teemo attacks Ashe again who is already in poisoned status. <br/>Since the poisoned status won\'t add up together, though the second poisoning attack will still work at time point 2, it will stop at the end of time point 3. <br/>So you finally need to output 3.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume the length of given time series array won\'t exceed 10000.</li>\n<li>You may assume the numbers in the Teemo\'s attacking time series and his poisoning time duration per attacking are non-negative integers, which won\'t exceed 10,000,000.</li>\n</ol>\n</p></p>\n</div>'


495 : teemo-attacking
494 : target-sum


b'<div class="question-description">\n<p><p>\r\nIn LLP world, there is a hero called Teemo and his attacking can make his enemy Ashe be in poisoned condition. Now, given the Teemo\'s attacking <b>ascending</b> time series towards Ashe and the poisoning time duration per Teemo\'s attacking, you need to output the total time that Ashe is in poisoned condition.\r\n</p>\n<p>You may assume that Teemo attacks at the very beginning of a specific time point, and makes Ashe be in poisoned condition immediately.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,4], 2\r\n<b>Output:</b> 4\r\n<b>Explanation:</b> At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned immediately. <br/>This poisoned status will last 2 seconds until the end of time point 2. <br/>And at time point 4, Teemo attacks Ashe again, and causes Ashe to be in poisoned status for another 2 seconds. <br/>So you finally need to output 4.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2], 2\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned. <br/>This poisoned status will last 2 seconds until the end of time point 2. <br/>However, at the beginning of time point 2, Teemo attacks Ashe again who is already in poisoned status. <br/>Since the poisoned status won\'t add up together, though the second poisoning attack will still work at time point 2, it will stop at the end of time point 3. <br/>So you finally need to output 3.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume the length of given time series array won\'t exceed 10000.</li>\n<li>You may assume the numbers in the Teemo\'s attacking time series and his poisoning time duration per attacking are non-negative integers, which won\'t exceed 10,000,000.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nYou are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols <code>+</code> and <code>-</code>. For each integer, you should choose one from <code>+</code> and <code>-</code> as its new symbol.\r\n</p>\n<p>Find out how many ways to assign symbols to make sum of integers equal to target S.  \r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> nums is [1, 1, 1, 1, 1], S is 3. \r\n<b>Output:</b> 5\r\n<b>Explanation:</b> \r\n\r\n-1+1+1+1+1 = 3\r\n+1-1+1+1+1 = 3\r\n+1+1-1+1+1 = 3\r\n+1+1+1-1+1 = 3\r\n+1+1+1+1-1 = 3\r\n\r\nThere are 5 ways to assign symbols to make the sum of nums be target 3.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the given array is positive and will not exceed 20. </li>\n<li>The sum of elements in the given array will not exceed 1000.</li>\n<li>Your output answer is guaranteed to be fitted in a 32-bit integer.</li>\n</ol>\n</p></p>\n</div>'


494 : target-sum
493 : reverse-pairs


b'<div class="question-description">\n<p><p>Given an array <code>nums</code>, we call <code>(i, j)</code> an <b><i>important reverse pair</i></b> if <code>i &lt; j</code> and <code>nums[i] &gt; 2*nums[j]</code>.</p>\n<p>You need to return the number of important reverse pairs in the given array.</p>\n<p><b>Example1:</b>\n<pre>\r\n<b>Input</b>: [1,3,2,3,1]\r\n<b>Output</b>: 2\r\n</pre></p>\n<p><b>Example2:</b>\n<pre>\r\n<b>Input</b>: [2,4,3,5,1]\r\n<b>Output</b>: 3\r\n</pre></p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the given array will not exceed <code>50,000</code>.</li>\n<li>All the numbers in the input array are in the range of 32-bit integer.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nYou are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols <code>+</code> and <code>-</code>. For each integer, you should choose one from <code>+</code> and <code>-</code> as its new symbol.\r\n</p>\n<p>Find out how many ways to assign symbols to make sum of integers equal to target S.  \r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> nums is [1, 1, 1, 1, 1], S is 3. \r\n<b>Output:</b> 5\r\n<b>Explanation:</b> \r\n\r\n-1+1+1+1+1 = 3\r\n+1-1+1+1+1 = 3\r\n+1+1-1+1+1 = 3\r\n+1+1+1-1+1 = 3\r\n+1+1+1+1-1 = 3\r\n\r\nThere are 5 ways to assign symbols to make the sum of nums be target 3.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the given array is positive and will not exceed 20. </li>\n<li>The sum of elements in the given array will not exceed 1000.</li>\n<li>Your output answer is guaranteed to be fitted in a 32-bit integer.</li>\n</ol>\n</p></p>\n</div>'


493 : reverse-pairs
492 : construct-the-rectangle


b'<div class="question-description">\n<p><p>Given an array <code>nums</code>, we call <code>(i, j)</code> an <b><i>important reverse pair</i></b> if <code>i &lt; j</code> and <code>nums[i] &gt; 2*nums[j]</code>.</p>\n<p>You need to return the number of important reverse pairs in the given array.</p>\n<p><b>Example1:</b>\n<pre>\r\n<b>Input</b>: [1,3,2,3,1]\r\n<b>Output</b>: 2\r\n</pre></p>\n<p><b>Example2:</b>\n<pre>\r\n<b>Input</b>: [2,4,3,5,1]\r\n<b>Output</b>: 3\r\n</pre></p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the given array will not exceed <code>50,000</code>.</li>\n<li>All the numbers in the input array are in the range of 32-bit integer.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nFor a web developer, it is very important to know how to design a web page\'s size. So, given a specific rectangular web page\xe2\x80\x99s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:<pre>\r\n1. The area of the rectangular web page you designed must equal to the given target area.\r\n<br/>2. The width W should not be larger than the length L, which means L &gt;= W.\r\n<br/>3. The difference between length L and width W should be as small as possible.\r\n</pre>\r\nYou need to output the length L and the width W of the web page you designed in sequence.\r\n</p>\n<p><b>Example:</b><br>\n<pre>\r\n<b>Input:</b> 4\r\n<b>Output:</b> [2, 2]\r\n<b>Explanation:</b> The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1]. \r\nBut according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.\r\n</pre>\n</br></p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The given area won\'t exceed 10,000,000 and is a positive integer</li>\n<li>The web page\'s width and length you designed must be positive integers.</li>\n</ol>\n</p></p>\n</div>'


492 : construct-the-rectangle
491 : increasing-subsequences


b'<div class="question-description">\n<p><p>\r\nFor a web developer, it is very important to know how to design a web page\'s size. So, given a specific rectangular web page\xe2\x80\x99s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:<pre>\r\n1. The area of the rectangular web page you designed must equal to the given target area.\r\n<br/>2. The width W should not be larger than the length L, which means L &gt;= W.\r\n<br/>3. The difference between length L and width W should be as small as possible.\r\n</pre>\r\nYou need to output the length L and the width W of the web page you designed in sequence.\r\n</p>\n<p><b>Example:</b><br>\n<pre>\r\n<b>Input:</b> 4\r\n<b>Output:</b> [2, 2]\r\n<b>Explanation:</b> The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1]. \r\nBut according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.\r\n</pre>\n</br></p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The given area won\'t exceed 10,000,000 and is a positive integer</li>\n<li>The web page\'s width and length you designed must be positive integers.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an integer array, your task is to find all the different possible increasing subsequences of the given array, and the length of an increasing subsequence should be at least 2 .\r\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> [4, 6, 7, 7]\r\n<b>Output:</b> [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the given array will not exceed 15.</li>\n<li>The range of integer in the given array is [-100,100].</li>\n<li>The given array may contain duplicates, and two equal integers should also be considered as a special case of increasing sequence.</li>\n</ol>\n</p></p>\n</div>'


491 : increasing-subsequences
490 : the-maze


b'<div class="question-description">\n<p><p>\r\nGiven an integer array, your task is to find all the different possible increasing subsequences of the given array, and the length of an increasing subsequence should be at least 2 .\r\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> [4, 6, 7, 7]\r\n<b>Output:</b> [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of the given array will not exceed 15.</li>\n<li>The range of integer in the given array is [-100,100].</li>\n<li>The given array may contain duplicates, and two equal integers should also be considered as a special case of increasing sequence.</li>\n</ol>\n</p></p>\n</div>'




No Description


490 : the-maze
488 : zuma-game


b'<div class="question-description">\n<p><p>Think about Zuma Game. You have a row of balls on the table, colored red(R), yellow(Y), blue(B), green(G), and white(W). You also have several balls in your hand.</p>\n<p>\r\nEach time, you may choose a ball in your hand, and insert it into the row (including the leftmost place and rightmost place). Then, if there is a group of 3 or more balls in the same color touching, remove these balls. Keep doing this until no more balls can be removed.</p>\n<p>\r\nFind the minimal balls you have to insert to remove all the balls on the table. If you cannot remove all the balls, output -1.\r\n</p>\n<pre>\r\n<p><b>Examples:</b><br/>\r\n<b>Input:</b> "WRRBBW", "RB"\r\n<b>Output:</b> -1\r\n<b>Explanation:</b> WRRBBW -&gt; WRR[R]BBW -&gt; WBBW -&gt; WBB[B]W -&gt; WW\r\n\r\n<b>Input:</b> "WWRRBBWW", "WRBRW"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> WWRRBBWW -&gt; WWRR[R]BBWW -&gt; WWBBWW -&gt; WWBB[B]WW -&gt; WWWW -&gt; empty\r\n\r\n<b>Input:</b>"G", "GGGGG"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> G -&gt; G[G] -&gt; GG[G] -&gt; empty \r\n\r\n<b>Input:</b> "RBYYBBRRB", "YRBGB"\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> RBYYBBRRB -&gt; RBYY[Y]BBRRB -&gt; RBBBRRB -&gt; RRRB -&gt; B -&gt; B[B] -&gt; BB[B] -&gt; empty \r\n</p></pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume that the initial row of balls on the table won\xe2\x80\x99t have any 3 or more consecutive balls with the same color.</li>\n<li>The number of balls on the table won\'t exceed 20, and the string represents these balls is called "board" in the input.</li>\n<li>The number of balls in your hand won\'t exceed 5, and the string represents these balls is called "hand" in the input.</li>\n<li>Both input strings will be non-empty and only contain characters \'R\',\'Y\',\'B\',\'G\',\'W\'.</li>\n</ol>\n</p></div>'




No Description


488 : zuma-game
487 : max-consecutive-ones-ii


b'<div class="question-description">\n<p><p>Think about Zuma Game. You have a row of balls on the table, colored red(R), yellow(Y), blue(B), green(G), and white(W). You also have several balls in your hand.</p>\n<p>\r\nEach time, you may choose a ball in your hand, and insert it into the row (including the leftmost place and rightmost place). Then, if there is a group of 3 or more balls in the same color touching, remove these balls. Keep doing this until no more balls can be removed.</p>\n<p>\r\nFind the minimal balls you have to insert to remove all the balls on the table. If you cannot remove all the balls, output -1.\r\n</p>\n<pre>\r\n<p><b>Examples:</b><br/>\r\n<b>Input:</b> "WRRBBW", "RB"\r\n<b>Output:</b> -1\r\n<b>Explanation:</b> WRRBBW -&gt; WRR[R]BBW -&gt; WBBW -&gt; WBB[B]W -&gt; WW\r\n\r\n<b>Input:</b> "WWRRBBWW", "WRBRW"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> WWRRBBWW -&gt; WWRR[R]BBWW -&gt; WWBBWW -&gt; WWBB[B]WW -&gt; WWWW -&gt; empty\r\n\r\n<b>Input:</b>"G", "GGGGG"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> G -&gt; G[G] -&gt; GG[G] -&gt; empty \r\n\r\n<b>Input:</b> "RBYYBBRRB", "YRBGB"\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> RBYYBBRRB -&gt; RBYY[Y]BBRRB -&gt; RBBBRRB -&gt; RRRB -&gt; B -&gt; B[B] -&gt; BB[B] -&gt; empty \r\n</p></pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume that the initial row of balls on the table won\xe2\x80\x99t have any 3 or more consecutive balls with the same color.</li>\n<li>The number of balls on the table won\'t exceed 20, and the string represents these balls is called "board" in the input.</li>\n<li>The number of balls in your hand won\'t exceed 5, and the string represents these balls is called "hand" in the input.</li>\n<li>Both input strings will be non-empty and only contain characters \'R\',\'Y\',\'B\',\'G\',\'W\'.</li>\n</ol>\n</p></div>'




No Description


487 : max-consecutive-ones-ii
486 : predict-the-winner


No Description




b'<div class="question-description">\n<p><p>Given an array of scores that are non-negative integers. Player 1 picks one of the numbers from either end of the array followed by the player 2 and then player 1 and so on. Each time a player picks a number, that number will not be available for the next player. This continues until all the scores have been chosen. The player with the maximum score wins. </p>\n<p>Given an array of scores, predict whether player 1 is the winner. You can assume each player plays to maximize his score. </p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1, 5, 2]\r\n<b>Output:</b> False\r\n<b>Explanation:</b> Initially, player 1 can choose between 1 and 2. <br/>If he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). <br/>So, final score of player 1 is 1 + 2 = 3, and player 2 is 5. <br/>Hence, player 1 will never be the winner and you need to return False.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1, 5, 233, 7]\r\n<b>Output:</b> True\r\n<b>Explanation:</b> Player 1 first chooses 1. Then player 2 have to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.<br/>Finally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>1 &lt;= length of the array &lt;= 20. </li>\n<li>Any scores in the given array are non-negative integers and will not exceed 10,000,000.</li>\n<li>If the scores of both players are equal, then player 1 is still the winner.</li>\n</ol>\n</p></p>\n</div>'


486 : predict-the-winner
485 : max-consecutive-ones


b'<div class="question-description">\n<p><p>Given an array of scores that are non-negative integers. Player 1 picks one of the numbers from either end of the array followed by the player 2 and then player 1 and so on. Each time a player picks a number, that number will not be available for the next player. This continues until all the scores have been chosen. The player with the maximum score wins. </p>\n<p>Given an array of scores, predict whether player 1 is the winner. You can assume each player plays to maximize his score. </p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1, 5, 2]\r\n<b>Output:</b> False\r\n<b>Explanation:</b> Initially, player 1 can choose between 1 and 2. <br/>If he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). <br/>So, final score of player 1 is 1 + 2 = 3, and player 2 is 5. <br/>Hence, player 1 will never be the winner and you need to return False.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1, 5, 233, 7]\r\n<b>Output:</b> True\r\n<b>Explanation:</b> Player 1 first chooses 1. Then player 2 have to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.<br/>Finally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>1 &lt;= length of the array &lt;= 20. </li>\n<li>Any scores in the given array are non-negative integers and will not exceed 10,000,000.</li>\n<li>If the scores of both players are equal, then player 1 is still the winner.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary array, find the maximum number of consecutive 1s in this array.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,1,0,1,1,1]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> The first two digits or the last three digits are consecutive 1s.\r\n    The maximum number of consecutive 1s is 3.\r\n</pre>\n</p>\n<p><b>Note:</b>\n<ul>\n<li>The input array will only contain <code>0</code> and <code>1</code>.</li>\n<li>The length of input array is a positive integer and will not exceed 10,000</li>\n</ul>\n</p></p>\n</div>'


485 : max-consecutive-ones
484 : find-permutation


b'<div class="question-description">\n<p><p>Given a binary array, find the maximum number of consecutive 1s in this array.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,1,0,1,1,1]\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> The first two digits or the last three digits are consecutive 1s.\r\n    The maximum number of consecutive 1s is 3.\r\n</pre>\n</p>\n<p><b>Note:</b>\n<ul>\n<li>The input array will only contain <code>0</code> and <code>1</code>.</li>\n<li>The length of input array is a positive integer and will not exceed 10,000</li>\n</ul>\n</p></p>\n</div>'




No Description


484 : find-permutation
483 : smallest-good-base


b'<div class="question-description">\n<p><p>For an integer n, we call k&gt;=2 a <i><b>good base</b></i> of n, if all digits of n base k are 1.</p>\n<p>Now given a string representing n, you should return the smallest good base of n in string format. <br/></p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "13"\r\n<b>Output:</b> "3"\r\n<b>Explanation:</b> 13 base 3 is 111.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "4681"\r\n<b>Output:</b> "8"\r\n<b>Explanation:</b> 4681 base 8 is 11111.\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> "1000000000000000000"\r\n<b>Output:</b> "999999999999999999"\r\n<b>Explanation:</b> 1000000000000000000 base 999999999999999999 is 11.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The range of n is [3, 10^18].</li>\n<li>The string representing n is always valid and will not have leading zeros.</li>\n</ol>\n</p></p>\n</div>'


483 : smallest-good-base
482 : license-key-formatting


No Description




b'<div class="question-description">\n<p><p>For an integer n, we call k&gt;=2 a <i><b>good base</b></i> of n, if all digits of n base k are 1.</p>\n<p>Now given a string representing n, you should return the smallest good base of n in string format. <br/></p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "13"\r\n<b>Output:</b> "3"\r\n<b>Explanation:</b> 13 base 3 is 111.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "4681"\r\n<b>Output:</b> "8"\r\n<b>Explanation:</b> 4681 base 8 is 11111.\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> "1000000000000000000"\r\n<b>Output:</b> "999999999999999999"\r\n<b>Explanation:</b> 1000000000000000000 base 999999999999999999 is 11.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The range of n is [3, 10^18].</li>\n<li>The string representing n is always valid and will not have leading zeros.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Now you are given a string S, which represents a software license key which we would like to format. The string S is composed of alphanumerical characters and dashes. The dashes split the alphanumerical characters within the string into groups. (i.e. if there are M dashes, the string is split into M+1 groups). The dashes in the given string are possibly misplaced.</p>\n<p>We want each group of characters to be of length K (except for possibly the first group, which could be shorter, but still must contain at least one character). To satisfy this requirement, we will reinsert dashes. Additionally, all the lower case letters in the string must be converted to upper case.</p>\n<p>So, you are given a non-empty string S, representing a license key to format, and an integer K. And you need to return the license key formatted according to the description above.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> S = "2-4A0r7-4k", K = 4\r\n\r\n<b>Output:</b> "24A0-R74K"\r\n\r\n<b>Explanation:</b> The string S has been split into two parts, each part has 4 characters.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> S = "2-4A0r7-4k", K = 3\r\n\r\n<b>Output:</b> "24-A0R-74K"\r\n\r\n<b>Explanation:</b> The string S has been split into three parts, each part has 3 characters except the first part as it could be shorter as said above.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of string S will not exceed 12,000, and K is a positive integer.</li>\n<li>String S consists only of alphanumerical characters (a-z and/or A-Z and/or 0-9) and dashes(-).</li>\n<li>String S is non-empty.</li>\n</ol>\n</p></p>\n</div>'


482 : license-key-formatting
481 : magical-string


b'<div class="question-description">\n<p><p>Now you are given a string S, which represents a software license key which we would like to format. The string S is composed of alphanumerical characters and dashes. The dashes split the alphanumerical characters within the string into groups. (i.e. if there are M dashes, the string is split into M+1 groups). The dashes in the given string are possibly misplaced.</p>\n<p>We want each group of characters to be of length K (except for possibly the first group, which could be shorter, but still must contain at least one character). To satisfy this requirement, we will reinsert dashes. Additionally, all the lower case letters in the string must be converted to upper case.</p>\n<p>So, you are given a non-empty string S, representing a license key to format, and an integer K. And you need to return the license key formatted according to the description above.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> S = "2-4A0r7-4k", K = 4\r\n\r\n<b>Output:</b> "24A0-R74K"\r\n\r\n<b>Explanation:</b> The string S has been split into two parts, each part has 4 characters.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> S = "2-4A0r7-4k", K = 3\r\n\r\n<b>Output:</b> "24-A0R-74K"\r\n\r\n<b>Explanation:</b> The string S has been split into three parts, each part has 3 characters except the first part as it could be shorter as said above.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length of string S will not exceed 12,000, and K is a positive integer.</li>\n<li>String S consists only of alphanumerical characters (a-z and/or A-Z and/or 0-9) and dashes(-).</li>\n<li>String S is non-empty.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nA magical string <b>S</b> consists of only \'1\' and \'2\' and obeys the following rules:\r\n</p>\n<p>\r\nThe string <b>S</b> is magical because concatenating the number of contiguous occurrences of characters \'1\' and \'2\' generates the string <b>S</b> itself.\r\n</p>\n<p>\r\nThe first few elements of string <b>S</b> is the following:\r\n<b>S</b> = "1221121221221121122\xe2\x80\xa6\xe2\x80\xa6"\r\n</p>\n<p>\r\nIf we group the consecutive \'1\'s and \'2\'s in <b>S</b>, it will be:\r\n</p>\n<p>\r\n1   22  11  2  1  22  1  22  11  2  11  22 ......\r\n</p>\n<p>\r\nand the occurrences of \'1\'s or \'2\'s in each group are:\r\n</p>\n<p>\r\n1   2\t   2    1   1    2     1    2     2    1    2    2 ......\r\n</p>\n<p>\r\nYou can see that the occurrence sequence above is the <b>S</b> itself. \r\n</p>\n<p>\r\nGiven an integer N as input, return the number of \'1\'s in the first N number in the magical string <b>S</b>.\r\n</p>\n<p><b>Note:</b>\r\nN will not exceed 100,000.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 6\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> The first 6 elements of magical string S is "12211" and it contains three 1\'s, so return 3.\r\n</pre>\n</p></p>\n</div>'


481 : magical-string
480 : sliding-window-median


b'<div class="question-description">\n<p><p>\r\nA magical string <b>S</b> consists of only \'1\' and \'2\' and obeys the following rules:\r\n</p>\n<p>\r\nThe string <b>S</b> is magical because concatenating the number of contiguous occurrences of characters \'1\' and \'2\' generates the string <b>S</b> itself.\r\n</p>\n<p>\r\nThe first few elements of string <b>S</b> is the following:\r\n<b>S</b> = "1221121221221121122\xe2\x80\xa6\xe2\x80\xa6"\r\n</p>\n<p>\r\nIf we group the consecutive \'1\'s and \'2\'s in <b>S</b>, it will be:\r\n</p>\n<p>\r\n1   22  11  2  1  22  1  22  11  2  11  22 ......\r\n</p>\n<p>\r\nand the occurrences of \'1\'s or \'2\'s in each group are:\r\n</p>\n<p>\r\n1   2\t   2    1   1    2     1    2     2    1    2    2 ......\r\n</p>\n<p>\r\nYou can see that the occurrence sequence above is the <b>S</b> itself. \r\n</p>\n<p>\r\nGiven an integer N as input, return the number of \'1\'s in the first N number in the magical string <b>S</b>.\r\n</p>\n<p><b>Note:</b>\r\nN will not exceed 100,000.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> 6\r\n<b>Output:</b> 3\r\n<b>Explanation:</b> The first 6 elements of magical string S is "12211" and it contains three 1\'s, so return 3.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.</p>\r\nExamples: <br/>\n<p><code>[2,3,4]</code> , the median is <code>3</code></p>\n<p><code>[2,3]</code>, the median is <code>(2 + 3) / 2 = 2.5</code> </p>\n<p>Given an array <i>nums</i>, there is a sliding window of size <i>k</i> which is moving from the very left of the array to the very right. You can only see the <i>k</i> numbers in the window. Each time the sliding window moves right by one position. Your job is to output the median array for each window in the original array.</p>\n<p>For example,<br/>\r\nGiven <i>nums</i> = <code>[1,3,-1,-3,5,3,6,7]</code>, and <i>k</i> = 3.</p>\n<pre>\r\nWindow position                Median\r\n---------------               -----\r\n[1  3  -1] -3  5  3  6  7       1\r\n 1 [3  -1  -3] 5  3  6  7       -1\r\n 1  3 [-1  -3  5] 3  6  7       -1\r\n 1  3  -1 [-3  5  3] 6  7       3\r\n 1  3  -1  -3 [5  3  6] 7       5\r\n 1  3  -1  -3  5 [3  6  7]      6\r\n</pre>\n<p>Therefore, return the median sliding window as <code>[1,-1,-1,3,5,6]</code>.</p>\n<p><b>Note: </b><br/>\r\nYou may assume <code>k</code> is always valid, ie: <code>k</code> is always smaller than input array\'s size for non-empty array.</p></p>\n</div>'


480 : sliding-window-median
479 : largest-palindrome-product


b'<div class="question-description">\n<p><p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.</p>\r\nExamples: <br/>\n<p><code>[2,3,4]</code> , the median is <code>3</code></p>\n<p><code>[2,3]</code>, the median is <code>(2 + 3) / 2 = 2.5</code> </p>\n<p>Given an array <i>nums</i>, there is a sliding window of size <i>k</i> which is moving from the very left of the array to the very right. You can only see the <i>k</i> numbers in the window. Each time the sliding window moves right by one position. Your job is to output the median array for each window in the original array.</p>\n<p>For example,<br/>\r\nGiven <i>nums</i> = <code>[1,3,-1,-3,5,3,6,7]</code>, and <i>k</i> = 3.</p>\n<pre>\r\nWindow position                Median\r\n---------------               -----\r\n[1  3  -1] -3  5  3  6  7       1\r\n 1 [3  -1  -3] 5  3  6  7       -1\r\n 1  3 [-1  -3  5] 3  6  7       -1\r\n 1  3  -1 [-3  5  3] 6  7       3\r\n 1  3  -1  -3 [5  3  6] 7       5\r\n 1  3  -1  -3  5 [3  6  7]      6\r\n</pre>\n<p>Therefore, return the median sliding window as <code>[1,-1,-1,3,5,6]</code>.</p>\n<p><b>Note: </b><br/>\r\nYou may assume <code>k</code> is always valid, ie: <code>k</code> is always smaller than input array\'s size for non-empty array.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Find the largest palindrome made from the product of two n-digit numbers.</p>\n<p> Since the result could be very large, you should return the largest palindrome mod 1337.</p>\n<p><b>Example:</b>\n<p>Input: 2</p>\n<p>Output: 987</p>\n<p>Explanation: 99 x 91 = 9009, 9009 % 1337 = 987\r\n</p>\n</p>\n<p><b>Note:</b>\n<p>The range of n is [1,8].</p>\n</p>\n</p>\n</div>'


479 : largest-palindrome-product
477 : total-hamming-distance


b'<div class="question-description">\n<p><p>Find the largest palindrome made from the product of two n-digit numbers.</p>\n<p> Since the result could be very large, you should return the largest palindrome mod 1337.</p>\n<p><b>Example:</b>\n<p>Input: 2</p>\n<p>Output: 987</p>\n<p>Explanation: 99 x 91 = 9009, 9009 % 1337 = 987\r\n</p>\n</p>\n<p><b>Note:</b>\n<p>The range of n is [1,8].</p>\n</p>\n</p>\n</div>'




b'<div class="question-description">\n<p><p>The <a href="https://en.wikipedia.org/wiki/Hamming_distance" target="_blank">Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p>\n<p>Now your job is to find the total Hamming distance between all pairs of the given numbers.</p></p></div>'


477 : total-hamming-distance
476 : number-complement


b'<div class="question-description">\n<p><p>The <a href="https://en.wikipedia.org/wiki/Hamming_distance" target="_blank">Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p>\n<p>Now your job is to find the total Hamming distance between all pairs of the given numbers.</p></p></div>'




b'<div class="question-description">\n<p><p>Given a positive integer, output its complement number. The complement strategy is to flip the bits of its binary representation.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The given integer is guaranteed to fit within the range of a 32-bit signed integer.</li>\n<li>You could assume no leading zero bit in the integer\xe2\x80\x99s binary representation.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br>\n<pre>\r\n<b>Input:</b> 5\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.\r\n</pre>\n</br></p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> 1\r\n<b>Output:</b> 0\r\n<b>Explanation:</b> The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.\r\n</pre>\n</p></p>\n</div>'


476 : number-complement
475 : heaters


b'<div class="question-description">\n<p><p>Given a positive integer, output its complement number. The complement strategy is to flip the bits of its binary representation.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The given integer is guaranteed to fit within the range of a 32-bit signed integer.</li>\n<li>You could assume no leading zero bit in the integer\xe2\x80\x99s binary representation.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br>\n<pre>\r\n<b>Input:</b> 5\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.\r\n</pre>\n</br></p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> 1\r\n<b>Output:</b> 0\r\n<b>Explanation:</b> The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Winter is coming! Your first job during the contest is to design a standard heater with fixed warm radius to warm all the houses.</p>\n<p>Now, you are given positions of houses and heaters on a horizontal line, find out minimum radius of heaters so that all houses could be covered by those heaters.</p>\n<p>So, your input will be the positions of houses and heaters seperately, and your expected output will be the minimum radius standard of heaters.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Numbers of houses and heaters you are given are non-negative and will not exceed 25000.</li>\n<li>Positions of houses and heaters you are given are non-negative and will not exceed 10^9.</li>\n<li>As long as a house is in the heaters\' warm radius range, it can be warmed.</li>\n<li>All the heaters follow your radius standard and the warm radius will the same.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br>\n<pre>\r\n<b>Input:</b> [1,2,3],[2]\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> The only heater was placed in the position 2, and if we use the radius 1 standard, then all the houses can be warmed.\r\n</pre>\n</br></p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2,3,4],[1,4]\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> The two heater was placed in the position 1 and 4. We need to use radius 1 standard, then all the houses can be warmed.\r\n</pre>\n</p></p>\n</div>'


475 : heaters
474 : ones-and-zeroes


b'<div class="question-description">\n<p><p>Winter is coming! Your first job during the contest is to design a standard heater with fixed warm radius to warm all the houses.</p>\n<p>Now, you are given positions of houses and heaters on a horizontal line, find out minimum radius of heaters so that all houses could be covered by those heaters.</p>\n<p>So, your input will be the positions of houses and heaters seperately, and your expected output will be the minimum radius standard of heaters.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Numbers of houses and heaters you are given are non-negative and will not exceed 25000.</li>\n<li>Positions of houses and heaters you are given are non-negative and will not exceed 10^9.</li>\n<li>As long as a house is in the heaters\' warm radius range, it can be warmed.</li>\n<li>All the heaters follow your radius standard and the warm radius will the same.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br>\n<pre>\r\n<b>Input:</b> [1,2,3],[2]\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> The only heater was placed in the position 2, and if we use the radius 1 standard, then all the houses can be warmed.\r\n</pre>\n</br></p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2,3,4],[1,4]\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> The two heater was placed in the position 1 and 4. We need to use radius 1 standard, then all the houses can be warmed.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>In the computer world, use restricted resource you have to generate maximum benefit is what we always want to pursue.</p>\n<p>For now, suppose you are a dominator of <b>m</b> <code>0s</code> and <b>n</b> <code>1s</code> respectively. On the other hand, there is an array with strings consisting of only <code>0s</code> and <code>1s</code>.</p>\n<p>\r\nNow your task is to find the maximum number of strings that you can form with given <b>m</b> <code>0s</code> and <b>n</b> <code>1s</code>. Each <code>0</code> and <code>1</code> can be used at most <b>once</b>.\r\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The given numbers of <code>0s</code> and <code>1s</code> will both not exceed <code>100</code></li>\n<li>The size of given string array won\'t exceed <code>600</code>.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br>\n<pre>\r\n<b>Input:</b> Array = {"10", "0001", "111001", "1", "0"}, m = 5, n = 3\r\n<b>Output:</b> 4\r\n\r\n<b>Explanation:</b> This are totally 4 strings can be formed by the using of 5 0s and 3 1s, which are \xe2\x80\x9c10,\xe2\x80\x9d0001\xe2\x80\x9d,\xe2\x80\x9d1\xe2\x80\x9d,\xe2\x80\x9d0\xe2\x80\x9d\r\n</pre>\n</br></p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> Array = {"10", "0", "1"}, m = 1, n = 1\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> You could form "10", but then you\'d have nothing left. Better form "0" and "1".\r\n</pre>\n</p></p>\n</div>'


474 : ones-and-zeroes
473 : matchsticks-to-square


b'<div class="question-description">\n<p><p>In the computer world, use restricted resource you have to generate maximum benefit is what we always want to pursue.</p>\n<p>For now, suppose you are a dominator of <b>m</b> <code>0s</code> and <b>n</b> <code>1s</code> respectively. On the other hand, there is an array with strings consisting of only <code>0s</code> and <code>1s</code>.</p>\n<p>\r\nNow your task is to find the maximum number of strings that you can form with given <b>m</b> <code>0s</code> and <b>n</b> <code>1s</code>. Each <code>0</code> and <code>1</code> can be used at most <b>once</b>.\r\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The given numbers of <code>0s</code> and <code>1s</code> will both not exceed <code>100</code></li>\n<li>The size of given string array won\'t exceed <code>600</code>.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br>\n<pre>\r\n<b>Input:</b> Array = {"10", "0001", "111001", "1", "0"}, m = 5, n = 3\r\n<b>Output:</b> 4\r\n\r\n<b>Explanation:</b> This are totally 4 strings can be formed by the using of 5 0s and 3 1s, which are \xe2\x80\x9c10,\xe2\x80\x9d0001\xe2\x80\x9d,\xe2\x80\x9d1\xe2\x80\x9d,\xe2\x80\x9d0\xe2\x80\x9d\r\n</pre>\n</br></p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> Array = {"10", "0", "1"}, m = 1, n = 1\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> You could form "10", but then you\'d have nothing left. Better form "0" and "1".\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Remember the story of Little Match Girl? By now, you know exactly what matchsticks the little match girl has, please find out a way you can make one square by using up all those matchsticks. You should not break any stick, but you can link them up, and each matchstick must be used <b>exactly</b> one time.</p>\n<p> Your input will be several matchsticks the girl has, represented with their stick length. Your output will either be true or false, to represent whether you could make one square using all the matchsticks the little match girl has.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,1,2,2,2]\r\n<b>Output:</b> true\r\n\r\n<b>Explanation:</b> You can form a square with length 2, one side of the square came two sticks with length 1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [3,3,3,3,4]\r\n<b>Output:</b> false\r\n\r\n<b>Explanation:</b> You cannot find a way to form a square with all the matchsticks.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length sum of the given matchsticks is in the range of <code>0</code> to <code>10^9</code>.\r\n<li>The length of the given matchstick array will not exceed <code>15</code>.</li>\n</li></ol>\n</p></p>\n</div>'


473 : matchsticks-to-square
472 : concatenated-words


b'<div class="question-description">\n<p><p>Remember the story of Little Match Girl? By now, you know exactly what matchsticks the little match girl has, please find out a way you can make one square by using up all those matchsticks. You should not break any stick, but you can link them up, and each matchstick must be used <b>exactly</b> one time.</p>\n<p> Your input will be several matchsticks the girl has, represented with their stick length. Your output will either be true or false, to represent whether you could make one square using all the matchsticks the little match girl has.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,1,2,2,2]\r\n<b>Output:</b> true\r\n\r\n<b>Explanation:</b> You can form a square with length 2, one side of the square came two sticks with length 1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [3,3,3,3,4]\r\n<b>Output:</b> false\r\n\r\n<b>Explanation:</b> You cannot find a way to form a square with all the matchsticks.\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The length sum of the given matchsticks is in the range of <code>0</code> to <code>10^9</code>.\r\n<li>The length of the given matchstick array will not exceed <code>15</code>.</li>\n</li></ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p>Given a list of words (<b>without duplicates</b>), please write a program that returns all concatenated words in the given list of words.\r\n<p>A concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array.</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> ["cat","cats","catsdogcats","dog","dogcatsdog","hippopotamuses","rat","ratcatdogcat"]\r\n\r\n<b>Output:</b> ["catsdogcats","dogcatsdog","ratcatdogcat"]\r\n\r\n<b>Explanation:</b> "catsdogcats" can be concatenated by "cats", "dog" and "cats"; <br/> "dogcatsdog" can be concatenated by "dog", "cats" and "dog"; <br/>"ratcatdogcat" can be concatenated by "rat", "cat", "dog" and "cat".\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The number of elements of the given array will not exceed <code>10,000 </code>\n<li>The length sum of elements in the given array will not exceed <code>600,000</code>. </li>\n<li>All the input string will only include lower case letters.</li>\n<li>The returned elements order does not matter. </li>\n</li></ol>\n</p></p>\n</div>'


472 : concatenated-words
471 : encode-string-with-shortest-length


b'<div class="question-description">\n<p>Given a list of words (<b>without duplicates</b>), please write a program that returns all concatenated words in the given list of words.\r\n<p>A concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array.</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b> ["cat","cats","catsdogcats","dog","dogcatsdog","hippopotamuses","rat","ratcatdogcat"]\r\n\r\n<b>Output:</b> ["catsdogcats","dogcatsdog","ratcatdogcat"]\r\n\r\n<b>Explanation:</b> "catsdogcats" can be concatenated by "cats", "dog" and "cats"; <br/> "dogcatsdog" can be concatenated by "dog", "cats" and "dog"; <br/>"ratcatdogcat" can be concatenated by "rat", "cat", "dog" and "cat".\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The number of elements of the given array will not exceed <code>10,000 </code>\n<li>The length sum of elements in the given array will not exceed <code>600,000</code>. </li>\n<li>All the input string will only include lower case letters.</li>\n<li>The returned elements order does not matter. </li>\n</li></ol>\n</p></p>\n</div>'




No Description


471 : encode-string-with-shortest-length
469 : convex-polygon


No Description




No Description


469 : convex-polygon
468 : validate-ip-address


No Description




b'<div class="question-description">\n<p><p>\r\nWrite a function to check whether an input string is a valid IPv4 address or IPv6 address or neither.\r\n</p>\n<p>\n<b>IPv4</b> addresses are canonically represented in dot-decimal notation, which consists of four decimal numbers, each ranging from 0 to 255, separated by dots ("."), e.g.,<code>172.16.254.1</code>;\r\n</p>\n<p>\r\nBesides, leading zeros in the IPv4 is invalid. For example, the address <code>172.16.254.01</code> is invalid.\r\n</p>\n<p>\n<b>IPv6</b> addresses are represented as eight groups of four hexadecimal digits, each group representing 16 bits. The groups are separated by colons (":"). For example, the address <code>2001:0db8:85a3:0000:0000:8a2e:0370:7334</code> is a valid one. Also, we could omit some leading zeros among four hexadecimal digits and some low-case characters in the address to upper-case ones, so <code>2001:db8:85a3:0:0:8A2E:0370:7334</code> is also a valid IPv6 address(Omit leading zeros and using upper cases).\r\n</p>\n<p>\r\nHowever, we don\'t replace a consecutive group of zero value with a single empty group using two consecutive colons (::) to pursue simplicity. For example, <code>2001:0db8:85a3::8A2E:0370:7334</code> is an invalid IPv6 address.\r\n</p>\n<p>\r\nBesides, extra leading zeros in the IPv6 is also invalid. For example, the address <code>02001:0db8:85a3:0000:0000:8a2e:0370:7334</code> is invalid.\r\n</p>\n<p><b>Note:</b>\r\nYou may assume there is no extra space or special characters in the input string.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "172.16.254.1"\r\n\r\n<b>Output:</b> "IPv4"\r\n\r\n<b>Explanation:</b> This is a valid IPv4 address, return "IPv4".\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "2001:0db8:85a3:0:0:8A2E:0370:7334"\r\n\r\n<b>Output:</b> "IPv6"\r\n\r\n<b>Explanation:</b> This is a valid IPv6 address, return "IPv6".\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> "256.256.256.256"\r\n\r\n<b>Output:</b> "Neither"\r\n\r\n<b>Explanation:</b> This is neither a IPv4 address nor a IPv6 address.\r\n</pre>\n</p></p>\n</div>'


468 : validate-ip-address
467 : unique-substrings-in-wraparound-string


b'<div class="question-description">\n<p><p>\r\nWrite a function to check whether an input string is a valid IPv4 address or IPv6 address or neither.\r\n</p>\n<p>\n<b>IPv4</b> addresses are canonically represented in dot-decimal notation, which consists of four decimal numbers, each ranging from 0 to 255, separated by dots ("."), e.g.,<code>172.16.254.1</code>;\r\n</p>\n<p>\r\nBesides, leading zeros in the IPv4 is invalid. For example, the address <code>172.16.254.01</code> is invalid.\r\n</p>\n<p>\n<b>IPv6</b> addresses are represented as eight groups of four hexadecimal digits, each group representing 16 bits. The groups are separated by colons (":"). For example, the address <code>2001:0db8:85a3:0000:0000:8a2e:0370:7334</code> is a valid one. Also, we could omit some leading zeros among four hexadecimal digits and some low-case characters in the address to upper-case ones, so <code>2001:db8:85a3:0:0:8A2E:0370:7334</code> is also a valid IPv6 address(Omit leading zeros and using upper cases).\r\n</p>\n<p>\r\nHowever, we don\'t replace a consecutive group of zero value with a single empty group using two consecutive colons (::) to pursue simplicity. For example, <code>2001:0db8:85a3::8A2E:0370:7334</code> is an invalid IPv6 address.\r\n</p>\n<p>\r\nBesides, extra leading zeros in the IPv6 is also invalid. For example, the address <code>02001:0db8:85a3:0000:0000:8a2e:0370:7334</code> is invalid.\r\n</p>\n<p><b>Note:</b>\r\nYou may assume there is no extra space or special characters in the input string.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "172.16.254.1"\r\n\r\n<b>Output:</b> "IPv4"\r\n\r\n<b>Explanation:</b> This is a valid IPv4 address, return "IPv4".\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "2001:0db8:85a3:0:0:8A2E:0370:7334"\r\n\r\n<b>Output:</b> "IPv6"\r\n\r\n<b>Explanation:</b> This is a valid IPv6 address, return "IPv6".\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> "256.256.256.256"\r\n\r\n<b>Output:</b> "Neither"\r\n\r\n<b>Explanation:</b> This is neither a IPv4 address nor a IPv6 address.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Consider the string <code>s</code> to be the infinite wraparound string of "abcdefghijklmnopqrstuvwxyz", so <code>s</code> will look like this: "...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....".</p>\n<p>Now we have another string <code>p</code>. Your job is to find out how many unique non-empty substrings of <code>p</code> are present in <code>s</code>. In particular, your input is the string <code>p</code> and you need to output the number of different non-empty substrings of <code>p</code> in the string <code>s</code>.</p>\n<p><b>Note:</b> <code>p</code> consists of only lowercase English letters and the size of p might be over 10000.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "a"\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> Only the substring "a" of string "a" is in the string \x10s.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "cac"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> There are two substrings "a", "c" of string "cac" in the string s.\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> "zab"\r\n<b>Output:</b> 6\r\n<b>Explanation:</b> There are six substrings "z", "a", "b", "za", "ab", "zab" of string "zab" in the string s.\r\n</pre>\n</p></p>\n</div>'


467 : unique-substrings-in-wraparound-string
466 : count-the-repetitions


b'<div class="question-description">\n<p><p>Consider the string <code>s</code> to be the infinite wraparound string of "abcdefghijklmnopqrstuvwxyz", so <code>s</code> will look like this: "...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....".</p>\n<p>Now we have another string <code>p</code>. Your job is to find out how many unique non-empty substrings of <code>p</code> are present in <code>s</code>. In particular, your input is the string <code>p</code> and you need to output the number of different non-empty substrings of <code>p</code> in the string <code>s</code>.</p>\n<p><b>Note:</b> <code>p</code> consists of only lowercase English letters and the size of p might be over 10000.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "a"\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> Only the substring "a" of string "a" is in the string \x10s.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "cac"\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> There are two substrings "a", "c" of string "cac" in the string s.\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> "zab"\r\n<b>Output:</b> 6\r\n<b>Explanation:</b> There are six substrings "z", "a", "b", "za", "ab", "zab" of string "zab" in the string s.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Define <code>S = [s,n]</code> as the string S which consists of n connected strings s. For example, <code>["abc", 3]</code> ="abcabcabc". </p>\n<p>On the other hand, we define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1. For example, \xe2\x80\x9cabc\xe2\x80\x9d  can be obtained from \xe2\x80\x9cabdbec\xe2\x80\x9d based on our definition, but it can not be obtained from \xe2\x80\x9cacbbe\xe2\x80\x9d.</p>\n<p>You are given two non-empty strings s1 and s2 (each at most 100 characters long) and two integers 0 \xe2\x89\xa4 n1 \xe2\x89\xa4 10<sup>6</sup> and 1 \xe2\x89\xa4 n2 \xe2\x89\xa4 10<sup>6</sup>. Now consider the strings S1 and S2, where <code>S1=[s1,n1]</code> and <code>S2=[s2,n2]</code>. Find the maximum integer M such that <code>[S2,M]</code> can be obtained from <code>S1</code>.</p>\n<p><b>Example:</b>\n<pre>\r\nInput:\r\ns1="acb", n1=4\r\ns2="ab", n2=2\r\n\r\nReturn:\r\n2\r\n</pre>\n</p></p>\n</div>'


466 : count-the-repetitions
465 : optimal-account-balancing


b'<div class="question-description">\n<p><p>Define <code>S = [s,n]</code> as the string S which consists of n connected strings s. For example, <code>["abc", 3]</code> ="abcabcabc". </p>\n<p>On the other hand, we define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1. For example, \xe2\x80\x9cabc\xe2\x80\x9d  can be obtained from \xe2\x80\x9cabdbec\xe2\x80\x9d based on our definition, but it can not be obtained from \xe2\x80\x9cacbbe\xe2\x80\x9d.</p>\n<p>You are given two non-empty strings s1 and s2 (each at most 100 characters long) and two integers 0 \xe2\x89\xa4 n1 \xe2\x89\xa4 10<sup>6</sup> and 1 \xe2\x89\xa4 n2 \xe2\x89\xa4 10<sup>6</sup>. Now consider the strings S1 and S2, where <code>S1=[s1,n1]</code> and <code>S2=[s2,n2]</code>. Find the maximum integer M such that <code>[S2,M]</code> can be obtained from <code>S1</code>.</p>\n<p><b>Example:</b>\n<pre>\r\nInput:\r\ns1="acb", n1=4\r\ns2="ab", n2=2\r\n\r\nReturn:\r\n2\r\n</pre>\n</p></p>\n</div>'




No Description


465 : optimal-account-balancing
464 : can-i-win


No Description




b'<div class="question-description">\n<p><p>In the "100 game," two players take turns adding, to a running total, any integer from 1..10. The player who first causes the running total to reach or exceed 100 wins. </p>\n<p>What if we change the game so that players cannot re-use integers? </p>\n<p>For example, two players might take turns drawing from a common pool of numbers of 1..15 without replacement until they reach a total &gt;= 100.</p>\n<p>Given an integer <code>maxChoosableInteger</code> and another integer <code>desiredTotal</code>, determine if the first player to move can force a win, assuming both players play optimally. </p>\n<p>You can always assume that <code>maxChoosableInteger</code> will not be larger than 20 and <code>desiredTotal</code> will not be larger than 300.\r\n</p>\n<p><b>Example</b>\n<pre>\r\n<b>Input:</b>\r\nmaxChoosableInteger = 10\r\ndesiredTotal = 11\r\n\r\n<b>Output:</b>\r\nfalse\r\n\r\n<b>Explanation:</b>\r\nNo matter which integer the first player choose, the first player will lose.\r\nThe first player can choose an integer from 1 up to 10.\r\nIf the first player choose 1, the second player can only choose integers from 2 up to 10.\r\nThe second player will win by choosing 10 and get a total = 11, which is &gt;= desiredTotal.\r\nSame with other integers chosen by the first player, the second player will always win.\r\n</pre>\n</p></p>\n</div>'


464 : can-i-win
463 : island-perimeter


b'<div class="question-description">\n<p><p>In the "100 game," two players take turns adding, to a running total, any integer from 1..10. The player who first causes the running total to reach or exceed 100 wins. </p>\n<p>What if we change the game so that players cannot re-use integers? </p>\n<p>For example, two players might take turns drawing from a common pool of numbers of 1..15 without replacement until they reach a total &gt;= 100.</p>\n<p>Given an integer <code>maxChoosableInteger</code> and another integer <code>desiredTotal</code>, determine if the first player to move can force a win, assuming both players play optimally. </p>\n<p>You can always assume that <code>maxChoosableInteger</code> will not be larger than 20 and <code>desiredTotal</code> will not be larger than 300.\r\n</p>\n<p><b>Example</b>\n<pre>\r\n<b>Input:</b>\r\nmaxChoosableInteger = 10\r\ndesiredTotal = 11\r\n\r\n<b>Output:</b>\r\nfalse\r\n\r\n<b>Explanation:</b>\r\nNo matter which integer the first player choose, the first player will lose.\r\nThe first player can choose an integer from 1 up to 10.\r\nIf the first player choose 1, the second player can only choose integers from 2 up to 10.\r\nThe second player will win by choosing 10 and get a total = 11, which is &gt;= desiredTotal.\r\nSame with other integers chosen by the first player, the second player will always win.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You are given a map in form of a two-dimensional integer grid where 1 represents land and 0 represents water. Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells). The island doesn\'t have "lakes" (water inside that isn\'t connected to the water around the island). One cell is a square with side length 1. The grid is rectangular, width and height don\'t exceed 100. Determine the perimeter of the island.</p>\n<p><b>Example:</b>\n<pre>\r\n[[0,1,0,0],\r\n [1,1,1,0],\r\n [0,1,0,0],\r\n [1,1,0,0]]\r\n\r\nAnswer: 16\r\nExplanation: The perimeter is the 16 yellow stripes in the image below:\r\n<img src="https://leetcode.com/static/images/problemset/island.png"/>\r\n</pre>\n</p></p>\n</div>'


463 : island-perimeter
462 : minimum-moves-to-equal-array-elements-ii


b'<div class="question-description">\n<p><p>You are given a map in form of a two-dimensional integer grid where 1 represents land and 0 represents water. Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells). The island doesn\'t have "lakes" (water inside that isn\'t connected to the water around the island). One cell is a square with side length 1. The grid is rectangular, width and height don\'t exceed 100. Determine the perimeter of the island.</p>\n<p><b>Example:</b>\n<pre>\r\n[[0,1,0,0],\r\n [1,1,1,0],\r\n [0,1,0,0],\r\n [1,1,0,0]]\r\n\r\nAnswer: 16\r\nExplanation: The perimeter is the 16 yellow stripes in the image below:\r\n<img src="https://leetcode.com/static/images/problemset/island.png"/>\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p><p>Given a <b>non-empty</b> integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.</p>\n<p>You may assume the array\'s length is at most 10,000.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\n[1,2,3]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nOnly two moves are needed (remember each move increments or decrements one element):\r\n\r\n[1,2,3]  =&gt;  [2,2,3]  =&gt;  [2,2,2]\r\n</pre>\n</p></p></p>\n</div>'


462 : minimum-moves-to-equal-array-elements-ii
461 : hamming-distance


b'<div class="question-description">\n<p><p><p>Given a <b>non-empty</b> integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.</p>\n<p>You may assume the array\'s length is at most 10,000.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\n[1,2,3]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nOnly two moves are needed (remember each move increments or decrements one element):\r\n\r\n[1,2,3]  =&gt;  [2,2,3]  =&gt;  [2,2,2]\r\n</pre>\n</p></p></p>\n</div>'




b'<div class="question-description">\n<p><p>The <a href="https://en.wikipedia.org/wiki/Hamming_distance" target="_blank">Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p>\n<p>Given two integers <code>x</code> and <code>y</code>, calculate the Hamming distance.</p>\n<p><b>Note:</b><br/>\r\n0 \xe2\x89\xa4 <code>x</code>, <code>y</code> &lt; 2<sup>31</sup>.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b> x = 1, y = 4\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b>\r\n1   (0 0 0 1)\r\n4   (0 1 0 0)\r\n       ?   ?\r\n\r\nThe above arrows point to positions where the corresponding bits are different.\r\n</pre>\n</p></p>\n</div>'


461 : hamming-distance
460 : lfu-cache


b'<div class="question-description">\n<p><p>The <a href="https://en.wikipedia.org/wiki/Hamming_distance" target="_blank">Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p>\n<p>Given two integers <code>x</code> and <code>y</code>, calculate the Hamming distance.</p>\n<p><b>Note:</b><br/>\r\n0 \xe2\x89\xa4 <code>x</code>, <code>y</code> &lt; 2<sup>31</sup>.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b> x = 1, y = 4\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b>\r\n1   (0 0 0 1)\r\n4   (0 1 0 0)\r\n       ?   ?\r\n\r\nThe above arrows point to positions where the corresponding bits are different.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Design and implement a data structure for <a href="https://en.wikipedia.org/wiki/Least_frequently_used" target="_blank">Least Frequently Used (LFU)</a> cache. It should support the following operations: <code>get</code> and <code>put</code>.\r\n</p>\n<p>\n<code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.<br/>\n<code>put(key, value)</code> - Set or insert the value if the key is not already present. When the cache reaches its capacity, it should invalidate the least frequently used item before inserting a new item. For the purpose of this problem, when there is a tie (i.e., two or more keys that have the same frequency), the least <b>recently</b> used key would be evicted.\r\n</p>\n<p><b>Follow up:</b><br>\r\nCould you do both operations in <b>O(1)</b> time complexity?</br></p>\n<p><b>Example:</b>\n<pre>\r\nLFUCache cache = new LFUCache( 2 /* capacity */ );\r\n\r\ncache.put(1, 1);\r\ncache.put(2, 2);\r\ncache.get(1);       // returns 1\r\ncache.put(3, 3);    // evicts key 2\r\ncache.get(2);       // returns -1 (not found)\r\ncache.get(3);       // returns 3.\r\ncache.put(4, 4);    // evicts key 1.\r\ncache.get(1);       // returns -1 (not found)\r\ncache.get(3);       // returns 3\r\ncache.get(4);       // returns 4\r\n</pre>\n</p></p>\n</div>'


460 : lfu-cache
459 : repeated-substring-pattern


b'<div class="question-description">\n<p><p>Design and implement a data structure for <a href="https://en.wikipedia.org/wiki/Least_frequently_used" target="_blank">Least Frequently Used (LFU)</a> cache. It should support the following operations: <code>get</code> and <code>put</code>.\r\n</p>\n<p>\n<code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.<br/>\n<code>put(key, value)</code> - Set or insert the value if the key is not already present. When the cache reaches its capacity, it should invalidate the least frequently used item before inserting a new item. For the purpose of this problem, when there is a tie (i.e., two or more keys that have the same frequency), the least <b>recently</b> used key would be evicted.\r\n</p>\n<p><b>Follow up:</b><br>\r\nCould you do both operations in <b>O(1)</b> time complexity?</br></p>\n<p><b>Example:</b>\n<pre>\r\nLFUCache cache = new LFUCache( 2 /* capacity */ );\r\n\r\ncache.put(1, 1);\r\ncache.put(2, 2);\r\ncache.get(1);       // returns 1\r\ncache.put(3, 3);    // evicts key 2\r\ncache.get(2);       // returns -1 (not found)\r\ncache.get(3);       // returns 3.\r\ncache.put(4, 4);    // evicts key 1.\r\ncache.get(1);       // returns -1 (not found)\r\ncache.get(3);       // returns 3\r\ncache.get(4);       // returns 4\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p>Given a non-empty string check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.  You may assume the given string consists of lowercase English letters only and its length  will not exceed 10000. \r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "abab"\r\n\r\n<b>Output:</b> True\r\n\r\n<b>Explanation:</b> It\'s the substring "ab" twice.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "aba"\r\n\r\n<b>Output:</b> False\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> "abcabcabcabc"\r\n\r\n<b>Output:</b> True\r\n\r\n<b>Explanation:</b> It\'s the substring "abc" four times. (And the substring "abcabc" twice.)\r\n</pre>\n</p></p>\n</div>'


459 : repeated-substring-pattern
456 : 132-pattern


b'<div class="question-description">\n<p>Given a non-empty string check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.  You may assume the given string consists of lowercase English letters only and its length  will not exceed 10000. \r\n\r\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> "abab"\r\n\r\n<b>Output:</b> True\r\n\r\n<b>Explanation:</b> It\'s the substring "ab" twice.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> "aba"\r\n\r\n<b>Output:</b> False\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> "abcabcabcabc"\r\n\r\n<b>Output:</b> True\r\n\r\n<b>Explanation:</b> It\'s the substring "abc" four times. (And the substring "abcabc" twice.)\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a sequence of n integers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>, a 132 pattern is a subsequence a<sub><b>i</b></sub>, a<sub><b>j</b></sub>, a<sub><b>k</b></sub> such\r\nthat <b>i</b> &lt; <b>j</b> &lt; <b>k</b> and a<sub><b>i</b></sub> &lt; a<sub><b>k</b></sub> &lt; a<sub><b>j</b></sub>. Design an algorithm that takes a list of n numbers as input and checks whether there is a 132 pattern in the list.</p>\n<p><b>Note:</b> n will be less than 15,000.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1, 2, 3, 4]\r\n\r\n<b>Output:</b> False\r\n\r\n<b>Explanation:</b> There is no 132 pattern in the sequence.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [3, 1, 4, 2]\r\n\r\n<b>Output:</b> True\r\n\r\n<b>Explanation:</b> There is a 132 pattern in the sequence: [1, 4, 2].\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> [-1, 3, 2, 0]\r\n\r\n<b>Output:</b> True\r\n\r\n<b>Explanation:</b> There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\r\n</pre>\n</p></p>\n</div>'


456 : 132-pattern
455 : assign-cookies


b'<div class="question-description">\n<p><p>\r\nGiven a sequence of n integers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>, a 132 pattern is a subsequence a<sub><b>i</b></sub>, a<sub><b>j</b></sub>, a<sub><b>k</b></sub> such\r\nthat <b>i</b> &lt; <b>j</b> &lt; <b>k</b> and a<sub><b>i</b></sub> &lt; a<sub><b>k</b></sub> &lt; a<sub><b>j</b></sub>. Design an algorithm that takes a list of n numbers as input and checks whether there is a 132 pattern in the list.</p>\n<p><b>Note:</b> n will be less than 15,000.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1, 2, 3, 4]\r\n\r\n<b>Output:</b> False\r\n\r\n<b>Explanation:</b> There is no 132 pattern in the sequence.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [3, 1, 4, 2]\r\n\r\n<b>Output:</b> True\r\n\r\n<b>Explanation:</b> There is a 132 pattern in the sequence: [1, 4, 2].\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> [-1, 3, 2, 0]\r\n\r\n<b>Output:</b> True\r\n\r\n<b>Explanation:</b> There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nAssume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor g<sub>i</sub>, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size s<sub>j</sub>. If s<sub>j</sub> &gt;= g<sub>i</sub>, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.\r\n</p>\n<p><b>Note:</b><br/>\r\nYou may assume the greed factor is always positive. <br/>\r\nYou cannot assign more than one cookie to one child.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2,3], [1,1]\r\n\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \r\nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\r\nYou need to output 1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2], [1,2,3]\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \r\nYou have 3 cookies and their sizes are big enough to gratify all of the children, \r\nYou need to output 2.\r\n</pre>\n</p></p>\n</div>'


455 : assign-cookies
454 : 4sum-ii


b'<div class="question-description">\n<p><p>\r\nAssume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor g<sub>i</sub>, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size s<sub>j</sub>. If s<sub>j</sub> &gt;= g<sub>i</sub>, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.\r\n</p>\n<p><b>Note:</b><br/>\r\nYou may assume the greed factor is always positive. <br/>\r\nYou cannot assign more than one cookie to one child.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2,3], [1,1]\r\n\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \r\nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\r\nYou need to output 1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1,2], [1,2,3]\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \r\nYou have 3 cookies and their sizes are big enough to gratify all of the children, \r\nYou need to output 2.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given four lists A, B, C, D of integer values, compute how many tuples <code>(i, j, k, l)</code> there are such that <code>A[i] + B[j] + C[k] + D[l]</code> is zero.</p>\n<p>To make problem a bit easier, all A, B, C, D have same length of N where 0 \xe2\x89\xa4 N \xe2\x89\xa4 500. All integers are in the range of -2<sup>28</sup> to 2<sup>28</sup> - 1 and the result is guaranteed to be at most 2<sup>31</sup> - 1.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\nA = [ 1, 2]\r\nB = [-2,-1]\r\nC = [-1, 2]\r\nD = [ 0, 2]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nThe two tuples are:\r\n1. (0, 0, 0, 1) -&gt; A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0\r\n2. (1, 1, 0, 0) -&gt; A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0\r\n</pre>\n</p></p>\n</div>'


454 : 4sum-ii
453 : minimum-moves-to-equal-array-elements


b'<div class="question-description">\n<p><p>Given four lists A, B, C, D of integer values, compute how many tuples <code>(i, j, k, l)</code> there are such that <code>A[i] + B[j] + C[k] + D[l]</code> is zero.</p>\n<p>To make problem a bit easier, all A, B, C, D have same length of N where 0 \xe2\x89\xa4 N \xe2\x89\xa4 500. All integers are in the range of -2<sup>28</sup> to 2<sup>28</sup> - 1 and the result is guaranteed to be at most 2<sup>31</sup> - 1.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\nA = [ 1, 2]\r\nB = [-2,-1]\r\nC = [-1, 2]\r\nD = [ 0, 2]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nThe two tuples are:\r\n1. (0, 0, 0, 1) -&gt; A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0\r\n2. (1, 1, 0, 0) -&gt; A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a <b>non-empty</b> integer array of size <i>n</i>, find the minimum number of moves required to make all array elements equal, where a move is incrementing <i>n</i> - 1 elements by 1.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\n[1,2,3]\r\n\r\n<b>Output:</b>\r\n3\r\n\r\n<b>Explanation:</b>\r\nOnly three moves are needed (remember each move increments two elements):\r\n\r\n[1,2,3]  =&gt;  [2,3,3]  =&gt;  [3,4,3]  =&gt;  [4,4,4]\r\n</pre>\n</p></p>\n</div>'


453 : minimum-moves-to-equal-array-elements
452 : minimum-number-of-arrows-to-burst-balloons


b'<div class="question-description">\n<p><p>Given a <b>non-empty</b> integer array of size <i>n</i>, find the minimum number of moves required to make all array elements equal, where a move is incrementing <i>n</i> - 1 elements by 1.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\n[1,2,3]\r\n\r\n<b>Output:</b>\r\n3\r\n\r\n<b>Explanation:</b>\r\nOnly three moves are needed (remember each move increments two elements):\r\n\r\n[1,2,3]  =&gt;  [2,3,3]  =&gt;  [3,4,3]  =&gt;  [4,4,4]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>There are a number of spherical balloons spread in two-dimensional space. For each balloon, provided input is the start and end coordinates of the horizontal diameter. Since it\'s horizontal, y-coordinates don\'t matter and hence the x-coordinates of start and end of the diameter suffice. Start is always smaller than end. There will be at most 10<sup>4</sup> balloons.</p>\n<p>An arrow can be shot up exactly vertically from different points along the x-axis. A balloon with x<sub>start</sub> and x<sub>end</sub> bursts by an arrow shot at x if x<sub>start</sub> \xe2\x89\xa4 x \xe2\x89\xa4 x<sub>end</sub>. There is no limit to the number of arrows that can be shot. An arrow once shot keeps travelling up infinitely. The problem is to find the minimum number of arrows that must be shot to burst all balloons. </p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\n[[10,16], [2,8], [1,6], [7,12]]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nOne way is to shoot one arrow for example at x = 6 (bursting the balloons [2,8] and [1,6]) and another arrow at x = 11 (bursting the other two balloons).\r\n</pre>\n</p></p>\n</div>'


452 : minimum-number-of-arrows-to-burst-balloons
451 : sort-characters-by-frequency


b'<div class="question-description">\n<p><p>There are a number of spherical balloons spread in two-dimensional space. For each balloon, provided input is the start and end coordinates of the horizontal diameter. Since it\'s horizontal, y-coordinates don\'t matter and hence the x-coordinates of start and end of the diameter suffice. Start is always smaller than end. There will be at most 10<sup>4</sup> balloons.</p>\n<p>An arrow can be shot up exactly vertically from different points along the x-axis. A balloon with x<sub>start</sub> and x<sub>end</sub> bursts by an arrow shot at x if x<sub>start</sub> \xe2\x89\xa4 x \xe2\x89\xa4 x<sub>end</sub>. There is no limit to the number of arrows that can be shot. An arrow once shot keeps travelling up infinitely. The problem is to find the minimum number of arrows that must be shot to burst all balloons. </p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\n[[10,16], [2,8], [1,6], [7,12]]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nOne way is to shoot one arrow for example at x = 6 (bursting the balloons [2,8] and [1,6]) and another arrow at x = 11 (bursting the other two balloons).\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string, sort it in decreasing order based on the frequency of characters.</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>Input:</b>\r\n"tree"\r\n\r\n<b>Output:</b>\r\n"eert"\r\n\r\n<b>Explanation:</b>\r\n\'e\' appears twice while \'r\' and \'t\' both appear once.\r\nSo \'e\' must appear before both \'r\' and \'t\'. Therefore "eetr" is also a valid answer.\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>Input:</b>\r\n"cccaaa"\r\n\r\n<b>Output:</b>\r\n"cccaaa"\r\n\r\n<b>Explanation:</b>\r\nBoth \'c\' and \'a\' appear three times, so "aaaccc" is also a valid answer.\r\nNote that "cacaca" is incorrect, as the same characters must be together.\r\n</pre>\n</p>\n<p><b>Example 3:</b>\n<pre>\r\n<b>Input:</b>\r\n"Aabb"\r\n\r\n<b>Output:</b>\r\n"bbAa"\r\n\r\n<b>Explanation:</b>\r\n"bbaA" is also a valid answer, but "Aabb" is incorrect.\r\nNote that \'A\' and \'a\' are treated as two different characters.\r\n</pre>\n</p></p>\n</div>'


451 : sort-characters-by-frequency
450 : delete-node-in-a-bst


b'<div class="question-description">\n<p><p>Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.</p>\n<p>Basically, the deletion can be divided into two stages:\r\n<ol>\n<li>Search for a node to remove.</li>\n<li>If the node is found, delete the node.</li>\n</ol>\n</p>\n<p><b>Note:</b> Time complexity should be O(height of tree).</p>\n<p><b>Example:</b>\n<pre>\r\nroot = [5,3,6,2,4,null,7]\r\nkey = 3\r\n\r\n    5\r\n   / \\\r\n  3   6\r\n / \\   \\\r\n2   4   7\r\n\r\nGiven key to delete is 3. So we find the node with value 3 and delete it.\r\n\r\nOne valid answer is [5,4,6,2,null,null,7], shown in the following BST.\r\n\r\n    5\r\n   / \\\r\n  4   6\r\n /     \\\r\n2       7\r\n\r\nAnother valid answer is [5,2,6,null,4,null,7].\r\n\r\n    5\r\n   / \\\r\n  2   6\r\n   \\   \\\r\n    4   7\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string, sort it in decreasing order based on the frequency of characters.</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>Input:</b>\r\n"tree"\r\n\r\n<b>Output:</b>\r\n"eert"\r\n\r\n<b>Explanation:</b>\r\n\'e\' appears twice while \'r\' and \'t\' both appear once.\r\nSo \'e\' must appear before both \'r\' and \'t\'. Therefore "eetr" is also a valid answer.\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>Input:</b>\r\n"cccaaa"\r\n\r\n<b>Output:</b>\r\n"cccaaa"\r\n\r\n<b>Explanation:</b>\r\nBoth \'c\' and \'a\' appear three times, so "aaaccc" is also a valid answer.\r\nNote that "cacaca" is incorrect, as the same characters must be together.\r\n</pre>\n</p>\n<p><b>Example 3:</b>\n<pre>\r\n<b>Input:</b>\r\n"Aabb"\r\n\r\n<b>Output:</b>\r\n"bbAa"\r\n\r\n<b>Explanation:</b>\r\n"bbaA" is also a valid answer, but "Aabb" is incorrect.\r\nNote that \'A\' and \'a\' are treated as two different characters.\r\n</pre>\n</p></p>\n</div>'


450 : delete-node-in-a-bst
449 : serialize-and-deserialize-bst


b'<div class="question-description">\n<p><p>Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.</p>\n<p>Basically, the deletion can be divided into two stages:\r\n<ol>\n<li>Search for a node to remove.</li>\n<li>If the node is found, delete the node.</li>\n</ol>\n</p>\n<p><b>Note:</b> Time complexity should be O(height of tree).</p>\n<p><b>Example:</b>\n<pre>\r\nroot = [5,3,6,2,4,null,7]\r\nkey = 3\r\n\r\n    5\r\n   / \\\r\n  3   6\r\n / \\   \\\r\n2   4   7\r\n\r\nGiven key to delete is 3. So we find the node with value 3 and delete it.\r\n\r\nOne valid answer is [5,4,6,2,null,null,7], shown in the following BST.\r\n\r\n    5\r\n   / \\\r\n  4   6\r\n /     \\\r\n2       7\r\n\r\nAnother valid answer is [5,2,6,null,4,null,7].\r\n\r\n    5\r\n   / \\\r\n  2   6\r\n   \\   \\\r\n    4   7\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. </p>\n<p>Design an algorithm to serialize and deserialize a <b>binary search tree</b>. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary search tree can be serialized to a string and this string can be deserialized to the original tree structure.</p>\n<p>\n<b>The encoded string should be as compact as possible.</b>\n</p>\n<p>\n<b>Note:</b> Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.\r\n</p></p>\n</div>'


449 : serialize-and-deserialize-bst
448 : find-all-numbers-disappeared-in-an-array


b'<div class="question-description">\n<p><p>Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. </p>\n<p>Design an algorithm to serialize and deserialize a <b>binary search tree</b>. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary search tree can be serialized to a string and this string can be deserialized to the original tree structure.</p>\n<p>\n<b>The encoded string should be as compact as possible.</b>\n</p>\n<p>\n<b>Note:</b> Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array of integers where 1 \xe2\x89\xa4 a[i] \xe2\x89\xa4 <i>n</i> (<i>n</i> = size of array), some elements appear twice and others appear once.</p>\n<p>Find all the elements of [1, <i>n</i>] inclusive that do not appear in this array.</p>\n<p>Could you do it without extra space and in O(<i>n</i>) runtime? You may assume the returned list does not count as extra space.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\n[4,3,2,7,8,2,3,1]\r\n\r\n<b>Output:</b>\r\n[5,6]\r\n</pre>\n</p></p>\n</div>'


448 : find-all-numbers-disappeared-in-an-array
447 : number-of-boomerangs


b'<div class="question-description">\n<p><p>Given <i>n</i> points in the plane that are all pairwise distinct, a "boomerang" is a tuple of points <code>(i, j, k)</code> such that the distance between <code>i</code> and <code>j</code> equals the distance between <code>i</code> and <code>k</code> (<b>the order of the tuple matters</b>).</p>\n<p>Find the number of boomerangs. You may assume that <i>n</i> will be at most <b>500</b> and coordinates of points are all in the range <b>[-10000, 10000]</b> (inclusive).</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n[[0,0],[1,0],[2,0]]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nThe two boomerangs are <b>[[1,0],[0,0],[2,0]]</b> and <b>[[1,0],[2,0],[0,0]]</b>\r\n</pre>\n</p></p>\n</div>'


447 : number-of-boomerangs
446 : arithmetic-slices-ii-subsequence


b'<div class="question-description">\n<p><p>Given an array of integers where 1 \xe2\x89\xa4 a[i] \xe2\x89\xa4 <i>n</i> (<i>n</i> = size of array), some elements appear twice and others appear once.</p>\n<p>Find all the elements of [1, <i>n</i>] inclusive that do not appear in this array.</p>\n<p>Could you do it without extra space and in O(<i>n</i>) runtime? You may assume the returned list does not count as extra space.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\n[4,3,2,7,8,2,3,1]\r\n\r\n<b>Output:</b>\r\n[5,6]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given <i>n</i> points in the plane that are all pairwise distinct, a "boomerang" is a tuple of points <code>(i, j, k)</code> such that the distance between <code>i</code> and <code>j</code> equals the distance between <code>i</code> and <code>k</code> (<b>the order of the tuple matters</b>).</p>\n<p>Find the number of boomerangs. You may assume that <i>n</i> will be at most <b>500</b> and coordinates of points are all in the range <b>[-10000, 10000]</b> (inclusive).</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n[[0,0],[1,0],[2,0]]\r\n\r\n<b>Output:</b>\r\n2\r\n\r\n<b>Explanation:</b>\r\nThe two boomerangs are <b>[[1,0],[0,0],[2,0]]</b> and <b>[[1,0],[2,0],[0,0]]</b>\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.</p>\n<p>For example, these are arithmetic sequences:</p>\n<pre>1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9</pre>\n<p>The following sequence is not arithmetic.</p> <pre>1, 1, 2, 5, 7</pre>\n<br/>\n<p>A zero-indexed array A consisting of N numbers is given. A <b>subsequence</b> slice of that array is any sequence of integers (P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>k</sub>) such that 0 \xe2\x89\xa4 P<sub>0</sub> &lt; P<sub>1</sub> &lt; ... &lt; P<sub>k</sub> &lt; N.</p>\n<p>A <b>subsequence</b> slice (P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>k</sub>) of array A is called arithmetic if the sequence A[P<sub>0</sub>], A[P<sub>1</sub>], ..., A[P<sub>k-1</sub>], A[P<sub>k</sub>] is arithmetic. In particular, this means that k \xe2\x89\xa5 2.</p>\n<p>The function should return the number of arithmetic subsequence slices in the array A. </p>\n<p>The input contains N integers. Every integer is in the range of -2<sup>31</sup> and 2<sup>31</sup>-1 and 0 \xe2\x89\xa4 N \xe2\x89\xa4 1000. The output is guaranteed to be less than 2<sup>31</sup>-1.</p>\n<br/>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b> [2, 4, 6, 8, 10]\r\n\r\n<b>Output:</b> 7\r\n\r\n<b>Explanation:</b>\r\nAll arithmetic subsequence slices are:\r\n[2,4,6]\r\n[4,6,8]\r\n[6,8,10]\r\n[2,4,6,8]\r\n[4,6,8,10]\r\n[2,4,6,8,10]\r\n[2,6,10]\r\n</pre>\n</p></p>\n</div>'


446 : arithmetic-slices-ii-subsequence
445 : add-two-numbers-ii


b'<div class="question-description">\n<p><p>You are given two <b>non-empty</b> linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n<p><b>Follow up:</b><br/>\r\nWhat if you cannot modify the input lists? In other words, reversing the lists is not allowed.\r\n</p>\n<p>\n<b>Example:</b>\n<pre>\r\n<b>Input:</b> (7 -&gt; 2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)\r\n<b>Output:</b> 7 -&gt; 8 -&gt; 0 -&gt; 7\r\n</pre>\n</p></p>\n</div>'


445 : add-two-numbers-ii
444 : sequence-reconstruction


b'<div class="question-description">\n<p><p>A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.</p>\n<p>For example, these are arithmetic sequences:</p>\n<pre>1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9</pre>\n<p>The following sequence is not arithmetic.</p> <pre>1, 1, 2, 5, 7</pre>\n<br/>\n<p>A zero-indexed array A consisting of N numbers is given. A <b>subsequence</b> slice of that array is any sequence of integers (P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>k</sub>) such that 0 \xe2\x89\xa4 P<sub>0</sub> &lt; P<sub>1</sub> &lt; ... &lt; P<sub>k</sub> &lt; N.</p>\n<p>A <b>subsequence</b> slice (P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>k</sub>) of array A is called arithmetic if the sequence A[P<sub>0</sub>], A[P<sub>1</sub>], ..., A[P<sub>k-1</sub>], A[P<sub>k</sub>] is arithmetic. In particular, this means that k \xe2\x89\xa5 2.</p>\n<p>The function should return the number of arithmetic subsequence slices in the array A. </p>\n<p>The input contains N integers. Every integer is in the range of -2<sup>31</sup> and 2<sup>31</sup>-1 and 0 \xe2\x89\xa4 N \xe2\x89\xa4 1000. The output is guaranteed to be less than 2<sup>31</sup>-1.</p>\n<br/>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b> [2, 4, 6, 8, 10]\r\n\r\n<b>Output:</b> 7\r\n\r\n<b>Explanation:</b>\r\nAll arithmetic subsequence slices are:\r\n[2,4,6]\r\n[4,6,8]\r\n[6,8,10]\r\n[2,4,6,8]\r\n[4,6,8,10]\r\n[2,4,6,8,10]\r\n[2,6,10]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You are given two <b>non-empty</b> linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n<p><b>Follow up:</b><br/>\r\nWhat if you cannot modify the input lists? In other words, reversing the lists is not allowed.\r\n</p>\n<p>\n<b>Example:</b>\n<pre>\r\n<b>Input:</b> (7 -&gt; 2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)\r\n<b>Output:</b> 7 -&gt; 8 -&gt; 0 -&gt; 7\r\n</pre>\n</p></p>\n</div>'




No Description


444 : sequence-reconstruction
442 : find-all-duplicates-in-an-array


No Description




b'<div class="question-description">\n<p><p>Given an array of integers, 1 \xe2\x89\xa4 a[i] \xe2\x89\xa4 <i>n</i> (<i>n</i> = size of array), some elements appear <b>twice</b> and others appear <b>once</b>.</p>\n<p>Find all the elements that appear <b>twice</b> in this array.</p>\n<p>Could you do it without extra space and in O(<i>n</i>) runtime?</p>\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n[4,3,2,7,8,2,3,1]\r\n\r\n<b>Output:</b>\r\n[2,3]\r\n</pre></p>\n</div>'


442 : find-all-duplicates-in-an-array
441 : arranging-coins


b'<div class="question-description">\n<p><p>Given an array of integers, 1 \xe2\x89\xa4 a[i] \xe2\x89\xa4 <i>n</i> (<i>n</i> = size of array), some elements appear <b>twice</b> and others appear <b>once</b>.</p>\n<p>Find all the elements that appear <b>twice</b> in this array.</p>\n<p>Could you do it without extra space and in O(<i>n</i>) runtime?</p>\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\n<b>Input:</b>\r\n[4,3,2,7,8,2,3,1]\r\n\r\n<b>Output:</b>\r\n[2,3]\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>You have a total of <i>n</i> coins that you want to form in a staircase shape, where every <i>k</i>-th row must have exactly <i>k</i> coins.</p>\n<p>Given <i>n</i>, find the total number of <b>full</b> staircase rows that can be formed.</p>\n<p><i>n</i> is a non-negative integer and fits within the range of a 32-bit signed integer.</p>\n<p><b>Example 1:</b>\n<pre>\r\nn = 5\r\n\r\nThe coins can form the following rows:\r\n\xc2\xa4\r\n\xc2\xa4 \xc2\xa4\r\n\xc2\xa4 \xc2\xa4\r\n\r\nBecause the 3rd row is incomplete, we return 2.\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nn = 8\r\n\r\nThe coins can form the following rows:\r\n\xc2\xa4\r\n\xc2\xa4 \xc2\xa4\r\n\xc2\xa4 \xc2\xa4 \xc2\xa4\r\n\xc2\xa4 \xc2\xa4\r\n\r\nBecause the 4th row is incomplete, we return 3.\r\n</pre>\n</p></p>\n</div>'


441 : arranging-coins
440 : k-th-smallest-in-lexicographical-order


b'<div class="question-description">\n<p><p>You have a total of <i>n</i> coins that you want to form in a staircase shape, where every <i>k</i>-th row must have exactly <i>k</i> coins.</p>\n<p>Given <i>n</i>, find the total number of <b>full</b> staircase rows that can be formed.</p>\n<p><i>n</i> is a non-negative integer and fits within the range of a 32-bit signed integer.</p>\n<p><b>Example 1:</b>\n<pre>\r\nn = 5\r\n\r\nThe coins can form the following rows:\r\n\xc2\xa4\r\n\xc2\xa4 \xc2\xa4\r\n\xc2\xa4 \xc2\xa4\r\n\r\nBecause the 3rd row is incomplete, we return 2.\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nn = 8\r\n\r\nThe coins can form the following rows:\r\n\xc2\xa4\r\n\xc2\xa4 \xc2\xa4\r\n\xc2\xa4 \xc2\xa4 \xc2\xa4\r\n\xc2\xa4 \xc2\xa4\r\n\r\nBecause the 4th row is incomplete, we return 3.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given integers <code>n</code> and <code>k</code>, find the lexicographically k-th smallest integer in the range from <code>1</code> to <code>n</code>.</p>\n<p>Note: 1 \xe2\x89\xa4 k \xe2\x89\xa4 n \xe2\x89\xa4 10<sup>9</sup>.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\nn: 13   k: 2\r\n\r\n<b>Output:</b>\r\n10\r\n\r\n<b>Explanation:</b>\r\nThe lexicographical order is [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10.\r\n</pre>\n</p>\n</p>\n</div>'


440 : k-th-smallest-in-lexicographical-order
439 : ternary-expression-parser


b'<div class="question-description">\n<p><p>Given integers <code>n</code> and <code>k</code>, find the lexicographically k-th smallest integer in the range from <code>1</code> to <code>n</code>.</p>\n<p>Note: 1 \xe2\x89\xa4 k \xe2\x89\xa4 n \xe2\x89\xa4 10<sup>9</sup>.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b>\r\nn: 13   k: 2\r\n\r\n<b>Output:</b>\r\n10\r\n\r\n<b>Explanation:</b>\r\nThe lexicographical order is [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10.\r\n</pre>\n</p>\n</p>\n</div>'




No Description


439 : ternary-expression-parser
438 : find-all-anagrams-in-a-string


No Description




b'<div class="question-description">\n<p><p>Given a string <b>s</b> and a <b>non-empty</b> string <b>p</b>, find all the start indices of <b>p</b>\'s anagrams in <b>s</b>.</p>\n<p>Strings consists of lowercase English letters only and the length of both strings <b>s</b> and <b>p</b> will not be larger than 20,100.</p>\n<p>The order of output does not matter.</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>Input:</b>\r\ns: "cbaebabacd" p: "abc"\r\n\r\n<b>Output:</b>\r\n[0, 6]\r\n\r\n<b>Explanation:</b>\r\nThe substring with start index = 0 is "cba", which is an anagram of "abc".\r\nThe substring with start index = 6 is "bac", which is an anagram of "abc".\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>Input:</b>\r\ns: "abab" p: "ab"\r\n\r\n<b>Output:</b>\r\n[0, 1, 2]\r\n\r\n<b>Explanation:</b>\r\nThe substring with start index = 0 is "ab", which is an anagram of "ab".\r\nThe substring with start index = 1 is "ba", which is an anagram of "ab".\r\nThe substring with start index = 2 is "ab", which is an anagram of "ab".\r\n</pre>\n</p></p>\n</div>'


438 : find-all-anagrams-in-a-string
437 : path-sum-iii


b'<div class="question-description">\n<p><p>Given a string <b>s</b> and a <b>non-empty</b> string <b>p</b>, find all the start indices of <b>p</b>\'s anagrams in <b>s</b>.</p>\n<p>Strings consists of lowercase English letters only and the length of both strings <b>s</b> and <b>p</b> will not be larger than 20,100.</p>\n<p>The order of output does not matter.</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>Input:</b>\r\ns: "cbaebabacd" p: "abc"\r\n\r\n<b>Output:</b>\r\n[0, 6]\r\n\r\n<b>Explanation:</b>\r\nThe substring with start index = 0 is "cba", which is an anagram of "abc".\r\nThe substring with start index = 6 is "bac", which is an anagram of "abc".\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>Input:</b>\r\ns: "abab" p: "ab"\r\n\r\n<b>Output:</b>\r\n[0, 1, 2]\r\n\r\n<b>Explanation:</b>\r\nThe substring with start index = 0 is "ab", which is an anagram of "ab".\r\nThe substring with start index = 1 is "ba", which is an anagram of "ab".\r\nThe substring with start index = 2 is "ab", which is an anagram of "ab".\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You are given a binary tree in which each node contains an integer value.</p>\n<p>Find the number of paths that sum to a given value.</p>\n<p>The path does not need to start or end at the root or a leaf, but it must go downwards\r\n(traveling only from parent nodes to child nodes).</p>\n<p>The tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.\r\n\r\n<p><b>Example:</b>\n<pre>\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    <b>5</b>   <b>-3</b>\r\n   <b>/</b> <b>\\</b>    <b>\\</b>\r\n  <b>3</b>   <b>2</b>   <b>11</b>\r\n / \\   <b>\\</b>\r\n3  -2   <b>1</b>\r\n\r\nReturn 3. The paths that sum to 8 are:\r\n\r\n1.  5 -&gt; 3\r\n2.  5 -&gt; 2 -&gt; 1\r\n3. -3 -&gt; 11\r\n</pre>\n</p></p>\n</p></div>'


437 : path-sum-iii
436 : find-right-interval


b'<div class="question-description">\n<p><p>You are given a binary tree in which each node contains an integer value.</p>\n<p>Find the number of paths that sum to a given value.</p>\n<p>The path does not need to start or end at the root or a leaf, but it must go downwards\r\n(traveling only from parent nodes to child nodes).</p>\n<p>The tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.\r\n\r\n<p><b>Example:</b>\n<pre>\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    <b>5</b>   <b>-3</b>\r\n   <b>/</b> <b>\\</b>    <b>\\</b>\r\n  <b>3</b>   <b>2</b>   <b>11</b>\r\n / \\   <b>\\</b>\r\n3  -2   <b>1</b>\r\n\r\nReturn 3. The paths that sum to 8 are:\r\n\r\n1.  5 -&gt; 3\r\n2.  5 -&gt; 2 -&gt; 1\r\n3. -3 -&gt; 11\r\n</pre>\n</p></p>\n</p></div>'




b'<div class="question-description">\n<p><p>\r\nGiven a set of intervals, for each of the interval i, check if there exists an interval j whose start point is bigger than or equal to the end point of the interval i, which can be called that j is on the "right" of i.\r\n</p>\n<p>\r\nFor any interval i, you need to store the minimum interval j\'s index, which means that the interval j has the minimum start point to build the "right" relationship for interval i. If the interval j doesn\'t exist, store -1 for the interval i. Finally, you need output the stored value of each interval as an array.\r\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume the interval\'s end point is always bigger than its start point.</li>\n<li>You may assume none of these intervals have the same start point.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [ [1,2] ]\r\n\r\n<b>Output:</b> [-1]\r\n\r\n<b>Explanation:</b> There is only one interval in the collection, so it outputs -1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [ [3,4], [2,3], [1,2] ]\r\n\r\n<b>Output:</b> [-1, 0, 1]\r\n\r\n<b>Explanation:</b> There is no satisfied "right" interval for [3,4].\r\nFor [2,3], the interval [3,4] has minimum-"right" start point;\r\nFor [1,2], the interval [2,3] has minimum-"right" start point.\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> [ [1,4], [2,3], [3,4] ]\r\n\r\n<b>Output:</b> [-1, 2, -1]\r\n\r\n<b>Explanation:</b> There is no satisfied "right" interval for [1,4] and [3,4].\r\nFor [2,3], the interval [3,4] has minimum-"right" start point.\r\n</pre>\n</p></p>\n</div>'


436 : find-right-interval
435 : non-overlapping-intervals


b'<div class="question-description">\n<p><p>\r\nGiven a set of intervals, for each of the interval i, check if there exists an interval j whose start point is bigger than or equal to the end point of the interval i, which can be called that j is on the "right" of i.\r\n</p>\n<p>\r\nFor any interval i, you need to store the minimum interval j\'s index, which means that the interval j has the minimum start point to build the "right" relationship for interval i. If the interval j doesn\'t exist, store -1 for the interval i. Finally, you need output the stored value of each interval as an array.\r\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume the interval\'s end point is always bigger than its start point.</li>\n<li>You may assume none of these intervals have the same start point.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [ [1,2] ]\r\n\r\n<b>Output:</b> [-1]\r\n\r\n<b>Explanation:</b> There is only one interval in the collection, so it outputs -1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [ [3,4], [2,3], [1,2] ]\r\n\r\n<b>Output:</b> [-1, 0, 1]\r\n\r\n<b>Explanation:</b> There is no satisfied "right" interval for [3,4].\r\nFor [2,3], the interval [3,4] has minimum-"right" start point;\r\nFor [1,2], the interval [2,3] has minimum-"right" start point.\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> [ [1,4], [2,3], [3,4] ]\r\n\r\n<b>Output:</b> [-1, 2, -1]\r\n\r\n<b>Explanation:</b> There is no satisfied "right" interval for [1,4] and [3,4].\r\nFor [2,3], the interval [3,4] has minimum-"right" start point.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.\r\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume the interval\'s end point is always bigger than its start point.</li>\n<li>Intervals like [1,2] and [2,3] have borders "touching" but they don\'t overlap each other.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [ [1,2], [2,3], [3,4], [1,3] ]\r\n\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> [1,3] can be removed and the rest of intervals are non-overlapping.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [ [1,2], [1,2], [1,2] ]\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> You need to remove two [1,2] to make the rest of intervals non-overlapping.\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> [ [1,2], [2,3] ]\r\n\r\n<b>Output:</b> 0\r\n\r\n<b>Explanation:</b> You don\'t need to remove any of the intervals since they\'re already non-overlapping.\r\n</pre>\n</p></p>\n</div>'


435 : non-overlapping-intervals
434 : number-of-segments-in-a-string


b'<div class="question-description">\n<p><p>\r\nGiven a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.\r\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume the interval\'s end point is always bigger than its start point.</li>\n<li>Intervals like [1,2] and [2,3] have borders "touching" but they don\'t overlap each other.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [ [1,2], [2,3], [3,4], [1,3] ]\r\n\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> [1,3] can be removed and the rest of intervals are non-overlapping.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [ [1,2], [1,2], [1,2] ]\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> You need to remove two [1,2] to make the rest of intervals non-overlapping.\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> [ [1,2], [2,3] ]\r\n\r\n<b>Output:</b> 0\r\n\r\n<b>Explanation:</b> You don\'t need to remove any of the intervals since they\'re already non-overlapping.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Count the number of segments in a string, where a segment is defined to be a contiguous sequence of non-space characters.</p>\n<p>Please note that the string does not contain any <b>non-printable</b> characters.</p>\n<p><b>Example:</b></p>\n<pre>\r\n<b>Input:</b> "Hello, my name is John"\r\n<b>Output:</b> 5\r\n</pre>\n</p></div>'


434 : number-of-segments-in-a-string
432 : all-oone-data-structure


b'<div class="question-description">\n<p><p>Count the number of segments in a string, where a segment is defined to be a contiguous sequence of non-space characters.</p>\n<p>Please note that the string does not contain any <b>non-printable</b> characters.</p>\n<p><b>Example:</b></p>\n<pre>\r\n<b>Input:</b> "Hello, my name is John"\r\n<b>Output:</b> 5\r\n</pre>\n</p></div>'




b'<div class="question-description">\n<p><p>Implement a data structure supporting the following operations:</p>\n<p>\n<ol>\n<li>Inc(Key) - Inserts a new key <key> with value 1. Or increments an existing key by 1. Key is guaranteed to be a <b>non-empty</b> string.</key></li>\n<li>Dec(Key) - If Key\'s value is 1, remove it from the data structure. Otherwise decrements an existing key by 1. If the key does not exist, this function does nothing. Key is guaranteed to be a <b>non-empty</b> string.</li>\n<li>GetMaxKey() - Returns one of the keys with maximal value. If no element exists, return an empty string <code>""</code>.</li>\n<li>GetMinKey() - Returns one of the keys with minimal value. If no element exists, return an empty string <code>""</code>.</li>\n</ol>\n</p>\n<p>\r\nChallenge: Perform all these in O(1) time complexity.\r\n</p></p>\n</div>'


432 : all-oone-data-structure
425 : word-squares


b'<div class="question-description">\n<p><p>Implement a data structure supporting the following operations:</p>\n<p>\n<ol>\n<li>Inc(Key) - Inserts a new key <key> with value 1. Or increments an existing key by 1. Key is guaranteed to be a <b>non-empty</b> string.</key></li>\n<li>Dec(Key) - If Key\'s value is 1, remove it from the data structure. Otherwise decrements an existing key by 1. If the key does not exist, this function does nothing. Key is guaranteed to be a <b>non-empty</b> string.</li>\n<li>GetMaxKey() - Returns one of the keys with maximal value. If no element exists, return an empty string <code>""</code>.</li>\n<li>GetMinKey() - Returns one of the keys with minimal value. If no element exists, return an empty string <code>""</code>.</li>\n</ol>\n</p>\n<p>\r\nChallenge: Perform all these in O(1) time complexity.\r\n</p></p>\n</div>'




No Description


425 : word-squares
424 : longest-repeating-character-replacement


No Description




b'<div class="question-description">\n<p><p>Given a string that consists of only uppercase English letters, you can replace any letter in the string with another letter at most <i>k</i> times. Find the length of a longest substring containing all repeating letters you can get after performing the above operations.</p>\n<p><b>Note:</b><br/>\r\nBoth the string\'s length and <i>k</i> will not exceed 10<sup>4</sup>.\r\n</p>\n<p>\n<b>Example 1:</b>\n<pre>\r\n<b>Input:</b>\r\ns = "ABAB", k = 2\r\n\r\n<b>Output:</b>\r\n4\r\n\r\n<b>Explanation:</b>\r\nReplace the two \'A\'s with two \'B\'s or vice versa.\r\n</pre>\n</p>\n<p>\n<b>Example 2:</b>\n<pre>\r\n<b>Input:</b>\r\ns = "AABABBA", k = 1\r\n\r\n<b>Output:</b>\r\n4\r\n\r\n<b>Explanation:</b>\r\nReplace the one \'A\' in the middle with \'B\' and form "AABBBBA".\r\nThe substring "BBBB" has the longest repeating letters, which is 4.\r\n</pre>\n</p></p>\n</div>'


424 : longest-repeating-character-replacement
423 : reconstruct-original-digits-from-english


b'<div class="question-description">\n<p><p>Given a string that consists of only uppercase English letters, you can replace any letter in the string with another letter at most <i>k</i> times. Find the length of a longest substring containing all repeating letters you can get after performing the above operations.</p>\n<p><b>Note:</b><br/>\r\nBoth the string\'s length and <i>k</i> will not exceed 10<sup>4</sup>.\r\n</p>\n<p>\n<b>Example 1:</b>\n<pre>\r\n<b>Input:</b>\r\ns = "ABAB", k = 2\r\n\r\n<b>Output:</b>\r\n4\r\n\r\n<b>Explanation:</b>\r\nReplace the two \'A\'s with two \'B\'s or vice versa.\r\n</pre>\n</p>\n<p>\n<b>Example 2:</b>\n<pre>\r\n<b>Input:</b>\r\ns = "AABABBA", k = 1\r\n\r\n<b>Output:</b>\r\n4\r\n\r\n<b>Explanation:</b>\r\nReplace the one \'A\' in the middle with \'B\' and form "AABBBBA".\r\nThe substring "BBBB" has the longest repeating letters, which is 4.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a <b>non-empty</b> string containing an out-of-order English representation of digits <code>0-9</code>, output the digits in ascending order.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Input contains only lowercase English letters.</li>\n<li>Input is guaranteed to be valid and can be transformed to its original digits. That means invalid inputs such as "abc" or "zerone" are not permitted.</li>\n<li>Input length is less than 50,000.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\nInput: "owoztneoer"\r\n\r\nOutput: "012"\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\nInput: "fviefuro"\r\n\r\nOutput: "45"\r\n</pre>\n</p></p>\n</div>'


423 : reconstruct-original-digits-from-english
422 : valid-word-square


b'<div class="question-description">\n<p><p>Given a <b>non-empty</b> string containing an out-of-order English representation of digits <code>0-9</code>, output the digits in ascending order.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Input contains only lowercase English letters.</li>\n<li>Input is guaranteed to be valid and can be transformed to its original digits. That means invalid inputs such as "abc" or "zerone" are not permitted.</li>\n<li>Input length is less than 50,000.</li>\n</ol>\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\nInput: "owoztneoer"\r\n\r\nOutput: "012"\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\nInput: "fviefuro"\r\n\r\nOutput: "45"\r\n</pre>\n</p></p>\n</div>'




No Description


422 : valid-word-square
421 : maximum-xor-of-two-numbers-in-an-array


No Description




b'<div class="question-description">\n<p><p>Given a <b>non-empty</b> array of numbers, a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, \xe2\x80\xa6 , a<sub>n-1</sub>, where 0 \xe2\x89\xa4 a<sub>i</sub> &lt; 2<sup>31</sup>.</p>\n<p>Find the maximum result of a<sub>i</sub> XOR a<sub>j</sub>, where 0 \xe2\x89\xa4 <i>i</i>, <i>j</i> &lt; <i>n</i>.</p>\n<p>Could you do this in O(<i>n</i>) runtime?</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b> [3, 10, 5, 25, 2, 8]\r\n\r\n<b>Output:</b> 28\r\n\r\n<b>Explanation:</b> The maximum result is <b>5</b> ^ <b>25</b> = 28.\r\n</pre>\n</p></p>\n</div>'


421 : maximum-xor-of-two-numbers-in-an-array
420 : strong-password-checker


b'<div class="question-description">\n<p><p>Given a <b>non-empty</b> array of numbers, a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, \xe2\x80\xa6 , a<sub>n-1</sub>, where 0 \xe2\x89\xa4 a<sub>i</sub> &lt; 2<sup>31</sup>.</p>\n<p>Find the maximum result of a<sub>i</sub> XOR a<sub>j</sub>, where 0 \xe2\x89\xa4 <i>i</i>, <i>j</i> &lt; <i>n</i>.</p>\n<p>Could you do this in O(<i>n</i>) runtime?</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b> [3, 10, 5, 25, 2, 8]\r\n\r\n<b>Output:</b> 28\r\n\r\n<b>Explanation:</b> The maximum result is <b>5</b> ^ <b>25</b> = 28.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>A password is considered strong if below conditions are all met:</p>\n<ol>\n<li> It has at least 6 characters and at most 20 characters. </li>\n<li> It must contain at least one lowercase letter, at least one uppercase letter, and at least one digit. </li>\n<li> It must NOT contain three repeating characters in a row ("...aaa..." is weak, but "...aa...a..." is strong, assuming other conditions are met). </li>\n</ol>\n<p>Write a function strongPasswordChecker(s), that takes a string s as input, and return the <b>MINIMUM</b> change required to make s a strong password. If s is already strong, return 0.</p>\n<p>Insertion, deletion or replace of any one character are all considered as one change.</p></p>\n</div>'


420 : strong-password-checker
419 : battleships-in-a-board


b'<div class="question-description">\n<p><p>A password is considered strong if below conditions are all met:</p>\n<ol>\n<li> It has at least 6 characters and at most 20 characters. </li>\n<li> It must contain at least one lowercase letter, at least one uppercase letter, and at least one digit. </li>\n<li> It must NOT contain three repeating characters in a row ("...aaa..." is weak, but "...aa...a..." is strong, assuming other conditions are met). </li>\n</ol>\n<p>Write a function strongPasswordChecker(s), that takes a string s as input, and return the <b>MINIMUM</b> change required to make s a strong password. If s is already strong, return 0.</p>\n<p>Insertion, deletion or replace of any one character are all considered as one change.</p></p>\n</div>'




b'<div class="question-description">\n<p>Given an 2D board, count how many battleships are in it. The battleships are represented with <code>\'X\'</code>s, empty slots are represented with <code>\'.\'</code>s. You may assume the following rules:\r\n\r\n<ul>\n<li>You receive a valid board, made of only battleships or empty slots.</li>\n<li>Battleships can only be placed horizontally or vertically. In other words, they can only be made of the shape <code>1xN</code> (1 row, N columns) or <code>Nx1</code> (N rows, 1 column), where N can be of any size.</li>\n<li>At least one horizontal or vertical cell separates between two battleships - there are no adjacent battleships.</li>\n</ul>\n<p><b>Example:</b><br/>\n<pre>X..X\r\n...X\r\n...X\r\n</pre>\r\nIn the above board there are 2 battleships.\r\n\r\n<p><b>Invalid Example:</b><br/>\n<pre>...X\r\nXXXX\r\n...X\r\n</pre>\r\nThis is an invalid board that you will not receive - as battleships will always have a cell separating between them.\r\n<p></p>\n<p><b>Follow up:</b><br/>Could you do it in <b>one-pass</b>, using only <b>O(1) extra memory</b> and <b>without modifying</b> the value of the board?</p></p>\n</p></p></div>'


419 : battleships-in-a-board
418 : sentence-screen-fitting


b'<div class="question-description">\n<p>Given an 2D board, count how many battleships are in it. The battleships are represented with <code>\'X\'</code>s, empty slots are represented with <code>\'.\'</code>s. You may assume the following rules:\r\n\r\n<ul>\n<li>You receive a valid board, made of only battleships or empty slots.</li>\n<li>Battleships can only be placed horizontally or vertically. In other words, they can only be made of the shape <code>1xN</code> (1 row, N columns) or <code>Nx1</code> (N rows, 1 column), where N can be of any size.</li>\n<li>At least one horizontal or vertical cell separates between two battleships - there are no adjacent battleships.</li>\n</ul>\n<p><b>Example:</b><br/>\n<pre>X..X\r\n...X\r\n...X\r\n</pre>\r\nIn the above board there are 2 battleships.\r\n\r\n<p><b>Invalid Example:</b><br/>\n<pre>...X\r\nXXXX\r\n...X\r\n</pre>\r\nThis is an invalid board that you will not receive - as battleships will always have a cell separating between them.\r\n<p></p>\n<p><b>Follow up:</b><br/>Could you do it in <b>one-pass</b>, using only <b>O(1) extra memory</b> and <b>without modifying</b> the value of the board?</p></p>\n</p></p></div>'




No Description


418 : sentence-screen-fitting
417 : pacific-atlantic-water-flow


No Description




b'<div class="question-description">\n<p><p>Given an <code>m x n</code> matrix of non-negative integers representing the height of each unit cell in a continent, the "Pacific ocean" touches the left and top edges of the matrix and the "Atlantic ocean" touches the right and bottom edges.</p>\n<p>Water can only flow in four directions (up, down, left, or right) from a cell to another one with height equal or lower.</p>\n<p>Find the list of grid coordinates where water can flow to both the Pacific and Atlantic ocean.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The order of returned grid coordinates does not matter.</li>\n<li>Both <i>m</i> and <i>n</i> are less than 150.</li>\n</ol>\n</p>\n<p><b>Example:</b>\n<pre>\r\nGiven the following 5x5 matrix:\r\n\r\n  Pacific ~   ~   ~   ~   ~ \r\n       ~  1   2   2   3  (5) *\r\n       ~  3   2   3  (4) (4) *\r\n       ~  2   4  (5)  3   1  *\r\n       ~ (6) (7)  1   4   5  *\r\n       ~ (5)  1   1   2   4  *\r\n          *   *   *   *   * Atlantic\r\n\r\nReturn:\r\n\r\n[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (positions with parentheses in above matrix).\r\n</pre>\n</p></p>\n</div>'


417 : pacific-atlantic-water-flow
416 : partition-equal-subset-sum


b'<div class="question-description">\n<p><p>Given an <code>m x n</code> matrix of non-negative integers representing the height of each unit cell in a continent, the "Pacific ocean" touches the left and top edges of the matrix and the "Atlantic ocean" touches the right and bottom edges.</p>\n<p>Water can only flow in four directions (up, down, left, or right) from a cell to another one with height equal or lower.</p>\n<p>Find the list of grid coordinates where water can flow to both the Pacific and Atlantic ocean.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The order of returned grid coordinates does not matter.</li>\n<li>Both <i>m</i> and <i>n</i> are less than 150.</li>\n</ol>\n</p>\n<p><b>Example:</b>\n<pre>\r\nGiven the following 5x5 matrix:\r\n\r\n  Pacific ~   ~   ~   ~   ~ \r\n       ~  1   2   2   3  (5) *\r\n       ~  3   2   3  (4) (4) *\r\n       ~  2   4  (5)  3   1  *\r\n       ~ (6) (7)  1   4   5  *\r\n       ~ (5)  1   1   2   4  *\r\n          *   *   *   *   * Atlantic\r\n\r\nReturn:\r\n\r\n[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (positions with parentheses in above matrix).\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a <b>non-empty</b> array containing <b>only positive integers</b>, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.\r\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Each of the array element will not exceed 100.</li>\n<li>The array size will not exceed 200.</li>\n</ol>\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nInput: [1, 5, 11, 5]\r\n\r\nOutput: true\r\n\r\nExplanation: The array can be partitioned as [1, 5, 5] and [11].\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nInput: [1, 2, 3, 5]\r\n\r\nOutput: false\r\n\r\nExplanation: The array cannot be partitioned into equal sum subsets.\r\n</pre>\n</p></p>\n</div>'


416 : partition-equal-subset-sum
415 : add-strings


b'<div class="question-description">\n<p><p>Given a <b>non-empty</b> array containing <b>only positive integers</b>, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.\r\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>Each of the array element will not exceed 100.</li>\n<li>The array size will not exceed 200.</li>\n</ol>\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nInput: [1, 5, 11, 5]\r\n\r\nOutput: true\r\n\r\nExplanation: The array can be partitioned as [1, 5, 5] and [11].\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nInput: [1, 2, 3, 5]\r\n\r\nOutput: false\r\n\r\nExplanation: The array cannot be partitioned into equal sum subsets.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as string, return the sum of <code>num1</code> and <code>num2</code>.</p>\n<p><b>Note:</b>\n<ol>\n<li>The length of both <code>num1</code> and <code>num2</code> is &lt; 5100.</li>\n<li>Both <code>num1</code> and <code>num2</code> contains only digits <code>0-9</code>.</li>\n<li>Both <code>num1</code> and <code>num2</code> does not contain any leading zero.</li>\n<li>You <b>must not use any built-in BigInteger library</b> or <b>convert the inputs to integer</b> directly.</li>\n</ol>\n</p></p>\n</div>'


415 : add-strings
414 : third-maximum-number


b'<div class="question-description">\n<p><p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as string, return the sum of <code>num1</code> and <code>num2</code>.</p>\n<p><b>Note:</b>\n<ol>\n<li>The length of both <code>num1</code> and <code>num2</code> is &lt; 5100.</li>\n<li>Both <code>num1</code> and <code>num2</code> contains only digits <code>0-9</code>.</li>\n<li>Both <code>num1</code> and <code>num2</code> does not contain any leading zero.</li>\n<li>You <b>must not use any built-in BigInteger library</b> or <b>convert the inputs to integer</b> directly.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a <b>non-empty</b> array of integers, return the <b>third</b> maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [3, 2, 1]\r\n\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> The third maximum is 1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1, 2]\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> The third maximum does not exist, so the maximum (2) is returned instead.\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> [2, 2, 3, 1]\r\n\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> Note that the third maximum here means the third maximum distinct number.\r\nBoth numbers with value 2 are both considered as second maximum.\r\n</pre>\n</p></p>\n</div>'


414 : third-maximum-number
413 : arithmetic-slices


b'<div class="question-description">\n<p><p>Given a <b>non-empty</b> array of integers, return the <b>third</b> maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n<b>Input:</b> [3, 2, 1]\r\n\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> The third maximum is 1.\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n<b>Input:</b> [1, 2]\r\n\r\n<b>Output:</b> 2\r\n\r\n<b>Explanation:</b> The third maximum does not exist, so the maximum (2) is returned instead.\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\n<b>Input:</b> [2, 2, 3, 1]\r\n\r\n<b>Output:</b> 1\r\n\r\n<b>Explanation:</b> Note that the third maximum here means the third maximum distinct number.\r\nBoth numbers with value 2 are both considered as second maximum.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>A sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.</p>\n<p>For example, these are arithmetic sequence:</p>\n<pre>1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9</pre>\n<p>The following sequence is not arithmetic.</p> <pre>1, 1, 2, 5, 7</pre>\n<br/>\n<p>A zero-indexed array A consisting of N numbers is given. A slice of that array is any pair of integers (P, Q) such that 0 &lt;= P &lt; Q &lt; N.</p>\n<p>A slice (P, Q) of array A is called arithmetic if the sequence:<br/>\r\n    A[P], A[p + 1], ..., A[Q - 1], A[Q] is arithmetic. In particular, this means that P + 1 &lt; Q.</p>\n<p>The function should return the number of arithmetic slices in the array A. </p>\n<br/>\n<p><b>Example:</b>\n<pre>\r\nA = [1, 2, 3, 4]\r\n\r\nreturn: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.\r\n</pre></p>\n</p></div>'


413 : arithmetic-slices
412 : fizz-buzz


b'<div class="question-description">\n<p><p>A sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.</p>\n<p>For example, these are arithmetic sequence:</p>\n<pre>1, 3, 5, 7, 9\r\n7, 7, 7, 7\r\n3, -1, -5, -9</pre>\n<p>The following sequence is not arithmetic.</p> <pre>1, 1, 2, 5, 7</pre>\n<br/>\n<p>A zero-indexed array A consisting of N numbers is given. A slice of that array is any pair of integers (P, Q) such that 0 &lt;= P &lt; Q &lt; N.</p>\n<p>A slice (P, Q) of array A is called arithmetic if the sequence:<br/>\r\n    A[P], A[p + 1], ..., A[Q - 1], A[Q] is arithmetic. In particular, this means that P + 1 &lt; Q.</p>\n<p>The function should return the number of arithmetic slices in the array A. </p>\n<br/>\n<p><b>Example:</b>\n<pre>\r\nA = [1, 2, 3, 4]\r\n\r\nreturn: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.\r\n</pre></p>\n</p></div>'




b'<div class="question-description">\n<p><p>Write a program that outputs the string representation of numbers from 1 to <i>n</i>.</p>\n<p>But for multiples of three it should output \xe2\x80\x9cFizz\xe2\x80\x9d instead of the number and for the multiples of five output \xe2\x80\x9cBuzz\xe2\x80\x9d. For numbers which are multiples of both three and five output \xe2\x80\x9cFizzBuzz\xe2\x80\x9d.</p>\n<p><b>Example:</b>\n<pre>\r\nn = 15,\r\n\r\nReturn:\r\n[\r\n    "1",\r\n    "2",\r\n    "Fizz",\r\n    "4",\r\n    "Buzz",\r\n    "Fizz",\r\n    "7",\r\n    "8",\r\n    "Fizz",\r\n    "Buzz",\r\n    "11",\r\n    "Fizz",\r\n    "13",\r\n    "14",\r\n    "FizzBuzz"\r\n]\r\n</pre>\n</p></p>\n</div>'


412 : fizz-buzz
411 : minimum-unique-word-abbreviation


b'<div class="question-description">\n<p><p>Write a program that outputs the string representation of numbers from 1 to <i>n</i>.</p>\n<p>But for multiples of three it should output \xe2\x80\x9cFizz\xe2\x80\x9d instead of the number and for the multiples of five output \xe2\x80\x9cBuzz\xe2\x80\x9d. For numbers which are multiples of both three and five output \xe2\x80\x9cFizzBuzz\xe2\x80\x9d.</p>\n<p><b>Example:</b>\n<pre>\r\nn = 15,\r\n\r\nReturn:\r\n[\r\n    "1",\r\n    "2",\r\n    "Fizz",\r\n    "4",\r\n    "Buzz",\r\n    "Fizz",\r\n    "7",\r\n    "8",\r\n    "Fizz",\r\n    "Buzz",\r\n    "11",\r\n    "Fizz",\r\n    "13",\r\n    "14",\r\n    "FizzBuzz"\r\n]\r\n</pre>\n</p></p>\n</div>'




No Description


411 : minimum-unique-word-abbreviation
410 : split-array-largest-sum


No Description




b'<div class="question-description">\n<p><p>Given an array which consists of non-negative integers and an integer <i>m</i>, you can split the array into <i>m</i> non-empty continuous subarrays. Write an algorithm to minimize the largest sum among these <i>m</i> subarrays.\r\n</p>\n<p><b>Note:</b><br/>\r\nIf <i>n</i> is the length of array, assume the following constraints are satisfied:\r\n<ul>\n<li>1 \xe2\x89\xa4 <i>n</i> \xe2\x89\xa4 1000</li>\n<li>1 \xe2\x89\xa4 <i>m</i> \xe2\x89\xa4 min(50, <i>n</i>)</li>\n</ul>\n</p>\n<p><b>Examples: </b>\n<pre>\r\nInput:\r\n<b>nums</b> = [7,2,5,10,8]\r\n<b>m</b> = 2\r\n\r\nOutput:\r\n18\r\n\r\nExplanation:\r\nThere are four ways to split <b>nums</b> into two subarrays.\r\nThe best way is to split it into <b>[7,2,5]</b> and <b>[10,8]</b>,\r\nwhere the largest sum among the two subarrays is only 18.\r\n</pre>\n</p></p>\n</div>'


410 : split-array-largest-sum
409 : longest-palindrome


b'<div class="question-description">\n<p><p>Given an array which consists of non-negative integers and an integer <i>m</i>, you can split the array into <i>m</i> non-empty continuous subarrays. Write an algorithm to minimize the largest sum among these <i>m</i> subarrays.\r\n</p>\n<p><b>Note:</b><br/>\r\nIf <i>n</i> is the length of array, assume the following constraints are satisfied:\r\n<ul>\n<li>1 \xe2\x89\xa4 <i>n</i> \xe2\x89\xa4 1000</li>\n<li>1 \xe2\x89\xa4 <i>m</i> \xe2\x89\xa4 min(50, <i>n</i>)</li>\n</ul>\n</p>\n<p><b>Examples: </b>\n<pre>\r\nInput:\r\n<b>nums</b> = [7,2,5,10,8]\r\n<b>m</b> = 2\r\n\r\nOutput:\r\n18\r\n\r\nExplanation:\r\nThere are four ways to split <b>nums</b> into two subarrays.\r\nThe best way is to split it into <b>[7,2,5]</b> and <b>[10,8]</b>,\r\nwhere the largest sum among the two subarrays is only 18.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.</p>\n<p>This is case sensitive, for example <code>"Aa"</code> is not considered a palindrome here.</p>\n<p><b>Note:</b><br/>\r\nAssume the length of given string will not exceed 1,010.\r\n</p>\n<p><b>Example: </b>\n<pre>\r\nInput:\r\n"abccccdd"\r\n\r\nOutput:\r\n7\r\n\r\nExplanation:\r\nOne longest palindrome that can be built is "dccaccd", whose length is 7.\r\n</pre>\n</p></p>\n</div>'


409 : longest-palindrome
408 : valid-word-abbreviation


b'<div class="question-description">\n<p><p>Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.</p>\n<p>This is case sensitive, for example <code>"Aa"</code> is not considered a palindrome here.</p>\n<p><b>Note:</b><br/>\r\nAssume the length of given string will not exceed 1,010.\r\n</p>\n<p><b>Example: </b>\n<pre>\r\nInput:\r\n"abccccdd"\r\n\r\nOutput:\r\n7\r\n\r\nExplanation:\r\nOne longest palindrome that can be built is "dccaccd", whose length is 7.\r\n</pre>\n</p></p>\n</div>'




No Description


408 : valid-word-abbreviation
407 : trapping-rain-water-ii


No Description




b'<div class="question-description">\n<p><p>Given an <code>m x n</code> matrix of positive integers representing the height of each unit cell in a 2D elevation map, compute the volume of water it is able to trap after raining.\r\n</p>\n<p><b>Note:</b><br/>\r\nBoth <i>m</i> and <i>n</i> are less than 110. The height of each unit cell is greater than 0 and is less than 20,000.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\nGiven the following 3x6 height map:\r\n[\r\n  [1,4,3,1,3,2],\r\n  [3,2,1,3,2,4],\r\n  [2,3,3,2,3,1]\r\n]\r\n\r\nReturn 4.\r\n</pre>\n</p>\n<p>\n<img src="https://leetcode.com/static/images/problemset/rainwater_empty.png"><br/>\r\nThe above image represents the elevation map <code>[[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]</code> before the rain.\r\n</img></p>\n<p>\n<img src="https://leetcode.com/static/images/problemset/rainwater_fill.png"/><br/>\r\nAfter the rain, water are trapped between the blocks. The total volume of water trapped is 4.\r\n</p></p>\n</div>'


407 : trapping-rain-water-ii
406 : queue-reconstruction-by-height


b'<div class="question-description">\n<p><p>Given an <code>m x n</code> matrix of positive integers representing the height of each unit cell in a 2D elevation map, compute the volume of water it is able to trap after raining.\r\n</p>\n<p><b>Note:</b><br/>\r\nBoth <i>m</i> and <i>n</i> are less than 110. The height of each unit cell is greater than 0 and is less than 20,000.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\nGiven the following 3x6 height map:\r\n[\r\n  [1,4,3,1,3,2],\r\n  [3,2,1,3,2,4],\r\n  [2,3,3,2,3,1]\r\n]\r\n\r\nReturn 4.\r\n</pre>\n</p>\n<p>\n<img src="https://leetcode.com/static/images/problemset/rainwater_empty.png"><br/>\r\nThe above image represents the elevation map <code>[[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]</code> before the rain.\r\n</img></p>\n<p>\n<img src="https://leetcode.com/static/images/problemset/rainwater_fill.png"/><br/>\r\nAfter the rain, water are trapped between the blocks. The total volume of water trapped is 4.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers <code>(h, k)</code>, where <code>h</code> is the height of the person and <code>k</code> is the number of people in front of this person who have a height greater than or equal to <code>h</code>. Write an algorithm to reconstruct the queue.\r\n</p>\n<p><b>Note:</b><br/>\r\nThe number of people is less than 1,100.\r\n</p>\n<p><b>Example</b>\n<pre>\r\nInput:\r\n[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\r\n\r\nOutput:\r\n[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]\r\n</pre>\n</p></p>\n</div>'


406 : queue-reconstruction-by-height
405 : convert-a-number-to-hexadecimal


b'<div class="question-description">\n<p><p>Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers <code>(h, k)</code>, where <code>h</code> is the height of the person and <code>k</code> is the number of people in front of this person who have a height greater than or equal to <code>h</code>. Write an algorithm to reconstruct the queue.\r\n</p>\n<p><b>Note:</b><br/>\r\nThe number of people is less than 1,100.\r\n</p>\n<p><b>Example</b>\n<pre>\r\nInput:\r\n[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\r\n\r\nOutput:\r\n[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an integer, write an algorithm to convert it to hexadecimal. For negative integer, <a href="https://en.wikipedia.org/wiki/Two%27s_complement" target="_blank">two\xe2\x80\x99s complement</a> method is used.\r\n</p>\n<p><b>Note:</b>\n<ol>\n<li>All letters in hexadecimal (<code>a-f</code>) must be in lowercase.</li>\n<li>The hexadecimal string must not contain extra leading <code>0</code>s. If the number is zero, it is represented by a single zero character <code>\'0\'</code>; otherwise, the first character in the hexadecimal string will not be the zero character.</li>\n<li>The given number is guaranteed to fit within the range of a 32-bit signed integer.</li>\n<li>You <b>must not use <i>any</i> method provided by the library</b> which converts/formats the number to hex directly.</li>\n</ol>\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nInput:\r\n26\r\n\r\nOutput:\r\n"1a"\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nInput:\r\n-1\r\n\r\nOutput:\r\n"ffffffff"\r\n</pre>\n</p></p>\n</div>'


405 : convert-a-number-to-hexadecimal
404 : sum-of-left-leaves


b'<div class="question-description">\n<p><p>\r\nGiven an integer, write an algorithm to convert it to hexadecimal. For negative integer, <a href="https://en.wikipedia.org/wiki/Two%27s_complement" target="_blank">two\xe2\x80\x99s complement</a> method is used.\r\n</p>\n<p><b>Note:</b>\n<ol>\n<li>All letters in hexadecimal (<code>a-f</code>) must be in lowercase.</li>\n<li>The hexadecimal string must not contain extra leading <code>0</code>s. If the number is zero, it is represented by a single zero character <code>\'0\'</code>; otherwise, the first character in the hexadecimal string will not be the zero character.</li>\n<li>The given number is guaranteed to fit within the range of a 32-bit signed integer.</li>\n<li>You <b>must not use <i>any</i> method provided by the library</b> which converts/formats the number to hex directly.</li>\n</ol>\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nInput:\r\n26\r\n\r\nOutput:\r\n"1a"\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nInput:\r\n-1\r\n\r\nOutput:\r\n"ffffffff"\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Find the sum of all left leaves in a given binary tree.</p>\n<p><b>Example:</b>\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\nThere are two left leaves in the binary tree, with values <b>9</b> and <b>15</b> respectively. Return <b>24</b>.\r\n</pre>\n</p></p>\n</div>'


404 : sum-of-left-leaves
403 : frog-jump


b'<div class="question-description">\n<p><p>A frog is crossing a river. The river is divided into x units and at each unit there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.</p>\n<p>Given a list of stones\' positions (in units) in sorted ascending order, determine if the frog is able to cross the river by landing on the last stone. Initially, the frog is on the first stone and assume the first jump must be 1 unit.\r\n</p>\n<p>If the frog\'s last jump was <i>k</i> units, then its next jump must be either <i>k</i> - 1, <i>k</i>, or <i>k</i> + 1 units. Note that the frog can only jump in the forward direction.</p>\n<p><b>Note:</b>\n<ul>\n<li>The number of stones is \xe2\x89\xa5 2 and is &lt; 1,100.</li>\n<li>Each stone\'s position will be a non-negative integer &lt; 2<sup>31</sup>.</li>\n<li>The first stone\'s position is always 0.</li>\n</ul>\n</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>[0,1,3,5,6,8,12,17]</b>\r\n\r\nThere are a total of 8 stones.\r\nThe first stone at the 0th unit, second stone at the 1st unit,\r\nthird stone at the 3rd unit, and so on...\r\nThe last stone at the 17th unit.\r\n\r\n<b>Return true</b>. The frog can jump to the last stone by jumping \r\n1 unit to the 2nd stone, then 2 units to the 3rd stone, then \r\n2 units to the 4th stone, then 3 units to the 6th stone, \r\n4 units to the 7th stone, and 5 units to the 8th stone.\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>[0,1,2,3,4,8,9,11]</b>\r\n\r\n<b>Return false</b>. There is no way to jump to the last stone as \r\nthe gap between the 5th and 6th stone is too large.\r\n</pre>\n</p></p>\n</div>'


403 : frog-jump
402 : remove-k-digits


b'<div class="question-description">\n<p><p>Find the sum of all left leaves in a given binary tree.</p>\n<p><b>Example:</b>\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n\r\nThere are two left leaves in the binary tree, with values <b>9</b> and <b>15</b> respectively. Return <b>24</b>.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>A frog is crossing a river. The river is divided into x units and at each unit there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.</p>\n<p>Given a list of stones\' positions (in units) in sorted ascending order, determine if the frog is able to cross the river by landing on the last stone. Initially, the frog is on the first stone and assume the first jump must be 1 unit.\r\n</p>\n<p>If the frog\'s last jump was <i>k</i> units, then its next jump must be either <i>k</i> - 1, <i>k</i>, or <i>k</i> + 1 units. Note that the frog can only jump in the forward direction.</p>\n<p><b>Note:</b>\n<ul>\n<li>The number of stones is \xe2\x89\xa5 2 and is &lt; 1,100.</li>\n<li>Each stone\'s position will be a non-negative integer &lt; 2<sup>31</sup>.</li>\n<li>The first stone\'s position is always 0.</li>\n</ul>\n</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>[0,1,3,5,6,8,12,17]</b>\r\n\r\nThere are a total of 8 stones.\r\nThe first stone at the 0th unit, second stone at the 1st unit,\r\nthird stone at the 3rd unit, and so on...\r\nThe last stone at the 17th unit.\r\n\r\n<b>Return true</b>. The frog can jump to the last stone by jumping \r\n1 unit to the 2nd stone, then 2 units to the 3rd stone, then \r\n2 units to the 4th stone, then 3 units to the 6th stone, \r\n4 units to the 7th stone, and 5 units to the 8th stone.\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>[0,1,2,3,4,8,9,11]</b>\r\n\r\n<b>Return false</b>. There is no way to jump to the last stone as \r\nthe gap between the 5th and 6th stone is too large.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a non-negative integer <i>num</i> represented as a string, remove <i>k</i> digits from the number so that the new number is the smallest possible.\r\n</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>The length of <i>num</i> is less than 10002 and will be \xe2\x89\xa5 <i>k</i>.</li>\n<li>The given <i>num</i> does not contain any leading zero.</li>\n</ul>\n</p></p></div>'


402 : remove-k-digits
401 : binary-watch


b'<div class="question-description">\n<p><p>Given a non-negative integer <i>num</i> represented as a string, remove <i>k</i> digits from the number so that the new number is the smallest possible.\r\n</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>The length of <i>num</i> is less than 10002 and will be \xe2\x89\xa5 <i>k</i>.</li>\n<li>The given <i>num</i> does not contain any leading zero.</li>\n</ul>\n</p></p></div>'




b'<div class="question-description">\n<p><p>A binary watch has 4 LEDs on the top which represent the <b>hours</b> (<b>0-11</b>), and the 6 LEDs on the bottom represent the <b>minutes</b> (<b>0-59</b>).</p>\n<p>Each LED represents a zero or one, with the least significant bit on the right.</p>\n<img height="300" src="https://upload.wikimedia.org/wikipedia/commons/8/8b/Binary_clock_samui_moon.jpg">\n<p>For example, the above binary watch reads "3:25".</p>\n<p>Given a non-negative integer <i>n</i> which represents the number of LEDs that are currently on, return all possible times the watch could represent.</p>\n<p><b>Example:</b>\n<pre>Input: n = 1<br/>Return: ["1:00", "2:00", "4:00", "8:00", "0:01", "0:02", "0:04", "0:08", "0:16", "0:32"]</pre>\n</p>\n<p><b>Note:</b><br>\n<ul>\n<li>The order of output does not matter.</li>\n<li>The hour must not contain a leading zero, for example "01:00" is not valid, it should be "1:00".</li>\n<li>The minute must be consist of two digits and may contain a leading zero, for example "10:2" is not valid, it should be "10:02".</li>\n</ul>\n</br></p></img></p>\n</div>'


401 : binary-watch
400 : nth-digit


b'<div class="question-description">\n<p><p>Find the <i>n</i><sup>th</sup> digit of the infinite integer sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... </p>\n<p><b>Note:</b><br/>\n<i>n</i> is positive and will fit within the range of a 32-bit signed integer (<i>n</i> &lt; 2<sup>31</sup>).\r\n</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>Input:</b>\r\n3\r\n\r\n<b>Output:</b>\r\n3\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>Input:</b>\r\n11\r\n\r\n<b>Output:</b>\r\n0\r\n\r\n<b>Explanation:</b>\r\nThe 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.\r\n</pre>\n</p></p>\n</div>'


400 : nth-digit
399 : evaluate-division


b'<div class="question-description">\n<p><p>A binary watch has 4 LEDs on the top which represent the <b>hours</b> (<b>0-11</b>), and the 6 LEDs on the bottom represent the <b>minutes</b> (<b>0-59</b>).</p>\n<p>Each LED represents a zero or one, with the least significant bit on the right.</p>\n<img height="300" src="https://upload.wikimedia.org/wikipedia/commons/8/8b/Binary_clock_samui_moon.jpg">\n<p>For example, the above binary watch reads "3:25".</p>\n<p>Given a non-negative integer <i>n</i> which represents the number of LEDs that are currently on, return all possible times the watch could represent.</p>\n<p><b>Example:</b>\n<pre>Input: n = 1<br/>Return: ["1:00", "2:00", "4:00", "8:00", "0:01", "0:02", "0:04", "0:08", "0:16", "0:32"]</pre>\n</p>\n<p><b>Note:</b><br>\n<ul>\n<li>The order of output does not matter.</li>\n<li>The hour must not contain a leading zero, for example "01:00" is not valid, it should be "1:00".</li>\n<li>The minute must be consist of two digits and may contain a leading zero, for example "10:2" is not valid, it should be "10:02".</li>\n</ul>\n</br></p></img></p>\n</div>'




b'<div class="question-description">\n<p><p>Find the <i>n</i><sup>th</sup> digit of the infinite integer sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... </p>\n<p><b>Note:</b><br/>\n<i>n</i> is positive and will fit within the range of a 32-bit signed integer (<i>n</i> &lt; 2<sup>31</sup>).\r\n</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>Input:</b>\r\n3\r\n\r\n<b>Output:</b>\r\n3\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>Input:</b>\r\n11\r\n\r\n<b>Output:</b>\r\n0\r\n\r\n<b>Explanation:</b>\r\nThe 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nEquations are given in the format <code>A / B = k</code>, where  <code>A</code> and <code>B</code> are variables represented as strings, and <code>k</code> is a real number (floating point number). Given some queries, return the answers. If the answer does not exist, return <code>-1.0</code>.\r\n</p>\n<p><b>Example:</b><br/>\r\nGiven <code> a / b = 2.0, b / c = 3.0.</code> <br/>queries are: <code> a / c = ?,  b / a = ?, a / e = ?,  a / a = ?, x / x = ? .</code> <br/>return <code> [6.0, 0.5, -1.0, 1.0, -1.0 ].</code>\n</p>\n<p>\r\nThe input is: <code> vector&lt;pair&lt;string, string&gt;&gt; equations, vector&lt;double&gt;&amp; values, vector&lt;pair&lt;string, string&gt;&gt; queries </code>, where <code>equations.size() == values.size()</code>, and the values are positive. This represents the equations. Return <code> vector&lt;double&gt;</code>.\r\n</p>\n<p>According to the example above:\r\n<pre>equations = [ ["a", "b"], ["b", "c"] ],\r\nvalues = [2.0, 3.0],\r\nqueries = [ ["a", "c"], ["b", "a"], ["a", "e"], ["a", "a"], ["x", "x"] ]. </pre>\n</p>\n<p>\r\nThe input is always valid. You may assume that evaluating the queries will result in no division by zero and there is no contradiction.\r\n</p></p>\n</div>'


399 : evaluate-division
398 : random-pick-index


b'<div class="question-description">\n<p><p>\r\nEquations are given in the format <code>A / B = k</code>, where  <code>A</code> and <code>B</code> are variables represented as strings, and <code>k</code> is a real number (floating point number). Given some queries, return the answers. If the answer does not exist, return <code>-1.0</code>.\r\n</p>\n<p><b>Example:</b><br/>\r\nGiven <code> a / b = 2.0, b / c = 3.0.</code> <br/>queries are: <code> a / c = ?,  b / a = ?, a / e = ?,  a / a = ?, x / x = ? .</code> <br/>return <code> [6.0, 0.5, -1.0, 1.0, -1.0 ].</code>\n</p>\n<p>\r\nThe input is: <code> vector&lt;pair&lt;string, string&gt;&gt; equations, vector&lt;double&gt;&amp; values, vector&lt;pair&lt;string, string&gt;&gt; queries </code>, where <code>equations.size() == values.size()</code>, and the values are positive. This represents the equations. Return <code> vector&lt;double&gt;</code>.\r\n</p>\n<p>According to the example above:\r\n<pre>equations = [ ["a", "b"], ["b", "c"] ],\r\nvalues = [2.0, 3.0],\r\nqueries = [ ["a", "c"], ["b", "a"], ["a", "e"], ["a", "a"], ["x", "x"] ]. </pre>\n</p>\n<p>\r\nThe input is always valid. You may assume that evaluating the queries will result in no division by zero and there is no contradiction.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nThe array size can be very large. Solution that uses too much extra space will not pass the judge.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\nint[] nums = new int[] {1,2,3,3,3};\r\nSolution solution = new Solution(nums);\r\n\r\n// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\r\nsolution.pick(3);\r\n\r\n// pick(1) should return 0. Since in the array only nums[0] is equal to 1.\r\nsolution.pick(1);\r\n</pre>\n</p></p>\n</div>'


398 : random-pick-index
397 : integer-replacement


b'<div class="question-description">\n<p><p>\r\nGiven an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nThe array size can be very large. Solution that uses too much extra space will not pass the judge.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\nint[] nums = new int[] {1,2,3,3,3};\r\nSolution solution = new Solution(nums);\r\n\r\n// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\r\nsolution.pick(3);\r\n\r\n// pick(1) should return 0. Since in the array only nums[0] is equal to 1.\r\nsolution.pick(1);\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a positive integer <i>n</i> and you can do operations as follow:\r\n</p>\n<p>\n<ol>\n<li>If <i>n</i> is even, replace <i>n</i> with <code><i>n</i>/2</code>.</li>\n<li>If <i>n</i> is odd, you can replace <i>n</i> with either <code><i>n</i> + 1</code> or <code><i>n</i> - 1</code>.</li>\n</ol>\n</p>\n<p>\r\nWhat is the minimum number of replacements needed for <i>n</i> to become 1?\r\n</p>\n</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>Input:</b>\r\n8\r\n\r\n<b>Output:</b>\r\n3\r\n\r\n<b>Explanation:</b>\r\n8 -&gt; 4 -&gt; 2 -&gt; 1\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>Input:</b>\r\n7\r\n\r\n<b>Output:</b>\r\n4\r\n\r\n<b>Explanation:</b>\r\n7 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1\r\nor\r\n7 -&gt; 6 -&gt; 3 -&gt; 2 -&gt; 1\r\n</pre>\n</p></div>'


397 : integer-replacement
396 : rotate-function


b'<div class="question-description">\n<p><p>\r\nGiven a positive integer <i>n</i> and you can do operations as follow:\r\n</p>\n<p>\n<ol>\n<li>If <i>n</i> is even, replace <i>n</i> with <code><i>n</i>/2</code>.</li>\n<li>If <i>n</i> is odd, you can replace <i>n</i> with either <code><i>n</i> + 1</code> or <code><i>n</i> - 1</code>.</li>\n</ol>\n</p>\n<p>\r\nWhat is the minimum number of replacements needed for <i>n</i> to become 1?\r\n</p>\n</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>Input:</b>\r\n8\r\n\r\n<b>Output:</b>\r\n3\r\n\r\n<b>Explanation:</b>\r\n8 -&gt; 4 -&gt; 2 -&gt; 1\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>Input:</b>\r\n7\r\n\r\n<b>Output:</b>\r\n4\r\n\r\n<b>Explanation:</b>\r\n7 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1\r\nor\r\n7 -&gt; 6 -&gt; 3 -&gt; 2 -&gt; 1\r\n</pre>\n</p></div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array of integers <code>A</code> and let <i>n</i> to be its length.\r\n</p>\n<p>\r\nAssume <code>B<sub>k</sub></code> to be an array obtained by rotating the array <code>A</code> <i>k</i> positions clock-wise, we define a "rotation function" <code>F</code> on <code>A</code> as follow:\r\n</p>\n<p>\n<code>F(k) = 0 * B<sub>k</sub>[0] + 1 * B<sub>k</sub>[1] + ... + (n-1) * B<sub>k</sub>[n-1]</code>.</p>\n<p>Calculate the maximum value of <code>F(0), F(1), ..., F(n-1)</code>. \r\n</p>\n<p><b>Note:</b><br/>\n<i>n</i> is guaranteed to be less than 10<sup>5</sup>.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\nA = [4, 3, 2, 6]\r\n\r\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\r\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\r\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\r\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\r\n\r\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\r\n</pre>\n</p></p>\n</div>'


396 : rotate-function
395 : longest-substring-with-at-least-k-repeating-characters


b'<div class="question-description">\n<p><p>\r\nGiven an array of integers <code>A</code> and let <i>n</i> to be its length.\r\n</p>\n<p>\r\nAssume <code>B<sub>k</sub></code> to be an array obtained by rotating the array <code>A</code> <i>k</i> positions clock-wise, we define a "rotation function" <code>F</code> on <code>A</code> as follow:\r\n</p>\n<p>\n<code>F(k) = 0 * B<sub>k</sub>[0] + 1 * B<sub>k</sub>[1] + ... + (n-1) * B<sub>k</sub>[n-1]</code>.</p>\n<p>Calculate the maximum value of <code>F(0), F(1), ..., F(n-1)</code>. \r\n</p>\n<p><b>Note:</b><br/>\n<i>n</i> is guaranteed to be less than 10<sup>5</sup>.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\nA = [4, 3, 2, 6]\r\n\r\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\r\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\r\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\r\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\r\n\r\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nFind the length of the longest substring <b><i>T</i></b> of a given string (consists of lowercase letters only) such that every character in <b><i>T</i></b> appears no less than <i>k</i> times.\r\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nInput:\r\ns = "aaabb", k = 3\r\n\r\nOutput:\r\n3\r\n\r\nThe longest substring is "aaa", as \'a\' is repeated 3 times.\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nInput:\r\ns = "ababbc", k = 2\r\n\r\nOutput:\r\n5\r\n\r\nThe longest substring is "ababb", as \'a\' is repeated 2 times and \'b\' is repeated 3 times.\r\n</pre>\n</p></p>\n</div>'


395 : longest-substring-with-at-least-k-repeating-characters
394 : decode-string


b'<div class="question-description">\n<p><p>\r\nFind the length of the longest substring <b><i>T</i></b> of a given string (consists of lowercase letters only) such that every character in <b><i>T</i></b> appears no less than <i>k</i> times.\r\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nInput:\r\ns = "aaabb", k = 3\r\n\r\nOutput:\r\n3\r\n\r\nThe longest substring is "aaa", as \'a\' is repeated 3 times.\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nInput:\r\ns = "ababbc", k = 2\r\n\r\nOutput:\r\n5\r\n\r\nThe longest substring is "ababb", as \'a\' is repeated 2 times and \'b\' is repeated 3 times.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an encoded string, return it\'s decoded string.\r\n</p>\n<p>\r\nThe encoding rule is: <code>k[encoded_string]</code>, where the <i>encoded_string</i> inside the square brackets is being repeated exactly <i>k</i> times. Note that <i>k</i> is guaranteed to be a positive integer.</p>\n<p>\r\nYou may assume that the input string is always valid; No extra white spaces, square brackets are well-formed, etc.</p>\n<p>Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, <i>k</i>. For example, there won\'t be input like <code>3a</code> or <code>2[4]</code>.\r\n</p>\n<p><b>Examples:</b>\n<pre>\r\ns = "3[a]2[bc]", return "aaabcbc".\r\ns = "3[a2[c]]", return "accaccacc".\r\ns = "2[abc]3[cd]ef", return "abcabccdcdcdef".\r\n</pre>\n</p></p>\n</div>'


394 : decode-string
393 : utf-8-validation


b'<div class="question-description">\n<p><p>\r\nGiven an encoded string, return it\'s decoded string.\r\n</p>\n<p>\r\nThe encoding rule is: <code>k[encoded_string]</code>, where the <i>encoded_string</i> inside the square brackets is being repeated exactly <i>k</i> times. Note that <i>k</i> is guaranteed to be a positive integer.</p>\n<p>\r\nYou may assume that the input string is always valid; No extra white spaces, square brackets are well-formed, etc.</p>\n<p>Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, <i>k</i>. For example, there won\'t be input like <code>3a</code> or <code>2[4]</code>.\r\n</p>\n<p><b>Examples:</b>\n<pre>\r\ns = "3[a]2[bc]", return "aaabcbc".\r\ns = "3[a2[c]]", return "accaccacc".\r\ns = "2[abc]3[cd]ef", return "abcabccdcdcdef".\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>A character in UTF8 can be from <b>1 to 4 bytes</b> long, subjected to the following rules:</p>\n<ol>\n<li>For 1-byte character, the first bit is a 0, followed by its unicode code.</li>\n<li>For n-bytes character, the first n-bits are all one\'s, the n+1 bit is 0, followed by n-1 bytes with most significant 2 bits being 10.</li>\n</ol>\n<p>This is how the UTF-8 encoding would work:</p>\n<pre><code>   Char. number range  |        UTF-8 octet sequence\r\n      (hexadecimal)    |              (binary)\r\n   --------------------+---------------------------------------------\r\n   0000 0000-0000 007F | 0xxxxxxx\r\n   0000 0080-0000 07FF | 110xxxxx 10xxxxxx\r\n   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\r\n   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\r\n</code></pre>\n<p>\r\nGiven an array of integers representing the data, return whether it is a valid utf-8 encoding.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nThe input is an array of integers. Only the <b>least significant 8 bits</b> of each integer is used to store the data. This means each integer represents only 1 byte of data.\r\n</p>\n<p>\n<b>Example 1:</b>\n<pre>\r\ndata = [197, 130, 1], which represents the octet sequence: <b>11000101 10000010 00000001</b>.\r\n\r\nReturn <b>true</b>.\r\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\r\n</pre>\n</p>\n<p>\n<b>Example 2:</b>\n<pre>\r\ndata = [235, 140, 4], which represented the octet sequence: <b>11101011 10001100 00000100</b>.\r\n\r\nReturn <b>false</b>.\r\nThe first 3 bits are all one\'s and the 4th bit is 0 means it is a 3-bytes character.\r\nThe next byte is a continuation byte which starts with 10 and that\'s correct.\r\nBut the second continuation byte does not start with 10, so it is invalid.\r\n</pre>\n</p></p>\n</div>'


393 : utf-8-validation
392 : is-subsequence


b'<div class="question-description">\n<p><p>A character in UTF8 can be from <b>1 to 4 bytes</b> long, subjected to the following rules:</p>\n<ol>\n<li>For 1-byte character, the first bit is a 0, followed by its unicode code.</li>\n<li>For n-bytes character, the first n-bits are all one\'s, the n+1 bit is 0, followed by n-1 bytes with most significant 2 bits being 10.</li>\n</ol>\n<p>This is how the UTF-8 encoding would work:</p>\n<pre><code>   Char. number range  |        UTF-8 octet sequence\r\n      (hexadecimal)    |              (binary)\r\n   --------------------+---------------------------------------------\r\n   0000 0000-0000 007F | 0xxxxxxx\r\n   0000 0080-0000 07FF | 110xxxxx 10xxxxxx\r\n   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\r\n   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\r\n</code></pre>\n<p>\r\nGiven an array of integers representing the data, return whether it is a valid utf-8 encoding.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nThe input is an array of integers. Only the <b>least significant 8 bits</b> of each integer is used to store the data. This means each integer represents only 1 byte of data.\r\n</p>\n<p>\n<b>Example 1:</b>\n<pre>\r\ndata = [197, 130, 1], which represents the octet sequence: <b>11000101 10000010 00000001</b>.\r\n\r\nReturn <b>true</b>.\r\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\r\n</pre>\n</p>\n<p>\n<b>Example 2:</b>\n<pre>\r\ndata = [235, 140, 4], which represented the octet sequence: <b>11101011 10001100 00000100</b>.\r\n\r\nReturn <b>false</b>.\r\nThe first 3 bits are all one\'s and the 4th bit is 0 means it is a 3-bytes character.\r\nThe next byte is a continuation byte which starts with 10 and that\'s correct.\r\nBut the second continuation byte does not start with 10, so it is invalid.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string <b>s</b> and a string <b>t</b>, check if <b>s</b> is subsequence of <b>t</b>.\r\n</p>\n<p>\r\nYou may assume that there is only lower case English letters in both <b>s</b> and <b>t</b>. <b>t</b> is potentially a very long (length ~= 500,000) string, and <b>s</b> is a short string (&lt;=100).\r\n</p>\n<p>\r\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, <code>"ace"</code> is a subsequence of <code>"abcde"</code> while <code>"aec"</code> is not).\r\n</p>\n<p><b>Example 1:</b><br/>\n<b>s</b> = <code>"abc"</code>, <b>t</b> = <code>"ahbgdc"</code>\n</p>\n<p>\r\nReturn <code>true</code>.\r\n</p>\n<p><b>Example 2:</b><br/>\n<b>s</b> = <code>"axc"</code>, <b>t</b> = <code>"ahbgdc"</code>\n</p>\n<p>\r\nReturn <code>false</code>.\r\n</p>\n<p><b>Follow up:</b><br/>\r\nIf there are lots of incoming S, say S1, S2, ... , Sk where k &gt;= 1B, and you want to check one by one to see if T has its subsequence. In this scenario, how would you change your code?</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/pbrother/">@pbrother</a> for adding this problem and creating all test cases.</p></p>\n</div>'


392 : is-subsequence
391 : perfect-rectangle


b'<div class="question-description">\n<p><p>\r\nGiven a string <b>s</b> and a string <b>t</b>, check if <b>s</b> is subsequence of <b>t</b>.\r\n</p>\n<p>\r\nYou may assume that there is only lower case English letters in both <b>s</b> and <b>t</b>. <b>t</b> is potentially a very long (length ~= 500,000) string, and <b>s</b> is a short string (&lt;=100).\r\n</p>\n<p>\r\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, <code>"ace"</code> is a subsequence of <code>"abcde"</code> while <code>"aec"</code> is not).\r\n</p>\n<p><b>Example 1:</b><br/>\n<b>s</b> = <code>"abc"</code>, <b>t</b> = <code>"ahbgdc"</code>\n</p>\n<p>\r\nReturn <code>true</code>.\r\n</p>\n<p><b>Example 2:</b><br/>\n<b>s</b> = <code>"axc"</code>, <b>t</b> = <code>"ahbgdc"</code>\n</p>\n<p>\r\nReturn <code>false</code>.\r\n</p>\n<p><b>Follow up:</b><br/>\r\nIf there are lots of incoming S, say S1, S2, ... , Sk where k &gt;= 1B, and you want to check one by one to see if T has its subsequence. In this scenario, how would you change your code?</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/pbrother/">@pbrother</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven N axis-aligned rectangles where N &gt; 0, determine if they all together form an exact cover of a rectangular region.\r\n</p>\n<p>\r\nEach rectangle is represented as a bottom-left point and a top-right point. For example, a unit square is represented as [1,1,2,2]. (coordinate of bottom-left point is (1, 1) and top-right point is (2, 2)).\r\n</p>\n<div style="float:right"><img src="https://leetcode.com/static/images/problemset/rectangle_perfect.gif"/></div>\n<p><b>Example 1:</b>\n<pre>\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [3,2,4,4],\r\n  [1,3,2,4],\r\n  [2,3,3,4]\r\n]\r\n\r\nReturn true. All 5 rectangles together form an exact cover of a rectangular region.\r\n</pre>\n</p>\n<div style="clear:both"></div>\n<div style="float:right"><img src="https://leetcode.com/static/images/problemset/rectangle_separated.gif"/></div>\n<p><b>Example 2:</b>\n<pre>\r\nrectangles = [\r\n  [1,1,2,3],\r\n  [1,3,2,4],\r\n  [3,1,4,2],\r\n  [3,2,4,4]\r\n]\r\n\r\nReturn false. Because there is a gap between the two rectangular regions.\r\n</pre>\n</p>\n<div style="clear:both"></div>\n<div style="float:right"><img src="https://leetcode.com/static/images/problemset/rectangle_hole.gif"/></div>\n<p><b>Example 3:</b>\n<pre>\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [1,3,2,4],\r\n  [3,2,4,4]\r\n]\r\n\r\nReturn false. Because there is a gap in the top center.\r\n</pre>\n</p>\n<div style="clear:both"></div>\n<div style="float:right"><img src="https://leetcode.com/static/images/problemset/rectangle_intersect.gif"/></div>\n<p><b>Example 4:</b>\n<pre>\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [1,3,2,4],\r\n  [2,2,4,4]\r\n]\r\n\r\nReturn false. Because two of the rectangles overlap with each other.\r\n</pre>\n</p>\n<div style="clear:both"></div></p>\n</div>'


391 : perfect-rectangle
390 : elimination-game


b'<div class="question-description">\n<p><p>\r\nGiven N axis-aligned rectangles where N &gt; 0, determine if they all together form an exact cover of a rectangular region.\r\n</p>\n<p>\r\nEach rectangle is represented as a bottom-left point and a top-right point. For example, a unit square is represented as [1,1,2,2]. (coordinate of bottom-left point is (1, 1) and top-right point is (2, 2)).\r\n</p>\n<div style="float:right"><img src="https://leetcode.com/static/images/problemset/rectangle_perfect.gif"/></div>\n<p><b>Example 1:</b>\n<pre>\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [3,2,4,4],\r\n  [1,3,2,4],\r\n  [2,3,3,4]\r\n]\r\n\r\nReturn true. All 5 rectangles together form an exact cover of a rectangular region.\r\n</pre>\n</p>\n<div style="clear:both"></div>\n<div style="float:right"><img src="https://leetcode.com/static/images/problemset/rectangle_separated.gif"/></div>\n<p><b>Example 2:</b>\n<pre>\r\nrectangles = [\r\n  [1,1,2,3],\r\n  [1,3,2,4],\r\n  [3,1,4,2],\r\n  [3,2,4,4]\r\n]\r\n\r\nReturn false. Because there is a gap between the two rectangular regions.\r\n</pre>\n</p>\n<div style="clear:both"></div>\n<div style="float:right"><img src="https://leetcode.com/static/images/problemset/rectangle_hole.gif"/></div>\n<p><b>Example 3:</b>\n<pre>\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [1,3,2,4],\r\n  [3,2,4,4]\r\n]\r\n\r\nReturn false. Because there is a gap in the top center.\r\n</pre>\n</p>\n<div style="clear:both"></div>\n<div style="float:right"><img src="https://leetcode.com/static/images/problemset/rectangle_intersect.gif"/></div>\n<p><b>Example 4:</b>\n<pre>\r\nrectangles = [\r\n  [1,1,3,3],\r\n  [3,1,4,2],\r\n  [1,3,2,4],\r\n  [2,2,4,4]\r\n]\r\n\r\nReturn false. Because two of the rectangles overlap with each other.\r\n</pre>\n</p>\n<div style="clear:both"></div></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nThere is a list of sorted integers from 1 to <i>n</i>. Starting from left to right, remove the first number and every other number afterward until you reach the end of the list.</p>\n<p>Repeat the previous step again, but this time from right to left, remove the right most number and every other number from the remaining numbers.</p>\n<p>We keep repeating the steps again, alternating left to right and right to left, until a single number remains.</p>\n<p>Find the last number that remains starting with a list of length <i>n</i>.</p>\n<p><b>Example:</b>\n<pre>\r\nInput:\r\nn = 9,\r\n<u>1</u> 2 <u>3</u> 4 <u>5</u> 6 <u>7</u> 8 <u>9</u>\r\n2 <u>4</u> 6 <u>8</u>\r\n<u>2</u> 6\r\n6\r\n\r\nOutput:\r\n6\r\n</pre>\n</p></p>\n</div>'


390 : elimination-game
389 : find-the-difference


b'<div class="question-description">\n<p><p>\r\nThere is a list of sorted integers from 1 to <i>n</i>. Starting from left to right, remove the first number and every other number afterward until you reach the end of the list.</p>\n<p>Repeat the previous step again, but this time from right to left, remove the right most number and every other number from the remaining numbers.</p>\n<p>We keep repeating the steps again, alternating left to right and right to left, until a single number remains.</p>\n<p>Find the last number that remains starting with a list of length <i>n</i>.</p>\n<p><b>Example:</b>\n<pre>\r\nInput:\r\nn = 9,\r\n<u>1</u> 2 <u>3</u> 4 <u>5</u> 6 <u>7</u> 8 <u>9</u>\r\n2 <u>4</u> 6 <u>8</u>\r\n<u>2</u> 6\r\n6\r\n\r\nOutput:\r\n6\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two strings <b><i>s</i></b> and <b><i>t</i></b> which consist of only lowercase letters.</p>\n<p>String <b><i>t</i></b> is generated by random shuffling string <b><i>s</i></b> and then add one more letter at a random position.</p>\n<p>Find the letter that was added in <b><i>t</i></b>.</p>\n<p><b>Example:</b>\n<pre>\r\nInput:\r\ns = "abcd"\r\nt = "abcde"\r\n\r\nOutput:\r\ne\r\n\r\nExplanation:\r\n\'e\' is the letter that was added.\r\n</pre></p>\n</p></div>'


389 : find-the-difference
388 : longest-absolute-file-path


b'<div class="question-description">\n<p><p>\r\nGiven two strings <b><i>s</i></b> and <b><i>t</i></b> which consist of only lowercase letters.</p>\n<p>String <b><i>t</i></b> is generated by random shuffling string <b><i>s</i></b> and then add one more letter at a random position.</p>\n<p>Find the letter that was added in <b><i>t</i></b>.</p>\n<p><b>Example:</b>\n<pre>\r\nInput:\r\ns = "abcd"\r\nt = "abcde"\r\n\r\nOutput:\r\ne\r\n\r\nExplanation:\r\n\'e\' is the letter that was added.\r\n</pre></p>\n</p></div>'




b'<div class="question-description">\n<p><p>Suppose we abstract our file system by a string in the following manner:</p>\n<p>The string <code>"dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext"</code> represents:</p>\n<pre>dir\r\n    subdir1\r\n    subdir2\r\n        file.ext\r\n</pre>\n<p>The directory <code>dir</code> contains an empty sub-directory <code>subdir1</code> and a sub-directory <code>subdir2</code> containing a file <code>file.ext</code>.</p>\n<p>The string <code>"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext"</code> represents:</p>\n<pre>dir\r\n    subdir1\r\n        file1.ext\r\n        subsubdir1\r\n    subdir2\r\n        subsubdir2\r\n            file2.ext\r\n</pre>\n<p>The directory <code>dir</code> contains two sub-directories <code>subdir1</code> and <code>subdir2</code>. <code>subdir1</code> contains a file <code>file1.ext</code> and an empty second-level sub-directory <code>subsubdir1</code>. <code>subdir2</code> contains a second-level sub-directory <code>subsubdir2</code> containing a file <code>file2.ext</code>.</p>\n<p>We are interested in finding the longest (number of characters) absolute path to a file within our file system. For example, in the second example above, the longest absolute path is <code>"dir/subdir2/subsubdir2/file2.ext"</code>, and its length is <code>32</code> (not including the double quotes).</p>\n<p>Given a string representing the file system in the above format, return the length of the longest absolute path to file in the abstracted file system. If there is no file in the system, return <code>0</code>.</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>The name of a file contains at least a <code>.</code> and an extension.</li>\n<li>The name of a directory or sub-directory will not contain a <code>.</code>.</li>\n</ul>\n</p>\n<p>Time complexity required: <code>O(n)</code> where <code>n</code> is the size of the input string.</p>\n<p>Notice that <code>a/aa/aaa/file1.txt</code> is not the longest file path, if there is another path <code>aaaaaaaaaaaaaaaaaaaaa/sth.png</code>.</p></p>\n</div>'


388 : longest-absolute-file-path
387 : first-unique-character-in-a-string


b'<div class="question-description">\n<p><p>Suppose we abstract our file system by a string in the following manner:</p>\n<p>The string <code>"dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext"</code> represents:</p>\n<pre>dir\r\n    subdir1\r\n    subdir2\r\n        file.ext\r\n</pre>\n<p>The directory <code>dir</code> contains an empty sub-directory <code>subdir1</code> and a sub-directory <code>subdir2</code> containing a file <code>file.ext</code>.</p>\n<p>The string <code>"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext"</code> represents:</p>\n<pre>dir\r\n    subdir1\r\n        file1.ext\r\n        subsubdir1\r\n    subdir2\r\n        subsubdir2\r\n            file2.ext\r\n</pre>\n<p>The directory <code>dir</code> contains two sub-directories <code>subdir1</code> and <code>subdir2</code>. <code>subdir1</code> contains a file <code>file1.ext</code> and an empty second-level sub-directory <code>subsubdir1</code>. <code>subdir2</code> contains a second-level sub-directory <code>subsubdir2</code> containing a file <code>file2.ext</code>.</p>\n<p>We are interested in finding the longest (number of characters) absolute path to a file within our file system. For example, in the second example above, the longest absolute path is <code>"dir/subdir2/subsubdir2/file2.ext"</code>, and its length is <code>32</code> (not including the double quotes).</p>\n<p>Given a string representing the file system in the above format, return the length of the longest absolute path to file in the abstracted file system. If there is no file in the system, return <code>0</code>.</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>The name of a file contains at least a <code>.</code> and an extension.</li>\n<li>The name of a directory or sub-directory will not contain a <code>.</code>.</li>\n</ul>\n</p>\n<p>Time complexity required: <code>O(n)</code> where <code>n</code> is the size of the input string.</p>\n<p>Notice that <code>a/aa/aaa/file1.txt</code> is not the longest file path, if there is another path <code>aaaaaaaaaaaaaaaaaaaaa/sth.png</code>.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string, find the first non-repeating character in it and return it\'s index. If it doesn\'t exist, return -1.\r\n</p>\n<p><b>Examples:</b>\n<pre>\r\ns = "leetcode"\r\nreturn 0.\r\n\r\ns = "loveleetcode",\r\nreturn 2.\r\n</pre>\n</p>\n<p>\n<b>Note:</b> You may assume the string contain only lowercase letters.\r\n</p></p>\n</div>'


387 : first-unique-character-in-a-string
386 : lexicographical-numbers


b'<div class="question-description">\n<p><p>\r\nGiven a string, find the first non-repeating character in it and return it\'s index. If it doesn\'t exist, return -1.\r\n</p>\n<p><b>Examples:</b>\n<pre>\r\ns = "leetcode"\r\nreturn 0.\r\n\r\ns = "loveleetcode",\r\nreturn 2.\r\n</pre>\n</p>\n<p>\n<b>Note:</b> You may assume the string contain only lowercase letters.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an integer <i>n</i>, return 1 - <i>n</i> in lexicographical order.\r\n</p>\n<p>\r\nFor example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].\r\n</p>\n<p>\r\nPlease optimize your algorithm to use less time and space. The input size may be as large as 5,000,000.\r\n</p></p>\n</div>'


386 : lexicographical-numbers
385 : mini-parser


b'<div class="question-description">\n<p><p>\r\nGiven an integer <i>n</i>, return 1 - <i>n</i> in lexicographical order.\r\n</p>\n<p>\r\nFor example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].\r\n</p>\n<p>\r\nPlease optimize your algorithm to use less time and space. The input size may be as large as 5,000,000.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a nested list of integers represented as a string, implement a parser to deserialize it.</p>\n<p>Each element is either an integer, or a list -- whose elements may also be integers or other lists.</p>\n<p><b>Note:</b>\r\nYou may assume that the string is well-formed:\r\n<ul>\n<li>String is non-empty.</li>\n<li>String does not contain white spaces.</li>\n<li>String contains only digits <code>0-9</code>, <code>[</code>, <code>-</code> <code>,</code>, <code>]</code>.</li>\n</ul>\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nGiven s = "324",\r\n\r\nYou should return a NestedInteger object which contains a single integer 324.\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nGiven s = "[123,[456,[789]]]",\r\n\r\nReturn a NestedInteger object containing a nested list with 2 elements:\r\n\r\n1. An integer containing value 123.\r\n2. A nested list containing two elements:\r\n    i.  An integer containing value 456.\r\n    ii. A nested list with one element:\r\n         a. An integer containing value 789.\r\n</pre>\n</p></p>\n</div>'


385 : mini-parser
384 : shuffle-an-array


b'<div class="question-description">\n<p><p>Given a nested list of integers represented as a string, implement a parser to deserialize it.</p>\n<p>Each element is either an integer, or a list -- whose elements may also be integers or other lists.</p>\n<p><b>Note:</b>\r\nYou may assume that the string is well-formed:\r\n<ul>\n<li>String is non-empty.</li>\n<li>String does not contain white spaces.</li>\n<li>String contains only digits <code>0-9</code>, <code>[</code>, <code>-</code> <code>,</code>, <code>]</code>.</li>\n</ul>\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nGiven s = "324",\r\n\r\nYou should return a NestedInteger object which contains a single integer 324.\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nGiven s = "[123,[456,[789]]]",\r\n\r\nReturn a NestedInteger object containing a nested list with 2 elements:\r\n\r\n1. An integer containing value 123.\r\n2. A nested list containing two elements:\r\n    i.  An integer containing value 456.\r\n    ii. A nested list with one element:\r\n         a. An integer containing value 789.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Shuffle a set of numbers without duplicates.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\n// Init an array with set 1, 2, and 3.\r\nint[] nums = {1,2,3};\r\nSolution solution = new Solution(nums);\r\n\r\n// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.\r\nsolution.shuffle();\r\n\r\n// Resets the array back to its original configuration [1,2,3].\r\nsolution.reset();\r\n\r\n// Returns the random shuffling of array [1,2,3].\r\nsolution.shuffle();\r\n</pre>\n</p></p>\n</div>'


384 : shuffle-an-array
383 : ransom-note


b'<div class="question-description">\n<p><p>Shuffle a set of numbers without duplicates.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\n// Init an array with set 1, 2, and 3.\r\nint[] nums = {1,2,3};\r\nSolution solution = new Solution(nums);\r\n\r\n// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.\r\nsolution.shuffle();\r\n\r\n// Resets the array back to its original configuration [1,2,3].\r\nsolution.reset();\r\n\r\n// Returns the random shuffling of array [1,2,3].\r\nsolution.shuffle();\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom \r\nnote can be constructed from the magazines ; otherwise, it will return false. \r\n</p>\n<p>\r\nEach letter in the magazine string can only be used once in your ransom note.\r\n</p>\n<p><b>Note:</b><br/>\r\nYou may assume that both strings contain only lowercase letters.\r\n</p>\n<pre>\r\ncanConstruct("a", "b") -&gt; false\r\ncanConstruct("aa", "ab") -&gt; false\r\ncanConstruct("aa", "aab") -&gt; true\r\n</pre>\n</p>\n</div>'


383 : ransom-note
382 : linked-list-random-node


b'<div class="question-description">\n<p><p>\r\nGiven an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom \r\nnote can be constructed from the magazines ; otherwise, it will return false. \r\n</p>\n<p>\r\nEach letter in the magazine string can only be used once in your ransom note.\r\n</p>\n<p><b>Note:</b><br/>\r\nYou may assume that both strings contain only lowercase letters.\r\n</p>\n<pre>\r\ncanConstruct("a", "b") -&gt; false\r\ncanConstruct("aa", "ab") -&gt; false\r\ncanConstruct("aa", "aab") -&gt; true\r\n</pre>\n</p>\n</div>'




b'<div class="question-description">\n<p><p>Given a singly linked list, return a random node\'s value from the linked list. Each node must have the <b>same probability</b> of being chosen.</p>\n<p><b>Follow up:</b><br/>\r\nWhat if the linked list is extremely large and its length is unknown to you? Could you solve this efficiently without using extra space?\r\n</p>\n<p><b>Example:</b>\n<pre>\r\n// Init a singly linked list [1,2,3].\r\nListNode head = new ListNode(1);\r\nhead.next = new ListNode(2);\r\nhead.next.next = new ListNode(3);\r\nSolution solution = new Solution(head);\r\n\r\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.\r\nsolution.getRandom();\r\n</pre>\n</p></p>\n</div>'


382 : linked-list-random-node
381 : insert-delete-getrandom-o1-duplicates-allowed


b'<div class="question-description">\n<p><p>Given a singly linked list, return a random node\'s value from the linked list. Each node must have the <b>same probability</b> of being chosen.</p>\n<p><b>Follow up:</b><br/>\r\nWhat if the linked list is extremely large and its length is unknown to you? Could you solve this efficiently without using extra space?\r\n</p>\n<p><b>Example:</b>\n<pre>\r\n// Init a singly linked list [1,2,3].\r\nListNode head = new ListNode(1);\r\nhead.next = new ListNode(2);\r\nhead.next.next = new ListNode(3);\r\nSolution solution = new Solution(head);\r\n\r\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.\r\nsolution.getRandom();\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Design a data structure that supports all following operations in <i>average</i> <b>O(1)</b> time.</p>\n<b>Note: Duplicate elements are allowed.</b>\n<p>\n<ol>\n<li><code>insert(val)</code>: Inserts an item val to the collection.</li>\n<li><code>remove(val)</code>: Removes an item val from the collection if present.</li>\n<li><code>getRandom</code>: Returns a random element from current collection of elements. The probability of each element being returned is <b>linearly related</b> to the number of same value the collection contains.</li>\n</ol>\n</p>\n<p><b>Example:</b>\n<pre>\r\n// Init an empty collection.\r\nRandomizedCollection collection = new RandomizedCollection();\r\n\r\n// Inserts 1 to the collection. Returns true as the collection did not contain 1.\r\ncollection.insert(1);\r\n\r\n// Inserts another 1 to the collection. Returns false as the collection contained 1. Collection now contains [1,1].\r\ncollection.insert(1);\r\n\r\n// Inserts 2 to the collection, returns true. Collection now contains [1,1,2].\r\ncollection.insert(2);\r\n\r\n// getRandom should return 1 with the probability 2/3, and returns 2 with the probability 1/3.\r\ncollection.getRandom();\r\n\r\n// Removes 1 from the collection, returns true. Collection now contains [1,2].\r\ncollection.remove(1);\r\n\r\n// getRandom should return 1 and 2 both equally likely.\r\ncollection.getRandom();\r\n</pre>\n</p></p>\n</div>'


381 : insert-delete-getrandom-o1-duplicates-allowed
380 : insert-delete-getrandom-o1


b'<div class="question-description">\n<p><p>Design a data structure that supports all following operations in <i>average</i> <b>O(1)</b> time.</p>\n<b>Note: Duplicate elements are allowed.</b>\n<p>\n<ol>\n<li><code>insert(val)</code>: Inserts an item val to the collection.</li>\n<li><code>remove(val)</code>: Removes an item val from the collection if present.</li>\n<li><code>getRandom</code>: Returns a random element from current collection of elements. The probability of each element being returned is <b>linearly related</b> to the number of same value the collection contains.</li>\n</ol>\n</p>\n<p><b>Example:</b>\n<pre>\r\n// Init an empty collection.\r\nRandomizedCollection collection = new RandomizedCollection();\r\n\r\n// Inserts 1 to the collection. Returns true as the collection did not contain 1.\r\ncollection.insert(1);\r\n\r\n// Inserts another 1 to the collection. Returns false as the collection contained 1. Collection now contains [1,1].\r\ncollection.insert(1);\r\n\r\n// Inserts 2 to the collection, returns true. Collection now contains [1,1,2].\r\ncollection.insert(2);\r\n\r\n// getRandom should return 1 with the probability 2/3, and returns 2 with the probability 1/3.\r\ncollection.getRandom();\r\n\r\n// Removes 1 from the collection, returns true. Collection now contains [1,2].\r\ncollection.remove(1);\r\n\r\n// getRandom should return 1 and 2 both equally likely.\r\ncollection.getRandom();\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Design a data structure that supports all following operations in <i>average</i> <b>O(1)</b> time.</p>\n<p>\n<ol>\n<li><code>insert(val)</code>: Inserts an item val to the set if not already present.</li>\n<li><code>remove(val)</code>: Removes an item val from the set if present.</li>\n<li><code>getRandom</code>: Returns a random element from current set of elements. Each element must have the <b>same probability</b> of being returned.</li>\n</ol>\n</p>\n<p><b>Example:</b>\n<pre>\r\n// Init an empty set.\r\nRandomizedSet randomSet = new RandomizedSet();\r\n\r\n// Inserts 1 to the set. Returns true as 1 was inserted successfully.\r\nrandomSet.insert(1);\r\n\r\n// Returns false as 2 does not exist in the set.\r\nrandomSet.remove(2);\r\n\r\n// Inserts 2 to the set, returns true. Set now contains [1,2].\r\nrandomSet.insert(2);\r\n\r\n// getRandom should return either 1 or 2 randomly.\r\nrandomSet.getRandom();\r\n\r\n// Removes 1 from the set, returns true. Set now contains [2].\r\nrandomSet.remove(1);\r\n\r\n// 2 was already in the set, so return false.\r\nrandomSet.insert(2);\r\n\r\n// Since 2 is the only number in the set, getRandom always return 2.\r\nrandomSet.getRandom();\r\n</pre>\n</p></p>\n</div>'


380 : insert-delete-getrandom-o1
379 : design-phone-directory


b'<div class="question-description">\n<p><p>Design a data structure that supports all following operations in <i>average</i> <b>O(1)</b> time.</p>\n<p>\n<ol>\n<li><code>insert(val)</code>: Inserts an item val to the set if not already present.</li>\n<li><code>remove(val)</code>: Removes an item val from the set if present.</li>\n<li><code>getRandom</code>: Returns a random element from current set of elements. Each element must have the <b>same probability</b> of being returned.</li>\n</ol>\n</p>\n<p><b>Example:</b>\n<pre>\r\n// Init an empty set.\r\nRandomizedSet randomSet = new RandomizedSet();\r\n\r\n// Inserts 1 to the set. Returns true as 1 was inserted successfully.\r\nrandomSet.insert(1);\r\n\r\n// Returns false as 2 does not exist in the set.\r\nrandomSet.remove(2);\r\n\r\n// Inserts 2 to the set, returns true. Set now contains [1,2].\r\nrandomSet.insert(2);\r\n\r\n// getRandom should return either 1 or 2 randomly.\r\nrandomSet.getRandom();\r\n\r\n// Removes 1 from the set, returns true. Set now contains [2].\r\nrandomSet.remove(1);\r\n\r\n// 2 was already in the set, so return false.\r\nrandomSet.insert(2);\r\n\r\n// Since 2 is the only number in the set, getRandom always return 2.\r\nrandomSet.getRandom();\r\n</pre>\n</p></p>\n</div>'




No Description


379 : design-phone-directory
378 : kth-smallest-element-in-a-sorted-matrix


No Description




b'<div class="question-description">\n<p><p>Given a <i>n</i> x <i>n</i> matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.</p>\n<p>\r\nNote that it is the kth smallest element in the sorted order, not the kth distinct element.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\nmatrix = [\r\n   [ 1,  5,  9],\r\n   [10, 11, 13],\r\n   [12, 13, 15]\r\n],\r\nk = 8,\r\n\r\nreturn 13.\r\n</pre>\n</p>\n<p><b>Note: </b><br/>\r\nYou may assume k is always valid, 1 ? k ? n<sup>2</sup>.</p></p>\n</div>'


378 : kth-smallest-element-in-a-sorted-matrix
377 : combination-sum-iv


b'<div class="question-description">\n<p><p>Given a <i>n</i> x <i>n</i> matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.</p>\n<p>\r\nNote that it is the kth smallest element in the sorted order, not the kth distinct element.\r\n</p>\n<p><b>Example:</b>\n<pre>\r\nmatrix = [\r\n   [ 1,  5,  9],\r\n   [10, 11, 13],\r\n   [12, 13, 15]\r\n],\r\nk = 8,\r\n\r\nreturn 13.\r\n</pre>\n</p>\n<p><b>Note: </b><br/>\r\nYou may assume k is always valid, 1 ? k ? n<sup>2</sup>.</p></p>\n</div>'




b'<div class="question-description">\n<p><p> Given an integer array with all positive numbers and no duplicates, find the number of possible combinations that add up to a positive integer target.</p>\n<p><b>Example:</b>\n<pre>\r\n<i><b>nums</b></i> = [1, 2, 3]\r\n<i><b>target</b></i> = 4\r\n\r\nThe possible combination ways are:\r\n(1, 1, 1, 1)\r\n(1, 1, 2)\r\n(1, 2, 1)\r\n(1, 3)\r\n(2, 1, 1)\r\n(2, 2)\r\n(3, 1)\r\n\r\nNote that different sequences are counted as different combinations.\r\n\r\nTherefore the output is <i><b>7</b></i></pre></p></p></div>'


377 : combination-sum-iv
376 : wiggle-subsequence


b'<div class="question-description">\n<p><p> Given an integer array with all positive numbers and no duplicates, find the number of possible combinations that add up to a positive integer target.</p>\n<p><b>Example:</b>\n<pre>\r\n<i><b>nums</b></i> = [1, 2, 3]\r\n<i><b>target</b></i> = 4\r\n\r\nThe possible combination ways are:\r\n(1, 1, 1, 1)\r\n(1, 1, 2)\r\n(1, 2, 1)\r\n(1, 3)\r\n(2, 1, 1)\r\n(2, 2)\r\n(3, 1)\r\n\r\nNote that different sequences are counted as different combinations.\r\n\r\nTherefore the output is <i><b>7</b></i></pre></p></p></div>'




b'<div class="question-description">\n<p><p>A sequence of numbers is called a <strong>wiggle sequence</strong> if the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with fewer than two elements is trivially a wiggle sequence. </p>\n<p>For example, <code>[1,7,4,9,2,5]</code> is a wiggle sequence because the differences (6,-3,5,-7,3) are alternately positive and negative. In contrast, <code>[1,4,7,2,5]</code> and <code>[1,7,4,5,5]</code> are not wiggle sequences, the first because its first two differences are positive and the second because its last difference is zero.</p>\n<p>Given a sequence of integers, return the length of the longest subsequence that is a wiggle sequence. A subsequence is obtained by deleting some number of elements (eventually, also zero) from the original sequence, leaving the remaining elements in their original order.</p>\n<p><b>Examples:</b><br/>\n<pre>\r\n<b>Input:</b> [1,7,4,9,2,5]\r\n<b>Output:</b> 6\r\nThe entire sequence is a wiggle sequence.\r\n\r\n<b>Input:</b> [1,17,5,10,13,15,10,5,16,8]\r\n<b>Output:</b> 7\r\nThere are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].\r\n\r\n<b>Input:</b> [1,2,3,4,5,6,7,8,9]\r\n<b>Output:</b> 2\r\n</pre>\n</p>\n<p><b>Follow up:</b><br/>\r\nCan you do it in O(<i>n</i>) time?\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/agave/">@agave</a> and <a href="https://leetcode.com/stefanpochmann/">@StefanPochmann</a> for adding this problem and creating all test cases.</p></p>\n</div>'


376 : wiggle-subsequence
375 : guess-number-higher-or-lower-ii


b'<div class="question-description">\n<p><p>A sequence of numbers is called a <strong>wiggle sequence</strong> if the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with fewer than two elements is trivially a wiggle sequence. </p>\n<p>For example, <code>[1,7,4,9,2,5]</code> is a wiggle sequence because the differences (6,-3,5,-7,3) are alternately positive and negative. In contrast, <code>[1,4,7,2,5]</code> and <code>[1,7,4,5,5]</code> are not wiggle sequences, the first because its first two differences are positive and the second because its last difference is zero.</p>\n<p>Given a sequence of integers, return the length of the longest subsequence that is a wiggle sequence. A subsequence is obtained by deleting some number of elements (eventually, also zero) from the original sequence, leaving the remaining elements in their original order.</p>\n<p><b>Examples:</b><br/>\n<pre>\r\n<b>Input:</b> [1,7,4,9,2,5]\r\n<b>Output:</b> 6\r\nThe entire sequence is a wiggle sequence.\r\n\r\n<b>Input:</b> [1,17,5,10,13,15,10,5,16,8]\r\n<b>Output:</b> 7\r\nThere are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].\r\n\r\n<b>Input:</b> [1,2,3,4,5,6,7,8,9]\r\n<b>Output:</b> 2\r\n</pre>\n</p>\n<p><b>Follow up:</b><br/>\r\nCan you do it in O(<i>n</i>) time?\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/agave/">@agave</a> and <a href="https://leetcode.com/stefanpochmann/">@StefanPochmann</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>We are playing the Guess Game. The game is as follows:<p>\n<p>I pick a number from <strong>1</strong> to <strong>n</strong>. You have to guess which number I picked.</p>\n<p>Every time you guess wrong, I\'ll tell you whether the number I picked is higher or lower. </p>\n<p>However, when you guess a particular number x,  and you guess wrong, you pay <b>$x</b>. You win the game when you guess the number I picked.</p>\n<p>\n<b>Example:</b>\n<pre>\r\nn = 10, I pick 8.\r\n\r\nFirst round:  You guess 5, I tell you that it\'s higher. You pay $5.\r\nSecond round: You guess 7, I tell you that it\'s higher. You pay $7.\r\nThird round:  You guess 9, I tell you that it\'s lower. You pay $9.\r\n\r\nGame over. 8 is the number I picked.\r\n\r\nYou end up paying $5 + $7 + $9 = $21.\r\n</pre>\n</p>\n<p>Given a particular <strong>n \xe2\x89\xa5 1</strong>, find out how much money you need to have to guarantee a <b>win</b>.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/agave/">@agave</a> and <a href="https://leetcode.com/stefanpochmann/">@StefanPochmann</a> for adding this problem and creating all test cases.</p></p>\n</p></p></div>'


375 : guess-number-higher-or-lower-ii
374 : guess-number-higher-or-lower


b'<div class="question-description">\n<p><p>We are playing the Guess Game. The game is as follows:<p>\n<p>I pick a number from <strong>1</strong> to <strong>n</strong>. You have to guess which number I picked.</p>\n<p>Every time you guess wrong, I\'ll tell you whether the number I picked is higher or lower. </p>\n<p>However, when you guess a particular number x,  and you guess wrong, you pay <b>$x</b>. You win the game when you guess the number I picked.</p>\n<p>\n<b>Example:</b>\n<pre>\r\nn = 10, I pick 8.\r\n\r\nFirst round:  You guess 5, I tell you that it\'s higher. You pay $5.\r\nSecond round: You guess 7, I tell you that it\'s higher. You pay $7.\r\nThird round:  You guess 9, I tell you that it\'s lower. You pay $9.\r\n\r\nGame over. 8 is the number I picked.\r\n\r\nYou end up paying $5 + $7 + $9 = $21.\r\n</pre>\n</p>\n<p>Given a particular <strong>n \xe2\x89\xa5 1</strong>, find out how much money you need to have to guarantee a <b>win</b>.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/agave/">@agave</a> and <a href="https://leetcode.com/stefanpochmann/">@StefanPochmann</a> for adding this problem and creating all test cases.</p></p>\n</p></p></div>'




b'<div class="question-description">\n<p><p>We are playing the Guess Game. The game is as follows:<p>\n<p>I pick a number from <b>1</b> to <b><i>n</i></b>. You have to guess which number I picked.</p>\n<p>Every time you guess wrong, I\'ll tell you whether the number is higher or lower.</p>\n<p>You call a pre-defined API <code>guess(int num)</code> which returns 3 possible results (<code>-1</code>, <code>1</code>, or <code>0</code>):</p>\n<pre>\r\n-1 : My number is lower\r\n 1 : My number is higher\r\n 0 : Congrats! You got it!\r\n</pre>\n<p><b>Example:</b><br/>\n<pre>\r\nn = 10, I pick 6.\r\n\r\nReturn 6.\r\n</pre>\n</p></p>\n</p></p></div>'


374 : guess-number-higher-or-lower
373 : find-k-pairs-with-smallest-sums


b'<div class="question-description">\n<p><p>We are playing the Guess Game. The game is as follows:<p>\n<p>I pick a number from <b>1</b> to <b><i>n</i></b>. You have to guess which number I picked.</p>\n<p>Every time you guess wrong, I\'ll tell you whether the number is higher or lower.</p>\n<p>You call a pre-defined API <code>guess(int num)</code> which returns 3 possible results (<code>-1</code>, <code>1</code>, or <code>0</code>):</p>\n<pre>\r\n-1 : My number is lower\r\n 1 : My number is higher\r\n 0 : Congrats! You got it!\r\n</pre>\n<p><b>Example:</b><br/>\n<pre>\r\nn = 10, I pick 6.\r\n\r\nReturn 6.\r\n</pre>\n</p></p>\n</p></p></div>'




b'<div class="question-description">\n<p><p>\r\nYou are given two integer arrays <b>nums1</b> and <b>nums2</b> sorted in ascending order and an integer <b>k</b>. \r\n</p>\n<p>Define a pair <b>(u,v)</b> which consists of one element from the first array and one element from the second array.</p>\n<p>Find the k pairs <b>(u<sub>1</sub>,v<sub>1</sub>),(u<sub>2</sub>,v<sub>2</sub>) ...(u<sub>k</sub>,v<sub>k</sub>)</b> with the smallest sums.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\nGiven nums1 = [1,7,11], nums2 = [2,4,6],  k = 3\r\n\r\nReturn: [1,2],[1,4],[1,6]\r\n\r\nThe first 3 pairs are returned from the sequence:\r\n[1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\nGiven nums1 = [1,1,2], nums2 = [1,2,3],  k = 2\r\n\r\nReturn: [1,1],[1,1]\r\n\r\nThe first 2 pairs are returned from the sequence:\r\n[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\nGiven nums1 = [1,2], nums2 = [3],  k = 3 \r\n\r\nReturn: [1,3],[2,3]\r\n\r\nAll possible pairs are returned from the sequence:\r\n[1,3],[2,3]\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/elmirap/">@elmirap</a> and <a href="https://leetcode.com/stefanpochmann/">@StefanPochmann</a> for adding this problem and creating all test cases.</p></p>\n</div>'


373 : find-k-pairs-with-smallest-sums
372 : super-pow


b'<div class="question-description">\n<p><p>\r\nYou are given two integer arrays <b>nums1</b> and <b>nums2</b> sorted in ascending order and an integer <b>k</b>. \r\n</p>\n<p>Define a pair <b>(u,v)</b> which consists of one element from the first array and one element from the second array.</p>\n<p>Find the k pairs <b>(u<sub>1</sub>,v<sub>1</sub>),(u<sub>2</sub>,v<sub>2</sub>) ...(u<sub>k</sub>,v<sub>k</sub>)</b> with the smallest sums.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\nGiven nums1 = [1,7,11], nums2 = [2,4,6],  k = 3\r\n\r\nReturn: [1,2],[1,4],[1,6]\r\n\r\nThe first 3 pairs are returned from the sequence:\r\n[1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\nGiven nums1 = [1,1,2], nums2 = [1,2,3],  k = 2\r\n\r\nReturn: [1,1],[1,1]\r\n\r\nThe first 2 pairs are returned from the sequence:\r\n[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\r\n</pre>\n</p>\n<p><b>Example 3:</b><br/>\n<pre>\r\nGiven nums1 = [1,2], nums2 = [3],  k = 3 \r\n\r\nReturn: [1,3],[2,3]\r\n\r\nAll possible pairs are returned from the sequence:\r\n[1,3],[2,3]\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/elmirap/">@elmirap</a> and <a href="https://leetcode.com/stefanpochmann/">@StefanPochmann</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nYour task is to calculate <i>a</i><sup><i>b</i></sup> mod 1337 where <i>a</i> is a positive integer and <i>b</i> is an extremely large positive integer given in the form of an array.\r\n</p>\n<p><b>Example1:</b>\n<pre>\r\na = 2\r\nb = [3]\r\n\r\nResult: 8\r\n</pre>\n</p>\n<p><b>Example2:</b>\n<pre>\r\na = 2\r\nb = [1,0]\r\n\r\nResult: 1024\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/stomach_ache">@Stomach_ache</a> for adding this problem and creating all test cases.</p></p>\n</div>'


372 : super-pow
371 : sum-of-two-integers


b'<div class="question-description">\n<p><p>\r\nYour task is to calculate <i>a</i><sup><i>b</i></sup> mod 1337 where <i>a</i> is a positive integer and <i>b</i> is an extremely large positive integer given in the form of an array.\r\n</p>\n<p><b>Example1:</b>\n<pre>\r\na = 2\r\nb = [3]\r\n\r\nResult: 8\r\n</pre>\n</p>\n<p><b>Example2:</b>\n<pre>\r\na = 2\r\nb = [1,0]\r\n\r\nResult: 1024\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/stomach_ache">@Stomach_ache</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Calculate the sum of two integers <i>a</i> and <i>b</i>, but you are <b>not allowed</b> to use the operator <code>+</code> and <code>-</code>.</p>\n<p><b>Example:</b><br/>\r\nGiven <i>a</i> = 1 and <i>b</i> = 2, return 3.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/fujiaozhu">@fujiaozhu</a> for adding this problem and creating all test cases.</p></p>\n</div>'


371 : sum-of-two-integers
370 : range-addition


b'<div class="question-description">\n<p><p>Calculate the sum of two integers <i>a</i> and <i>b</i>, but you are <b>not allowed</b> to use the operator <code>+</code> and <code>-</code>.</p>\n<p><b>Example:</b><br/>\r\nGiven <i>a</i> = 1 and <i>b</i> = 2, return 3.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/fujiaozhu">@fujiaozhu</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


370 : range-addition
369 : plus-one-linked-list


No Description




No Description


369 : plus-one-linked-list
368 : largest-divisible-subset


b'<div class="question-description">\n<p><p>\r\nGiven a set of <b>distinct</b> positive integers, find the largest subset such that every pair (S<sub>i</sub>, S<sub>j</sub>) of elements in this subset satisfies: S<sub>i</sub> % S<sub>j</sub> = 0 or S<sub>j</sub> % S<sub>i</sub> = 0.\r\n</p>\n<p>If there are multiple solutions, return any subset is fine.\r\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nnums: [1,2,3]\r\n\r\nResult: [1,2] (of course, [1,3] will also be ok)\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nnums: [1,2,4,8]\r\n\r\nResult: [1,2,4,8]\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/stomach_ache">@Stomach_ache</a> for adding this problem and creating all test cases.</p></p>\n</div>'


368 : largest-divisible-subset
367 : valid-perfect-square


No Description




b'<div class="question-description">\n<p><p>\r\nGiven a set of <b>distinct</b> positive integers, find the largest subset such that every pair (S<sub>i</sub>, S<sub>j</sub>) of elements in this subset satisfies: S<sub>i</sub> % S<sub>j</sub> = 0 or S<sub>j</sub> % S<sub>i</sub> = 0.\r\n</p>\n<p>If there are multiple solutions, return any subset is fine.\r\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nnums: [1,2,3]\r\n\r\nResult: [1,2] (of course, [1,3] will also be ok)\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nnums: [1,2,4,8]\r\n\r\nResult: [1,2,4,8]\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/stomach_ache">@Stomach_ache</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a positive integer <i>num</i>, write a function which returns True if <i>num</i> is a perfect square else False.</p>\n<p>\n<b>Note:</b> <b>Do not</b> use any built-in library function such as <code>sqrt</code>.\r\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nInput: 16\r\nReturns: True\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nInput: 14\r\nReturns: False\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/elmirap">@elmirap</a> for adding this problem and creating all test cases.</p></p>\n</div>'


367 : valid-perfect-square
366 : find-leaves-of-binary-tree


b'<div class="question-description">\n<p><p>Given a positive integer <i>num</i>, write a function which returns True if <i>num</i> is a perfect square else False.</p>\n<p>\n<b>Note:</b> <b>Do not</b> use any built-in library function such as <code>sqrt</code>.\r\n</p>\n<p><b>Example 1:</b>\n<pre>\r\nInput: 16\r\nReturns: True\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nInput: 14\r\nReturns: False\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/elmirap">@elmirap</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


366 : find-leaves-of-binary-tree
365 : water-and-jug-problem


No Description




b'<div class="question-description">\n<p><p>You are given two jugs with capacities <i>x</i> and <i>y</i> litres. There is an infinite amount of water supply available.\r\nYou need to determine whether it is possible to measure exactly <i>z</i> litres using these two jugs.</p>\n<p>If <i>z</i> liters of water is measurable, you must have <i>z</i> liters of water contained within <b>one or both buckets</b> by the end.</p>\n<p>\r\nOperations allowed:\r\n<ul>\n<li>Fill any of the jugs completely with water.</li>\n<li>Empty any of the jugs.</li>\n<li>Pour water from one jug into another till the other jug is completely full or the first jug itself is empty.</li>\n</ul>\n</p>\n<p><b>Example 1:</b> (From the famous <a href="https://www.youtube.com/watch?v=BVtQNK_ZUJg" target="_blank"><i>"Die Hard"</i> example</a>)\r\n<pre>\r\nInput: x = 3, y = 5, z = 4\r\nOutput: True\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nInput: x = 2, y = 6, z = 5\r\nOutput: False\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/vinod23">@vinod23</a> for adding this problem and creating all test cases.</p></p>\n</div>'


365 : water-and-jug-problem
364 : nested-list-weight-sum-ii


b'<div class="question-description">\n<p><p>You are given two jugs with capacities <i>x</i> and <i>y</i> litres. There is an infinite amount of water supply available.\r\nYou need to determine whether it is possible to measure exactly <i>z</i> litres using these two jugs.</p>\n<p>If <i>z</i> liters of water is measurable, you must have <i>z</i> liters of water contained within <b>one or both buckets</b> by the end.</p>\n<p>\r\nOperations allowed:\r\n<ul>\n<li>Fill any of the jugs completely with water.</li>\n<li>Empty any of the jugs.</li>\n<li>Pour water from one jug into another till the other jug is completely full or the first jug itself is empty.</li>\n</ul>\n</p>\n<p><b>Example 1:</b> (From the famous <a href="https://www.youtube.com/watch?v=BVtQNK_ZUJg" target="_blank"><i>"Die Hard"</i> example</a>)\r\n<pre>\r\nInput: x = 3, y = 5, z = 4\r\nOutput: True\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\nInput: x = 2, y = 6, z = 5\r\nOutput: False\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/vinod23">@vinod23</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


364 : nested-list-weight-sum-ii
363 : max-sum-of-rectangle-no-larger-than-k


No Description




b'<div class="question-description">\n<p><p>Given a non-empty 2D matrix <i>matrix</i> and an integer <i>k</i>, find the max sum of a rectangle in the <i>matrix</i> such that its sum is no larger than <i>k</i>.</p>\n<p><b>Example:</b><br/>\n<pre>Given matrix = [\r\n  [1,  0, 1],\r\n  [0, -2, 3]\r\n]\r\nk = 2\r\n</pre>\n</p>\n<p>The answer is <code>2</code>. Because the sum of rectangle <code>[[0, 1], [-2, 3]]</code> is 2 and 2 is the max number no larger than k (k = 2).</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The rectangle inside the matrix must have an area &gt; 0.</li>\n<li>What if the number of rows is much larger than the number of columns?</li>\n</ol>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/fujiaozhu">@fujiaozhu</a> for adding this problem and creating all test cases.</p></p>\n</div>'


363 : max-sum-of-rectangle-no-larger-than-k
362 : design-hit-counter


b'<div class="question-description">\n<p><p>Given a non-empty 2D matrix <i>matrix</i> and an integer <i>k</i>, find the max sum of a rectangle in the <i>matrix</i> such that its sum is no larger than <i>k</i>.</p>\n<p><b>Example:</b><br/>\n<pre>Given matrix = [\r\n  [1,  0, 1],\r\n  [0, -2, 3]\r\n]\r\nk = 2\r\n</pre>\n</p>\n<p>The answer is <code>2</code>. Because the sum of rectangle <code>[[0, 1], [-2, 3]]</code> is 2 and 2 is the max number no larger than k (k = 2).</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The rectangle inside the matrix must have an area &gt; 0.</li>\n<li>What if the number of rows is much larger than the number of columns?</li>\n</ol>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/fujiaozhu">@fujiaozhu</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


362 : design-hit-counter
361 : bomb-enemy


No Description




No Description


361 : bomb-enemy
360 : sort-transformed-array


No Description




No Description


360 : sort-transformed-array
359 : logger-rate-limiter


No Description




No Description


359 : logger-rate-limiter
358 : rearrange-string-k-distance-apart


No Description




No Description


358 : rearrange-string-k-distance-apart
357 : count-numbers-with-unique-digits


b'<div class="question-description">\n<p><p>Given a <b>non-negative</b> integer n, count all numbers with unique digits, x, where 0 \xe2\x89\xa4 x &lt; 10<sup>n</sup>.</p>\n<p>\n<b>Example:</b><br/>\r\nGiven n = 2, return 91. (The answer should be the total numbers in the range of 0 \xe2\x89\xa4 x &lt; 100, excluding <code>[11,22,33,44,55,66,77,88,99]</code>)\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/memoryless">@memoryless</a> for adding this problem and creating all test cases.</p></p>\n</div>'


357 : count-numbers-with-unique-digits
356 : line-reflection


No Description




b'<div class="question-description">\n<p><p>Given a <b>non-negative</b> integer n, count all numbers with unique digits, x, where 0 \xe2\x89\xa4 x &lt; 10<sup>n</sup>.</p>\n<p>\n<b>Example:</b><br/>\r\nGiven n = 2, return 91. (The answer should be the total numbers in the range of 0 \xe2\x89\xa4 x &lt; 100, excluding <code>[11,22,33,44,55,66,77,88,99]</code>)\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/memoryless">@memoryless</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


356 : line-reflection
355 : design-twitter


No Description




b'<div class="question-description">\n<p><p>Design a simplified version of Twitter where users can post tweets, follow/unfollow another user and is able to see the 10 most recent tweets in the user\'s news feed. Your design should support the following methods:</p>\n<p>\n<ol>\n<li><b>postTweet(userId, tweetId)</b>: Compose a new tweet.</li>\n<li><b>getNewsFeed(userId)</b>: Retrieve the 10 most recent tweet ids in the user\'s news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent.</li>\n<li><b>follow(followerId, followeeId)</b>: Follower follows a followee.</li>\n<li><b>unfollow(followerId, followeeId)</b>: Follower unfollows a followee.</li>\n</ol>\n</p>\n<p><b>Example:</b>\n<pre>\r\nTwitter twitter = new Twitter();\r\n\r\n// User 1 posts a new tweet (id = 5).\r\ntwitter.postTweet(1, 5);\r\n\r\n// User 1\'s news feed should return a list with 1 tweet id -&gt; [5].\r\ntwitter.getNewsFeed(1);\r\n\r\n// User 1 follows user 2.\r\ntwitter.follow(1, 2);\r\n\r\n// User 2 posts a new tweet (id = 6).\r\ntwitter.postTweet(2, 6);\r\n\r\n// User 1\'s news feed should return a list with 2 tweet ids -&gt; [6, 5].\r\n// Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\r\ntwitter.getNewsFeed(1);\r\n\r\n// User 1 unfollows user 2.\r\ntwitter.unfollow(1, 2);\r\n\r\n// User 1\'s news feed should return a list with 1 tweet id -&gt; [5],\r\n// since user 1 is no longer following user 2.\r\ntwitter.getNewsFeed(1);\r\n</pre>\n</p></p>\n</div>'


355 : design-twitter
354 : russian-doll-envelopes


b'<div class="question-description">\n<p><p>Design a simplified version of Twitter where users can post tweets, follow/unfollow another user and is able to see the 10 most recent tweets in the user\'s news feed. Your design should support the following methods:</p>\n<p>\n<ol>\n<li><b>postTweet(userId, tweetId)</b>: Compose a new tweet.</li>\n<li><b>getNewsFeed(userId)</b>: Retrieve the 10 most recent tweet ids in the user\'s news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent.</li>\n<li><b>follow(followerId, followeeId)</b>: Follower follows a followee.</li>\n<li><b>unfollow(followerId, followeeId)</b>: Follower unfollows a followee.</li>\n</ol>\n</p>\n<p><b>Example:</b>\n<pre>\r\nTwitter twitter = new Twitter();\r\n\r\n// User 1 posts a new tweet (id = 5).\r\ntwitter.postTweet(1, 5);\r\n\r\n// User 1\'s news feed should return a list with 1 tweet id -&gt; [5].\r\ntwitter.getNewsFeed(1);\r\n\r\n// User 1 follows user 2.\r\ntwitter.follow(1, 2);\r\n\r\n// User 2 posts a new tweet (id = 6).\r\ntwitter.postTweet(2, 6);\r\n\r\n// User 1\'s news feed should return a list with 2 tweet ids -&gt; [6, 5].\r\n// Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\r\ntwitter.getNewsFeed(1);\r\n\r\n// User 1 unfollows user 2.\r\ntwitter.unfollow(1, 2);\r\n\r\n// User 1\'s news feed should return a list with 1 tweet id -&gt; [5],\r\n// since user 1 is no longer following user 2.\r\ntwitter.getNewsFeed(1);\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You have a number of envelopes with widths and heights given as a pair of integers <code>(w, h)</code>. One envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope.</p>\n<p>\r\nWhat is the maximum number of envelopes can you Russian doll? (put one inside other)\r\n</p>\n<p><b>Example:</b><br/>\r\nGiven envelopes = <code>[[5,4],[6,4],[6,7],[2,3]]</code>, the maximum number of envelopes you can Russian doll is <code>3</code> ([2,3] =&gt; [5,4] =&gt; [6,7]).\r\n</p></p>\n</div>'


354 : russian-doll-envelopes
353 : design-snake-game


b'<div class="question-description">\n<p><p>You have a number of envelopes with widths and heights given as a pair of integers <code>(w, h)</code>. One envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope.</p>\n<p>\r\nWhat is the maximum number of envelopes can you Russian doll? (put one inside other)\r\n</p>\n<p><b>Example:</b><br/>\r\nGiven envelopes = <code>[[5,4],[6,4],[6,7],[2,3]]</code>, the maximum number of envelopes you can Russian doll is <code>3</code> ([2,3] =&gt; [5,4] =&gt; [6,7]).\r\n</p></p>\n</div>'




No Description


353 : design-snake-game
352 : data-stream-as-disjoint-intervals


No Description




b'<div class="question-description">\n<p><p>Given a data stream input of non-negative integers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>, ..., summarize the numbers seen so far as a list of disjoint intervals.</p>\n<p>For example, suppose the integers from the data stream are 1, 3, 7, 2, 6, ..., then the summary will be:</p>\n<pre>\r\n[1, 1]\r\n[1, 1], [3, 3]\r\n[1, 1], [3, 3], [7, 7]\r\n[1, 3], [7, 7]\r\n[1, 3], [6, 7]\r\n</pre>\n<p><b>Follow up:</b><br/>\r\nWhat if there are lots of merges and the number of disjoint intervals are small compared to the data stream\'s size?\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/yunhong">@yunhong</a> for adding this problem and creating most of the test cases.</p></p>\n</div>'


352 : data-stream-as-disjoint-intervals
351 : android-unlock-patterns


b'<div class="question-description">\n<p><p>Given a data stream input of non-negative integers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>, ..., summarize the numbers seen so far as a list of disjoint intervals.</p>\n<p>For example, suppose the integers from the data stream are 1, 3, 7, 2, 6, ..., then the summary will be:</p>\n<pre>\r\n[1, 1]\r\n[1, 1], [3, 3]\r\n[1, 1], [3, 3], [7, 7]\r\n[1, 3], [7, 7]\r\n[1, 3], [6, 7]\r\n</pre>\n<p><b>Follow up:</b><br/>\r\nWhat if there are lots of merges and the number of disjoint intervals are small compared to the data stream\'s size?\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://discuss.leetcode.com/user/yunhong">@yunhong</a> for adding this problem and creating most of the test cases.</p></p>\n</div>'




No Description


351 : android-unlock-patterns
350 : intersection-of-two-arrays-ii


No Description




b'<div class="question-description">\n<p><p>\r\nGiven two arrays, write a function to compute their intersection.\r\n</p>\n<p><b>Example:</b><br/>\r\nGiven <i>nums1</i> = <code>[1, 2, 2, 1]</code>, <i>nums2</i> = <code>[2, 2]</code>, return <code>[2, 2]</code>.\r\n</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>Each element in the result should appear as many times as it shows in both arrays.</li>\n<li>The result can be in any order.</li>\n</ul>\n</p>\n<p><b>Follow up:</b><br/>\n<ul>\n<li>What if the given array is already sorted? How would you optimize your algorithm?</li>\n<li>What if <i>nums1</i>\'s size is small compared to <i>nums2</i>\'s size? Which algorithm is better?</li>\n<li>What if elements of <i>nums2</i> are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?</li>\n</ul>\n</p></p>\n</div>'


350 : intersection-of-two-arrays-ii
349 : intersection-of-two-arrays


b'<div class="question-description">\n<p><p>\r\nGiven two arrays, write a function to compute their intersection.\r\n</p>\n<p><b>Example:</b><br/>\r\nGiven <i>nums1</i> = <code>[1, 2, 2, 1]</code>, <i>nums2</i> = <code>[2, 2]</code>, return <code>[2, 2]</code>.\r\n</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>Each element in the result should appear as many times as it shows in both arrays.</li>\n<li>The result can be in any order.</li>\n</ul>\n</p>\n<p><b>Follow up:</b><br/>\n<ul>\n<li>What if the given array is already sorted? How would you optimize your algorithm?</li>\n<li>What if <i>nums1</i>\'s size is small compared to <i>nums2</i>\'s size? Which algorithm is better?</li>\n<li>What if elements of <i>nums2</i> are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?</li>\n</ul>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two arrays, write a function to compute their intersection.\r\n</p>\n<p><b>Example:</b><br/>\r\nGiven <i>nums1</i> = <code>[1, 2, 2, 1]</code>, <i>nums2</i> = <code>[2, 2]</code>, return <code>[2]</code>.\r\n</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>Each element in the result must be unique.</li>\n<li>The result can be in any order.</li>\n</ul>\n</p></p>\n</div>'


349 : intersection-of-two-arrays
348 : design-tic-tac-toe


b'<div class="question-description">\n<p><p>\r\nGiven two arrays, write a function to compute their intersection.\r\n</p>\n<p><b>Example:</b><br/>\r\nGiven <i>nums1</i> = <code>[1, 2, 2, 1]</code>, <i>nums2</i> = <code>[2, 2]</code>, return <code>[2]</code>.\r\n</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>Each element in the result must be unique.</li>\n<li>The result can be in any order.</li>\n</ul>\n</p></p>\n</div>'




No Description


348 : design-tic-tac-toe
347 : top-k-frequent-elements


No Description




b'<div class="question-description">\n<p><p>\r\nGiven a non-empty array of integers, return the <b><i>k</i></b> most frequent elements.</p>\n<p>For example,<br/>\r\nGiven <code>[1,1,1,2,2,3]</code> and k = 2, return <code>[1,2]</code>.\r\n</p>\n<p><b>Note: </b><br/>\n<ul>\n<li>You may assume <i>k</i> is always valid, 1 ? <i>k</i> ? number of unique elements.</li>\n<li>Your algorithm\'s time complexity <b>must be</b> better than O(<i>n</i> log <i>n</i>), where <i>n</i> is the array\'s size.</li>\n</ul></p></p>\n</div>'


347 : top-k-frequent-elements
346 : moving-average-from-data-stream


b'<div class="question-description">\n<p><p>\r\nGiven a non-empty array of integers, return the <b><i>k</i></b> most frequent elements.</p>\n<p>For example,<br/>\r\nGiven <code>[1,1,1,2,2,3]</code> and k = 2, return <code>[1,2]</code>.\r\n</p>\n<p><b>Note: </b><br/>\n<ul>\n<li>You may assume <i>k</i> is always valid, 1 ? <i>k</i> ? number of unique elements.</li>\n<li>Your algorithm\'s time complexity <b>must be</b> better than O(<i>n</i> log <i>n</i>), where <i>n</i> is the array\'s size.</li>\n</ul></p></p>\n</div>'




No Description


346 : moving-average-from-data-stream
345 : reverse-vowels-of-a-string


No Description




b'<div class="question-description">\n<p><p>Write a function that takes a string as input and reverse only the vowels of a string.</p>\n<p>\n<b>Example 1:</b><br/>\r\nGiven s = "hello", return "holle".\r\n</p>\n<p>\n<b>Example 2:</b><br/>\r\nGiven s = "leetcode", return "leotcede".\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nThe vowels does not include the letter "y".\r\n</p></p>\n</div>'


345 : reverse-vowels-of-a-string
344 : reverse-string


b'<div class="question-description">\n<p><p>Write a function that takes a string as input and reverse only the vowels of a string.</p>\n<p>\n<b>Example 1:</b><br/>\r\nGiven s = "hello", return "holle".\r\n</p>\n<p>\n<b>Example 2:</b><br/>\r\nGiven s = "leetcode", return "leotcede".\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nThe vowels does not include the letter "y".\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Write a function that takes a string as input and returns the string reversed.</p>\n<p>\n<b>Example:</b><br/>\r\nGiven s = "hello", return "olleh".\r\n</p></p>\n</div>'


344 : reverse-string
343 : integer-break


b'<div class="question-description">\n<p><p>Write a function that takes a string as input and returns the string reversed.</p>\n<p>\n<b>Example:</b><br/>\r\nGiven s = "hello", return "olleh".\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a positive integer <i>n</i>, break it into the sum of <b>at least</b> two positive integers and maximize the product of those integers. Return the maximum product you can get.\r\n</p>\n<p>\r\nFor example, given <i>n</i> = 2, return 1 (2 = 1 + 1); given <i>n</i> = 10, return 36 (10 = 3 + 3 + 4).\r\n</p>\n<p>\n<b>Note</b>: You may assume that <i>n</i> is not less than 2 and not larger than 58.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'


343 : integer-break
342 : power-of-four


b'<div class="question-description">\n<p><p>\r\nGiven a positive integer <i>n</i>, break it into the sum of <b>at least</b> two positive integers and maximize the product of those integers. Return the maximum product you can get.\r\n</p>\n<p>\r\nFor example, given <i>n</i> = 2, return 1 (2 = 1 + 1); given <i>n</i> = 10, return 36 (10 = 3 + 3 + 4).\r\n</p>\n<p>\n<b>Note</b>: You may assume that <i>n</i> is not less than 2 and not larger than 58.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an integer (signed 32 bits), write a function to check whether it is a power of 4.\r\n</p>\n<p><b>Example:</b><br/>\r\nGiven num = 16, return true.\r\nGiven num = 5, return false.\r\n</p>\n<p>\n<b>Follow up</b>: Could you solve it without loops/recursion?\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/yukuairoy">@yukuairoy </a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


342 : power-of-four
341 : flatten-nested-list-iterator


b'<div class="question-description">\n<p><p>\r\nGiven an integer (signed 32 bits), write a function to check whether it is a power of 4.\r\n</p>\n<p><b>Example:</b><br/>\r\nGiven num = 16, return true.\r\nGiven num = 5, return false.\r\n</p>\n<p>\n<b>Follow up</b>: Could you solve it without loops/recursion?\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/yukuairoy">@yukuairoy </a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a nested list of integers, implement an iterator to flatten it.</p>\n<p>Each element is either an integer, or a list -- whose elements may also be integers or other lists.</p>\n<p><b>Example 1:</b><br/>\r\nGiven the list <code>[[1,1],2,[1,1]]</code>,\r\n<p>\r\nBy calling <i>next</i> repeatedly until <i>hasNext</i> returns false, the order of elements returned by <i>next</i> should be: <code>[1,1,2,1,1]</code>.\r\n</p>\n</p>\n<p><b>Example 2:</b><br/>\r\nGiven the list <code>[1,[4,[6]]]</code>,\r\n<p>\r\nBy calling <i>next</i> repeatedly until <i>hasNext</i> returns false, the order of elements returned by <i>next</i> should be: <code>[1,4,6]</code>.\r\n</p>\n</p></p>\n</div>'


341 : flatten-nested-list-iterator
340 : longest-substring-with-at-most-k-distinct-characters


b'<div class="question-description">\n<p><p>Given a nested list of integers, implement an iterator to flatten it.</p>\n<p>Each element is either an integer, or a list -- whose elements may also be integers or other lists.</p>\n<p><b>Example 1:</b><br/>\r\nGiven the list <code>[[1,1],2,[1,1]]</code>,\r\n<p>\r\nBy calling <i>next</i> repeatedly until <i>hasNext</i> returns false, the order of elements returned by <i>next</i> should be: <code>[1,1,2,1,1]</code>.\r\n</p>\n</p>\n<p><b>Example 2:</b><br/>\r\nGiven the list <code>[1,[4,[6]]]</code>,\r\n<p>\r\nBy calling <i>next</i> repeatedly until <i>hasNext</i> returns false, the order of elements returned by <i>next</i> should be: <code>[1,4,6]</code>.\r\n</p>\n</p></p>\n</div>'




No Description


340 : longest-substring-with-at-most-k-distinct-characters
339 : nested-list-weight-sum


No Description




No Description


339 : nested-list-weight-sum
338 : counting-bits


b'<div class="question-description">\n<p><p>Given a non negative integer number <b>num</b>. For every numbers <b>i</b> in the range <b>0 \xe2\x89\xa4 i \xe2\x89\xa4 num</b> calculate the number of 1\'s in their binary representation and return them as an array.\r\n</p>\n<p>\n<b>Example:</b></p></p></div>'


338 : counting-bits
337 : house-robber-iii


No Description




b'<div class="question-description">\n<p><p>Given a non negative integer number <b>num</b>. For every numbers <b>i</b> in the range <b>0 \xe2\x89\xa4 i \xe2\x89\xa4 num</b> calculate the number of 1\'s in their binary representation and return them as an array.\r\n</p>\n<p>\n<b>Example:</b></p></p></div>'




b'<div class="question-description">\n<p><p>\r\nThe thief has found himself a new place for his thievery again. There is only one entrance to this area, called the "root." Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that "all houses in this place forms a binary tree". It will automatically contact the police if two directly-linked houses were broken into on the same night.\r\n</p>\n<p>\r\nDetermine the maximum amount of money the thief can rob tonight without alerting the police.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n     <font color="red">3</font>\r\n    / \\\r\n   2   3\r\n    \\   \\ \r\n     <font color="red">3   1</font>\r\n</pre>\r\nMaximum amount of money the thief can rob = <font color="red">3</font> + <font color="red">3</font> + <font color="red">1</font> = <b>7</b>.\r\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n     3\r\n    / \\\r\n   <font color="red">4</font>   <font color="red">5</font>\r\n  / \\   \\ \r\n 1   3   1\r\n</pre>\r\nMaximum amount of money the thief can rob = <font color="red">4</font> + <font color="red">5</font> = <b>9</b>.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


337 : house-robber-iii
336 : palindrome-pairs


b'<div class="question-description">\n<p><p>\r\nThe thief has found himself a new place for his thievery again. There is only one entrance to this area, called the "root." Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that "all houses in this place forms a binary tree". It will automatically contact the police if two directly-linked houses were broken into on the same night.\r\n</p>\n<p>\r\nDetermine the maximum amount of money the thief can rob tonight without alerting the police.\r\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n     <font color="red">3</font>\r\n    / \\\r\n   2   3\r\n    \\   \\ \r\n     <font color="red">3   1</font>\r\n</pre>\r\nMaximum amount of money the thief can rob = <font color="red">3</font> + <font color="red">3</font> + <font color="red">1</font> = <b>7</b>.\r\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n     3\r\n    / \\\r\n   <font color="red">4</font>   <font color="red">5</font>\r\n  / \\   \\ \r\n 1   3   1\r\n</pre>\r\nMaximum amount of money the thief can rob = <font color="red">4</font> + <font color="red">5</font> = <b>9</b>.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\n    Given a list of <b>unique</b> words, find all pairs of <b><i>distinct</i></b> indices <code>(i, j)</code> in the given list, so that the concatenation of the two words, i.e. <code>words[i] + words[j]</code> is a palindrome.\r\n</p>\n<p>\n<b>Example 1:</b><br/>\r\n    Given <code>words</code> = <code>["bat", "tab", "cat"]</code><br/>\r\n    Return <code>[[0, 1], [1, 0]]</code><br/>\r\n    The palindromes are <code>["battab", "tabbat"]</code><br/>\n</p>\n<p>\n<b>Example 2:</b><br/>\r\n    Given <code>words</code> = <code>["abcd", "dcba", "lls", "s", "sssll"]</code><br/>\r\n    Return <code>[[0, 1], [1, 0], [3, 2], [2, 4]]</code><br/>\r\n    The palindromes are <code>["dcbaabcd", "abcddcba", "slls", "llssssll"]</code><br/>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


336 : palindrome-pairs
335 : self-crossing


b'<div class="question-description">\n<p><p>\r\n    You are given an array <i>x</i> of <code>n</code> positive numbers. You start at point <code>(0,0)</code> and moves <code>x[0]</code> metres to the north, then <code>x[1]</code> metres to the west,\r\n    <code>x[2]</code> metres to the south,\r\n    <code>x[3]</code> metres to the east and so on. In other words, after each move your direction changes\r\n    counter-clockwise.\r\n</p>\n<p>\r\n    Write a one-pass algorithm with <code>O(1)</code> extra space to determine, if your path crosses itself, or not.\r\n</p>\n<p>\n<b>Example 1:</b><br/>\n<pre>\r\nGiven <i>x</i> = <code>[2, 1, 1, 2]</code>,\r\n?????\r\n?   ?\r\n???????&gt;\r\n    ?\r\n\r\nReturn <b>true</b> (self crossing)\r\n</pre>\n</p>\n<p>\n<b>Example 2:</b><br/>\n<pre>\r\nGiven <i>x</i> = <code>[1, 2, 3, 4]</code>,\r\n????????\r\n?      ?\r\n?\r\n?\r\n?????????????&gt;\r\n\r\nReturn <b>false</b> (not self crossing)\r\n</pre>\n</p>\n<p>\n<b>Example 3:</b><br/>\n<pre>\r\nGiven <i>x</i> = <code>[1, 1, 1, 1]</code>,\r\n?????\r\n?   ?\r\n?????&gt;\r\n\r\nReturn <b>true</b> (self crossing)\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\n    Given a list of <b>unique</b> words, find all pairs of <b><i>distinct</i></b> indices <code>(i, j)</code> in the given list, so that the concatenation of the two words, i.e. <code>words[i] + words[j]</code> is a palindrome.\r\n</p>\n<p>\n<b>Example 1:</b><br/>\r\n    Given <code>words</code> = <code>["bat", "tab", "cat"]</code><br/>\r\n    Return <code>[[0, 1], [1, 0]]</code><br/>\r\n    The palindromes are <code>["battab", "tabbat"]</code><br/>\n</p>\n<p>\n<b>Example 2:</b><br/>\r\n    Given <code>words</code> = <code>["abcd", "dcba", "lls", "s", "sssll"]</code><br/>\r\n    Return <code>[[0, 1], [1, 0], [3, 2], [2, 4]]</code><br/>\r\n    The palindromes are <code>["dcbaabcd", "abcddcba", "slls", "llssssll"]</code><br/>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


335 : self-crossing
334 : increasing-triplet-subsequence


b'<div class="question-description">\n<p><p>\r\n    You are given an array <i>x</i> of <code>n</code> positive numbers. You start at point <code>(0,0)</code> and moves <code>x[0]</code> metres to the north, then <code>x[1]</code> metres to the west,\r\n    <code>x[2]</code> metres to the south,\r\n    <code>x[3]</code> metres to the east and so on. In other words, after each move your direction changes\r\n    counter-clockwise.\r\n</p>\n<p>\r\n    Write a one-pass algorithm with <code>O(1)</code> extra space to determine, if your path crosses itself, or not.\r\n</p>\n<p>\n<b>Example 1:</b><br/>\n<pre>\r\nGiven <i>x</i> = <code>[2, 1, 1, 2]</code>,\r\n?????\r\n?   ?\r\n???????&gt;\r\n    ?\r\n\r\nReturn <b>true</b> (self crossing)\r\n</pre>\n</p>\n<p>\n<b>Example 2:</b><br/>\n<pre>\r\nGiven <i>x</i> = <code>[1, 2, 3, 4]</code>,\r\n????????\r\n?      ?\r\n?\r\n?\r\n?????????????&gt;\r\n\r\nReturn <b>false</b> (not self crossing)\r\n</pre>\n</p>\n<p>\n<b>Example 3:</b><br/>\n<pre>\r\nGiven <i>x</i> = <code>[1, 1, 1, 1]</code>,\r\n?????\r\n?   ?\r\n?????&gt;\r\n\r\nReturn <b>true</b> (self crossing)\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\r\n</p>\n<p>\r\nFormally the function should:<br/>\n<blockquote>Return true if there exists <i>i, j, k </i> <br/>\r\nsuch that <i>arr[i]</i> &lt; <i>arr[j]</i> &lt; <i>arr[k]</i> given 0 \xe2\x89\xa4 <i>i</i> &lt; <i>j</i> &lt; <i>k</i> \xe2\x89\xa4 <i>n</i>-1 </blockquote></p></p></div>'


334 : increasing-triplet-subsequence
333 : largest-bst-subtree


b'<div class="question-description">\n<p><p>\r\nGiven an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.\r\n</p>\n<p>\r\nFormally the function should:<br/>\n<blockquote>Return true if there exists <i>i, j, k </i> <br/>\r\nsuch that <i>arr[i]</i> &lt; <i>arr[j]</i> &lt; <i>arr[k]</i> given 0 \xe2\x89\xa4 <i>i</i> &lt; <i>j</i> &lt; <i>k</i> \xe2\x89\xa4 <i>n</i>-1 </blockquote></p></p></div>'




No Description


333 : largest-bst-subtree
332 : reconstruct-itinerary


b'<div class="question-description">\n<p><p>Given a list of airline tickets represented by pairs of departure and arrival airports <code>[from, to]</code>, reconstruct the itinerary in order. All of the tickets belong to a man who departs from <code>JFK</code>. Thus, the itinerary must begin with <code>JFK</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\n<ol>\n<li>If there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string. For example, the itinerary <code>["JFK", "LGA"]</code> has a smaller lexical order than <code>["JFK", "LGB"]</code>.</li>\n<li>All airports are represented by three capital letters (IATA code).</li>\n<li>You may assume all tickets form at least one valid itinerary.</li>\n</ol>\n</p>\n<p>\n<b>Example 1:</b><br/>\n<code>tickets</code> = <code>[["MUC", "LHR"], ["JFK", "MUC"], ["SFO", "SJC"], ["LHR", "SFO"]]</code><br/>\r\n    Return <code>["JFK", "MUC", "LHR", "SFO", "SJC"]</code>.<br/>\n</p>\n<p>\n<b>Example 2:</b><br/>\n<code>tickets</code> = <code>[["JFK","SFO"],["JFK","ATL"],["SFO","ATL"],["ATL","JFK"],["ATL","SFO"]]</code><br/>\r\n    Return <code>["JFK","ATL","JFK","SFO","ATL","SFO"]</code>.<br/>\r\n    Another possible reconstruction is <code>["JFK","SFO","ATL","JFK","ATL","SFO"]</code>. But it is larger in lexical order.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


332 : reconstruct-itinerary
331 : verify-preorder-serialization-of-a-binary-tree


No Description




b'<div class="question-description">\n<p><p>Given a list of airline tickets represented by pairs of departure and arrival airports <code>[from, to]</code>, reconstruct the itinerary in order. All of the tickets belong to a man who departs from <code>JFK</code>. Thus, the itinerary must begin with <code>JFK</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\n<ol>\n<li>If there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string. For example, the itinerary <code>["JFK", "LGA"]</code> has a smaller lexical order than <code>["JFK", "LGB"]</code>.</li>\n<li>All airports are represented by three capital letters (IATA code).</li>\n<li>You may assume all tickets form at least one valid itinerary.</li>\n</ol>\n</p>\n<p>\n<b>Example 1:</b><br/>\n<code>tickets</code> = <code>[["MUC", "LHR"], ["JFK", "MUC"], ["SFO", "SJC"], ["LHR", "SFO"]]</code><br/>\r\n    Return <code>["JFK", "MUC", "LHR", "SFO", "SJC"]</code>.<br/>\n</p>\n<p>\n<b>Example 2:</b><br/>\n<code>tickets</code> = <code>[["JFK","SFO"],["JFK","ATL"],["SFO","ATL"],["ATL","JFK"],["ATL","SFO"]]</code><br/>\r\n    Return <code>["JFK","ATL","JFK","SFO","ATL","SFO"]</code>.<br/>\r\n    Another possible reconstruction is <code>["JFK","SFO","ATL","JFK","ATL","SFO"]</code>. But it is larger in lexical order.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>One way to serialize a binary tree is to use pre-order traversal. When we encounter a non-null node, we record the node\'s value. If it is a null node, we record using a sentinel value such as <code>#</code>.</p>\n<pre>\r\n     _9_\r\n    /   \\\r\n   3     2\r\n  / \\   / \\\r\n 4   1  #  6\r\n/ \\ / \\   / \\\r\n# # # #   # #\r\n</pre>\n<p>For example, the above binary tree can be serialized to the string <code>"9,3,4,#,#,1,#,#,2,#,6,#,#"</code>, where <code>#</code> represents a null node.\r\n</p>\n<p>Given a string of comma separated values, verify whether it is a correct preorder traversal serialization of a binary tree. Find an algorithm without reconstructing the tree.</p>\n<p>Each comma separated value in the string must be either an integer or a character <code>\'#\'</code> representing <code>null</code> pointer.</p>\n<p>You may assume that the input format is always valid, for example it could never contain two consecutive commas such as <code>"1,,3"</code>.</p>\n<p><strong>Example 1:</strong><br/>\n<code>"9,3,4,#,#,1,#,#,2,#,6,#,#"</code><br/>\r\nReturn <code>true</code></p>\n<p><strong>Example 2:</strong><br/>\n<code>"1,#"</code><br/>\r\nReturn <code>false</code></p>\n<p><strong>Example 3:</strong><br/>\n<code>"9,#,#,1"</code><br/>\r\nReturn <code>false</code></p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


331 : verify-preorder-serialization-of-a-binary-tree
330 : patching-array


b'<div class="question-description">\n<p><p>One way to serialize a binary tree is to use pre-order traversal. When we encounter a non-null node, we record the node\'s value. If it is a null node, we record using a sentinel value such as <code>#</code>.</p>\n<pre>\r\n     _9_\r\n    /   \\\r\n   3     2\r\n  / \\   / \\\r\n 4   1  #  6\r\n/ \\ / \\   / \\\r\n# # # #   # #\r\n</pre>\n<p>For example, the above binary tree can be serialized to the string <code>"9,3,4,#,#,1,#,#,2,#,6,#,#"</code>, where <code>#</code> represents a null node.\r\n</p>\n<p>Given a string of comma separated values, verify whether it is a correct preorder traversal serialization of a binary tree. Find an algorithm without reconstructing the tree.</p>\n<p>Each comma separated value in the string must be either an integer or a character <code>\'#\'</code> representing <code>null</code> pointer.</p>\n<p>You may assume that the input format is always valid, for example it could never contain two consecutive commas such as <code>"1,,3"</code>.</p>\n<p><strong>Example 1:</strong><br/>\n<code>"9,3,4,#,#,1,#,#,2,#,6,#,#"</code><br/>\r\nReturn <code>true</code></p>\n<p><strong>Example 2:</strong><br/>\n<code>"1,#"</code><br/>\r\nReturn <code>false</code></p>\n<p><strong>Example 3:</strong><br/>\n<code>"9,#,#,1"</code><br/>\r\nReturn <code>false</code></p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a sorted positive integer array <i>nums</i> and an integer <i>n</i>, add/patch elements to the array such that any number in range <code>[1, n]</code> inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.\r\n</p>\n<p><strong>Example 1:</strong><br/>\n<i>nums</i> = <code>[1, 3]</code>, <i>n</i> = <code>6</code><br/>\r\nReturn <code>1</code>.</p>\n<p>Combinations of <i>nums</i> are <code>[1], [3], [1,3]</code>, which form possible sums of: <code>1, 3, 4</code>.<br/>\r\nNow if we add/patch <code>2</code> to <i>nums</i>, the combinations are: <code>[1], [2], [3], [1,3], [2,3], [1,2,3]</code>.<br/>\r\nPossible sums are <code>1, 2, 3, 4, 5, 6</code>, which now covers the range <code>[1, 6]</code>.<br/>\r\nSo we only need <code>1</code> patch.</p>\n<p><strong>Example 2:</strong><br/>\n<i>nums</i> = <code>[1, 5, 10]</code>, <i>n</i> = <code>20</code><br/>\r\nReturn <code>2</code>.<br/>\r\nThe two patches can be <code>[2, 4]</code>.</p>\n<p><strong>Example 3:</strong><br/>\n<i>nums</i> = <code>[1, 2, 2]</code>, <i>n</i> = <code>5</code><br/>\r\nReturn <code>0</code>.<br/>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</br></p></p>\n</p></div>'


330 : patching-array
329 : longest-increasing-path-in-a-matrix


b'<div class="question-description">\n<p><p>Given a sorted positive integer array <i>nums</i> and an integer <i>n</i>, add/patch elements to the array such that any number in range <code>[1, n]</code> inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.\r\n</p>\n<p><strong>Example 1:</strong><br/>\n<i>nums</i> = <code>[1, 3]</code>, <i>n</i> = <code>6</code><br/>\r\nReturn <code>1</code>.</p>\n<p>Combinations of <i>nums</i> are <code>[1], [3], [1,3]</code>, which form possible sums of: <code>1, 3, 4</code>.<br/>\r\nNow if we add/patch <code>2</code> to <i>nums</i>, the combinations are: <code>[1], [2], [3], [1,3], [2,3], [1,2,3]</code>.<br/>\r\nPossible sums are <code>1, 2, 3, 4, 5, 6</code>, which now covers the range <code>[1, 6]</code>.<br/>\r\nSo we only need <code>1</code> patch.</p>\n<p><strong>Example 2:</strong><br/>\n<i>nums</i> = <code>[1, 5, 10]</code>, <i>n</i> = <code>20</code><br/>\r\nReturn <code>2</code>.<br/>\r\nThe two patches can be <code>[2, 4]</code>.</p>\n<p><strong>Example 3:</strong><br/>\n<i>nums</i> = <code>[1, 2, 2]</code>, <i>n</i> = <code>5</code><br/>\r\nReturn <code>0</code>.<br/>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</br></p></p>\n</p></div>'




b'<div class="question-description">\n<p><p>Given an integer matrix, find the length of the longest increasing path.</p>\n<p>\r\nFrom each cell, you can either move to four directions: left, right, up or down. You may NOT move diagonally or move outside of the boundary (i.e. wrap-around is not allowed).</p>\n<p>\n<b>Example 1:</b>\n<pre>\r\nnums = [\r\n  [<font color="red">9</font>,9,4],\r\n  [<font color="red">6</font>,6,8],\r\n  [<font color="red">2</font>,<font color="red">1</font>,1]\r\n]\r\n</pre>\n</p>\n<p>\r\nReturn <code>4</code><br/>\r\n\r\nThe longest increasing path is <code>[1, 2, 6, 9]</code>.</p>\n<p>\n<b>Example 2:</b>\n<pre>\r\nnums = [\r\n  [<font color="red">3</font>,<font color="red">4</font>,<font color="red">5</font>],\r\n  [3,2,<font color="red">6</font>],\r\n  [2,2,1]\r\n]\r\n</pre>\n</p>\n<p>\r\nReturn <code>4</code><br/>\r\n\r\nThe longest increasing path is <code>[3, 4, 5, 6]</code>. Moving diagonally is not allowed.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


329 : longest-increasing-path-in-a-matrix
328 : odd-even-linked-list


b'<div class="question-description">\n<p><p>Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.</p>\n<p>You should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.<p>\n<p>\n<b>Example:</b><br/>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code>,<br/>\r\nreturn <code>1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULL</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nThe relative order inside both the even and odd groups should remain as it was in the input. <br/>\r\nThe first node is considered odd, the second node even and so on ...\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/DjangoUnchained">@DjangoUnchained</a> for adding this problem and creating all test cases.</p></p>\n</p></p></div>'




b'<div class="question-description">\n<p><p>Given an integer matrix, find the length of the longest increasing path.</p>\n<p>\r\nFrom each cell, you can either move to four directions: left, right, up or down. You may NOT move diagonally or move outside of the boundary (i.e. wrap-around is not allowed).</p>\n<p>\n<b>Example 1:</b>\n<pre>\r\nnums = [\r\n  [<font color="red">9</font>,9,4],\r\n  [<font color="red">6</font>,6,8],\r\n  [<font color="red">2</font>,<font color="red">1</font>,1]\r\n]\r\n</pre>\n</p>\n<p>\r\nReturn <code>4</code><br/>\r\n\r\nThe longest increasing path is <code>[1, 2, 6, 9]</code>.</p>\n<p>\n<b>Example 2:</b>\n<pre>\r\nnums = [\r\n  [<font color="red">3</font>,<font color="red">4</font>,<font color="red">5</font>],\r\n  [3,2,<font color="red">6</font>],\r\n  [2,2,1]\r\n]\r\n</pre>\n</p>\n<p>\r\nReturn <code>4</code><br/>\r\n\r\nThe longest increasing path is <code>[3, 4, 5, 6]</code>. Moving diagonally is not allowed.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


328 : odd-even-linked-list
327 : count-of-range-sum


b'<div class="question-description">\n<p><p>Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.</p>\n<p>You should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.<p>\n<p>\n<b>Example:</b><br/>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code>,<br/>\r\nreturn <code>1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULL</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nThe relative order inside both the even and odd groups should remain as it was in the input. <br/>\r\nThe first node is considered odd, the second node even and so on ...\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/DjangoUnchained">@DjangoUnchained</a> for adding this problem and creating all test cases.</p></p>\n</p></p></div>'




b'<div class="question-description">\n<p><p>\r\n    Given an integer array <code>nums</code>, return the number of range sums that lie in <code>[lower, upper]</code> inclusive.<br/>\r\n\r\n    Range sum <code>S(i, j)</code> is defined as the sum of the elements in <code>nums</code> between indices <code>i</code> and \r\n    <code>j</code> (<code>i</code> ? <code>j</code>), inclusive.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\n    A naive algorithm of <i>O</i>(<i>n</i><sup>2</sup>) is trivial. You MUST do better than that.\r\n</p>\n<p>\n<b>Example:</b><br/>\r\n    Given <i>nums</i> = <code>[-2, 5, -1]</code>, <i>lower</i> = <code>-2</code>, <i>upper</i> = <code>2</code>,<br/>\r\n    Return <code>3</code>.<br/>\r\n    The three ranges are : <code>[0, 0]</code>, <code>[2, 2]</code>, <code>[0, 2]</code> and their respective sums are: <code>-2, -1, 2</code>.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


327 : count-of-range-sum
326 : power-of-three


b'<div class="question-description">\n<p><p>\r\n    Given an integer array <code>nums</code>, return the number of range sums that lie in <code>[lower, upper]</code> inclusive.<br/>\r\n\r\n    Range sum <code>S(i, j)</code> is defined as the sum of the elements in <code>nums</code> between indices <code>i</code> and \r\n    <code>j</code> (<code>i</code> ? <code>j</code>), inclusive.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\n    A naive algorithm of <i>O</i>(<i>n</i><sup>2</sup>) is trivial. You MUST do better than that.\r\n</p>\n<p>\n<b>Example:</b><br/>\r\n    Given <i>nums</i> = <code>[-2, 5, -1]</code>, <i>lower</i> = <code>-2</code>, <i>upper</i> = <code>2</code>,<br/>\r\n    Return <code>3</code>.<br/>\r\n    The three ranges are : <code>[0, 0]</code>, <code>[2, 2]</code>, <code>[0, 2]</code> and their respective sums are: <code>-2, -1, 2</code>.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\n    Given an integer, write a function to determine if it is a power of three.\r\n</p>\n<p>\n<b>Follow up:</b><br/>\r\n    Could you do it without using any loop / recursion?\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


326 : power-of-three
325 : maximum-size-subarray-sum-equals-k


b'<div class="question-description">\n<p><p>\r\n    Given an integer, write a function to determine if it is a power of three.\r\n</p>\n<p>\n<b>Follow up:</b><br/>\r\n    Could you do it without using any loop / recursion?\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




No Description


325 : maximum-size-subarray-sum-equals-k
324 : wiggle-sort-ii


b'<div class="question-description">\n<p><p>\r\n    Given an unsorted array <code>nums</code>, reorder it such that\r\n    <code>nums[0] &lt; nums[1] &gt; nums[2] &lt; nums[3]...</code>.\r\n</p>\n<p>\n<b>Example:</b><br/>\r\n    (1) Given <code>nums = [1, 5, 1, 1, 6, 4]</code>, one possible answer is <code>[1, 4, 1, 5, 1, 6]</code>. <br/>\r\n    (2) Given <code>nums = [1, 3, 2, 2, 3, 1]</code>, one possible answer is <code>[2, 3, 1, 3, 1, 2]</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\n    You may assume all input has valid answer.\r\n</p>\n<p>\n<b>Follow Up:</b><br/>\r\n    Can you do it in O(n) time and/or in-place with O(1) extra space?\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


324 : wiggle-sort-ii
323 : number-of-connected-components-in-an-undirected-graph


No Description




b'<div class="question-description">\n<p><p>\r\n    Given an unsorted array <code>nums</code>, reorder it such that\r\n    <code>nums[0] &lt; nums[1] &gt; nums[2] &lt; nums[3]...</code>.\r\n</p>\n<p>\n<b>Example:</b><br/>\r\n    (1) Given <code>nums = [1, 5, 1, 1, 6, 4]</code>, one possible answer is <code>[1, 4, 1, 5, 1, 6]</code>. <br/>\r\n    (2) Given <code>nums = [1, 3, 2, 2, 3, 1]</code>, one possible answer is <code>[2, 3, 1, 3, 1, 2]</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\n    You may assume all input has valid answer.\r\n</p>\n<p>\n<b>Follow Up:</b><br/>\r\n    Can you do it in O(n) time and/or in-place with O(1) extra space?\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


323 : number-of-connected-components-in-an-undirected-graph
322 : coin-change


b'<div class="question-description">\n<p><p>\r\nYou are given coins of different denominations and a total amount of money <i>amount</i>. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return <code>-1</code>.\r\n</p>\n<p>\n<b>Example 1:</b><br/>\r\ncoins = <code>[1, 2, 5]</code>, amount = <code>11</code><br/>\r\nreturn <code>3</code> (11 = 5 + 5 + 1)\r\n</p>\n<p>\n<b>Example 2:</b><br/>\r\ncoins = <code>[2]</code>, amount = <code>3</code><br/>\r\nreturn <code>-1</code>.\r\n</p>\n<p>\n<b>Note</b>:<br/>\r\nYou may assume that you have an infinite number of each kind of coin.\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


322 : coin-change
321 : create-maximum-number


No Description




b'<div class="question-description">\n<p><p>\r\nYou are given coins of different denominations and a total amount of money <i>amount</i>. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return <code>-1</code>.\r\n</p>\n<p>\n<b>Example 1:</b><br/>\r\ncoins = <code>[1, 2, 5]</code>, amount = <code>11</code><br/>\r\nreturn <code>3</code> (11 = 5 + 5 + 1)\r\n</p>\n<p>\n<b>Example 2:</b><br/>\r\ncoins = <code>[2]</code>, amount = <code>3</code><br/>\r\nreturn <code>-1</code>.\r\n</p>\n<p>\n<b>Note</b>:<br/>\r\nYou may assume that you have an infinite number of each kind of coin.\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\n    Given two arrays of length <code>m</code> and <code>n</code> with digits <code>0-9</code> representing two numbers.\r\n    Create the maximum number of length <code>k &lt;= m + n</code> from digits of the two. The relative order of the digits\r\n    from the same array must be preserved. Return an array of the <code>k</code> digits. You should try to optimize your time and space complexity.\r\n</p>\n<p>\n<b>Example 1:</b><br/>\n</p>\n<p>\r\n    nums1 = <code>[3, 4, 6, 5]</code><br/>\r\n    nums2 = <code>[9, 1, 2, 5, 8, 3]</code><br/>\r\n    k = <code>5</code><br/>\r\n    return <code>[9, 8, 6, 5, 3]</code>\n</p>\n<p>\n<b>Example 2:</b><br/>\n</p>\n<p>\r\n    nums1 = <code>[6, 7]</code><br/>\r\n    nums2 = <code>[6, 0, 4]</code><br/>\r\n    k = <code>5</code><br/>\r\n    return <code>[6, 7, 6, 0, 4]</code>\n</p>\n<p>\n<b>Example 3:</b><br/>\n</p>\n<p>\r\n    nums1 = <code>[3, 9]</code><br/>\r\n    nums2 = <code>[8, 9]</code><br/>\r\n    k = <code>3</code><br/>\r\n    return <code>[9, 8, 9]</code>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


321 : create-maximum-number
320 : generalized-abbreviation


b'<div class="question-description">\n<p><p>\r\n    Given two arrays of length <code>m</code> and <code>n</code> with digits <code>0-9</code> representing two numbers.\r\n    Create the maximum number of length <code>k &lt;= m + n</code> from digits of the two. The relative order of the digits\r\n    from the same array must be preserved. Return an array of the <code>k</code> digits. You should try to optimize your time and space complexity.\r\n</p>\n<p>\n<b>Example 1:</b><br/>\n</p>\n<p>\r\n    nums1 = <code>[3, 4, 6, 5]</code><br/>\r\n    nums2 = <code>[9, 1, 2, 5, 8, 3]</code><br/>\r\n    k = <code>5</code><br/>\r\n    return <code>[9, 8, 6, 5, 3]</code>\n</p>\n<p>\n<b>Example 2:</b><br/>\n</p>\n<p>\r\n    nums1 = <code>[6, 7]</code><br/>\r\n    nums2 = <code>[6, 0, 4]</code><br/>\r\n    k = <code>5</code><br/>\r\n    return <code>[6, 7, 6, 0, 4]</code>\n</p>\n<p>\n<b>Example 3:</b><br/>\n</p>\n<p>\r\n    nums1 = <code>[3, 9]</code><br/>\r\n    nums2 = <code>[8, 9]</code><br/>\r\n    k = <code>3</code><br/>\r\n    return <code>[9, 8, 9]</code>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


320 : generalized-abbreviation
319 : bulb-switcher


No Description




b'<div class="question-description">\n<p><p>\r\nThere are <i>n</i> bulbs that are initially off. You first turn on all the bulbs. Then, you turn off every second bulb. On the third round, you toggle every third bulb (turning on if it\'s off or turning off if it\'s on). For the <i>i</i>th round, you toggle every <i>i</i> bulb. For the <i>n</i>th round, you only toggle the last bulb.\r\n\r\nFind how many bulbs are on after <i>n</i> rounds.\r\n</p>\n<p>\n<b>Example:</b><br/></p>\n<pre>\r\nGiven <i>n</i> = 3. <br/>\r\nAt first, the three bulbs are <b>[off, off, off]</b>.\r\nAfter first round, the three bulbs are <b>[on, on, on]</b>.\r\nAfter second round, the three bulbs are <b>[on, off, on]</b>.\r\nAfter third round, the three bulbs are <b>[on, off, off]</b>. <br/>\r\nSo you should return 1, because there is only one bulb is on.\r\n</pre></p>\n</div>'


319 : bulb-switcher
318 : maximum-product-of-word-lengths


b'<div class="question-description">\n<p><p>\r\nThere are <i>n</i> bulbs that are initially off. You first turn on all the bulbs. Then, you turn off every second bulb. On the third round, you toggle every third bulb (turning on if it\'s off or turning off if it\'s on). For the <i>i</i>th round, you toggle every <i>i</i> bulb. For the <i>n</i>th round, you only toggle the last bulb.\r\n\r\nFind how many bulbs are on after <i>n</i> rounds.\r\n</p>\n<p>\n<b>Example:</b><br/></p>\n<pre>\r\nGiven <i>n</i> = 3. <br/>\r\nAt first, the three bulbs are <b>[off, off, off]</b>.\r\nAfter first round, the three bulbs are <b>[on, on, on]</b>.\r\nAfter second round, the three bulbs are <b>[on, off, on]</b>.\r\nAfter third round, the three bulbs are <b>[on, off, off]</b>. <br/>\r\nSo you should return 1, because there is only one bulb is on.\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\n    Given a string array <code>words</code>, find the maximum value of <code>length(word[i]) * length(word[j])</code> where the two words do not share common letters.\r\n    You may assume that each word will contain only lower case letters.\r\n    If no such two words exist, return 0.\r\n</p>\n<p>\n<b>Example 1:</b><br/>\n</p>\n<p>\r\n    Given <code>["abcw", "baz", "foo", "bar", "xtfn", "abcdef"]</code><br/>\r\n    Return <code>16</code><br/>\r\n    The two words can be <code>"abcw", "xtfn"</code>.\r\n</p>\n<p>\n<b>Example 2:</b><br/>\n</p>\n<p>\r\n    Given <code>["a", "ab", "abc", "d", "cd", "bcd", "abcd"]</code><br/>\r\n    Return <code>4</code><br/>\r\n    The two words can be <code>"ab", "cd"</code>.\r\n</p>\n<p>\n<b>Example 3:</b><br/>\n</p>\n<p>\r\n    Given <code>["a", "aa", "aaa", "aaaa"]</code><br/>\r\n    Return <code>0</code><br/>\r\n    No such pair of words.    \r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


318 : maximum-product-of-word-lengths
317 : shortest-distance-from-all-buildings


b'<div class="question-description">\n<p><p>\r\n    Given a string array <code>words</code>, find the maximum value of <code>length(word[i]) * length(word[j])</code> where the two words do not share common letters.\r\n    You may assume that each word will contain only lower case letters.\r\n    If no such two words exist, return 0.\r\n</p>\n<p>\n<b>Example 1:</b><br/>\n</p>\n<p>\r\n    Given <code>["abcw", "baz", "foo", "bar", "xtfn", "abcdef"]</code><br/>\r\n    Return <code>16</code><br/>\r\n    The two words can be <code>"abcw", "xtfn"</code>.\r\n</p>\n<p>\n<b>Example 2:</b><br/>\n</p>\n<p>\r\n    Given <code>["a", "ab", "abc", "d", "cd", "bcd", "abcd"]</code><br/>\r\n    Return <code>4</code><br/>\r\n    The two words can be <code>"ab", "cd"</code>.\r\n</p>\n<p>\n<b>Example 3:</b><br/>\n</p>\n<p>\r\n    Given <code>["a", "aa", "aaa", "aaaa"]</code><br/>\r\n    Return <code>0</code><br/>\r\n    No such pair of words.    \r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


317 : shortest-distance-from-all-buildings
316 : remove-duplicate-letters


No Description




b'<div class="question-description">\n<p><p>\r\nGiven a string which contains only lowercase letters, remove duplicate letters so that every letter appear once and only once. You must make sure your result is the smallest in lexicographical order among all possible results.\r\n</p>\n<p>\n<b>Example:</b><br/>\n</p>\n<p>\r\nGiven <code>"bcabc"</code><br/>\r\nReturn <code>"abc"</code>\n</p>\n<p>\r\nGiven <code>"cbacdcbc"</code><br/>\r\nReturn <code>"acdb"</code>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


316 : remove-duplicate-letters
315 : count-of-smaller-numbers-after-self


b'<div class="question-description">\n<p><p>\r\nGiven a string which contains only lowercase letters, remove duplicate letters so that every letter appear once and only once. You must make sure your result is the smallest in lexicographical order among all possible results.\r\n</p>\n<p>\n<b>Example:</b><br/>\n</p>\n<p>\r\nGiven <code>"bcabc"</code><br/>\r\nReturn <code>"abc"</code>\n</p>\n<p>\r\nGiven <code>"cbacdcbc"</code><br/>\r\nReturn <code>"acdb"</code>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nYou are given an integer array <i>nums</i> and you have to return a new <i>counts</i> array.\r\nThe <i>counts</i> array has the property where <code>counts[i]</code> is \r\nthe number of smaller elements to the right of <code>nums[i]</code>.\r\n</p>\n<p><b>Example:</b></p>\n<pre>\r\nGiven <i>nums</i> = [5, 2, 6, 1]\r\n\r\nTo the right of 5 there are <b>2</b> smaller elements (2 and 1).\r\nTo the right of 2 there is only <b>1</b> smaller element (1).\r\nTo the right of 6 there is <b>1</b> smaller element (1).\r\nTo the right of 1 there is <b>0</b> smaller element.\r\n</pre>\n<p>\r\nReturn the array <code>[2, 1, 1, 0]</code>.\r\n</p></p>\n</div>'


315 : count-of-smaller-numbers-after-self
314 : binary-tree-vertical-order-traversal


b'<div class="question-description">\n<p><p>\r\nYou are given an integer array <i>nums</i> and you have to return a new <i>counts</i> array.\r\nThe <i>counts</i> array has the property where <code>counts[i]</code> is \r\nthe number of smaller elements to the right of <code>nums[i]</code>.\r\n</p>\n<p><b>Example:</b></p>\n<pre>\r\nGiven <i>nums</i> = [5, 2, 6, 1]\r\n\r\nTo the right of 5 there are <b>2</b> smaller elements (2 and 1).\r\nTo the right of 2 there is only <b>1</b> smaller element (1).\r\nTo the right of 6 there is <b>1</b> smaller element (1).\r\nTo the right of 1 there is <b>0</b> smaller element.\r\n</pre>\n<p>\r\nReturn the array <code>[2, 1, 1, 0]</code>.\r\n</p></p>\n</div>'




No Description


314 : binary-tree-vertical-order-traversal
313 : super-ugly-number


b'<div class="question-description">\n<p><p>\r\n    Write a program to find the n<sup>th</sup> super ugly number.\r\n</p>\n<p>\r\n    Super ugly numbers are positive numbers whose all prime factors are in the given prime list\r\n    <code>primes</code> of size <code>k</code>. For example, <code>[1, 2, 4, 7, 8, 13, 14, 16, 19, 26, 28, 32]\r\n</code> is the sequence of the first 12 super ugly numbers given <code>primes</code>\r\n    = <code>[2, 7, 13, 19]</code> of size 4.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\n    (1) <code>1</code> is a super ugly number for any given <code>primes</code>.<br/>\r\n    (2) The given numbers in <code>primes</code> are in ascending order.<br/>\r\n    (3) 0 &lt; <code>k</code> \xe2\x89\xa4 100, 0 &lt; <code>n</code> \xe2\x89\xa4 10<sup>6</sup>, 0 &lt; <code>primes[i]</code> &lt; 1000.<br/>\r\n    (4) The n<sup>th</sup> super ugly number is guaranteed to fit in a 32-bit signed integer.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


313 : super-ugly-number
312 : burst-balloons


No Description




b'<div class="question-description">\n<p><p>\r\n    Write a program to find the n<sup>th</sup> super ugly number.\r\n</p>\n<p>\r\n    Super ugly numbers are positive numbers whose all prime factors are in the given prime list\r\n    <code>primes</code> of size <code>k</code>. For example, <code>[1, 2, 4, 7, 8, 13, 14, 16, 19, 26, 28, 32]\r\n</code> is the sequence of the first 12 super ugly numbers given <code>primes</code>\r\n    = <code>[2, 7, 13, 19]</code> of size 4.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\n    (1) <code>1</code> is a super ugly number for any given <code>primes</code>.<br/>\r\n    (2) The given numbers in <code>primes</code> are in ascending order.<br/>\r\n    (3) 0 &lt; <code>k</code> \xe2\x89\xa4 100, 0 &lt; <code>n</code> \xe2\x89\xa4 10<sup>6</sup>, 0 &lt; <code>primes[i]</code> &lt; 1000.<br/>\r\n    (4) The n<sup>th</sup> super ugly number is guaranteed to fit in a 32-bit signed integer.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\n    Given <code>n</code> balloons, indexed from <code>0</code> to <code>n-1</code>. Each balloon is painted with a\r\n    number on it represented by array <code>nums</code>.\r\n\r\n    You are asked to burst all the balloons. If the you burst\r\n    balloon <code>i</code> you will get <code>nums[left] * nums[i] * nums[right]</code> coins. Here <code>left</code>\r\n    and <code>right</code> are adjacent indices of <code>i</code>. After the burst, the <code>left</code> and <code>right</code>\r\n    then becomes adjacent.\r\n</p>\n<p>\r\n    Find the maximum coins you can collect by bursting the balloons wisely.\r\n</p>\n<p>\n<b>Note:</b> <br/>\r\n    (1) You may imagine <code>nums[-1] = nums[n] = 1</code>. They are not real therefore you can not burst them.<br/>\r\n    (2) 0 \xe2\x89\xa4 <code>n</code> \xe2\x89\xa4 500, 0 \xe2\x89\xa4 <code>nums[i]</code> \xe2\x89\xa4 100\r\n</p>\n<p>\n<b>Example:</b>\n</p>\n<p>\r\n    Given <code>[3, 1, 5, 8]</code>\n</p>\n<p>\r\n    Return <code>167</code>\n</p>\n<pre>\r\n    nums = [3,1,5,8] --&gt; [3,5,8] --&gt;   [3,8]   --&gt;  [8]  --&gt; []\r\n   coins =  3*1*5      +  3*5*8    +  1*3*8      + 1*8*1   = 167\r\n</pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


312 : burst-balloons
311 : sparse-matrix-multiplication


b'<div class="question-description">\n<p><p>\r\n    Given <code>n</code> balloons, indexed from <code>0</code> to <code>n-1</code>. Each balloon is painted with a\r\n    number on it represented by array <code>nums</code>.\r\n\r\n    You are asked to burst all the balloons. If the you burst\r\n    balloon <code>i</code> you will get <code>nums[left] * nums[i] * nums[right]</code> coins. Here <code>left</code>\r\n    and <code>right</code> are adjacent indices of <code>i</code>. After the burst, the <code>left</code> and <code>right</code>\r\n    then becomes adjacent.\r\n</p>\n<p>\r\n    Find the maximum coins you can collect by bursting the balloons wisely.\r\n</p>\n<p>\n<b>Note:</b> <br/>\r\n    (1) You may imagine <code>nums[-1] = nums[n] = 1</code>. They are not real therefore you can not burst them.<br/>\r\n    (2) 0 \xe2\x89\xa4 <code>n</code> \xe2\x89\xa4 500, 0 \xe2\x89\xa4 <code>nums[i]</code> \xe2\x89\xa4 100\r\n</p>\n<p>\n<b>Example:</b>\n</p>\n<p>\r\n    Given <code>[3, 1, 5, 8]</code>\n</p>\n<p>\r\n    Return <code>167</code>\n</p>\n<pre>\r\n    nums = [3,1,5,8] --&gt; [3,5,8] --&gt;   [3,8]   --&gt;  [8]  --&gt; []\r\n   coins =  3*1*5      +  3*5*8    +  1*3*8      + 1*8*1   = 167\r\n</pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


311 : sparse-matrix-multiplication
310 : minimum-height-trees


No Description




b'<div class="question-description">\n<p><p>\r\n    For a undirected graph with tree characteristics, we can choose any node as the root. The result graph is then a rooted tree. Among all possible rooted trees, those with minimum height are called minimum height trees (MHTs).\r\n    Given such a graph, write a function to find all the MHTs and return a list of their root labels.\r\n</p>\n<p>\n<b>Format</b><br/>\r\n    The graph contains <code>n</code> nodes which are labeled from <code>0</code> to <code>n - 1</code>.\r\n    You will be given the number <code>n</code> and a list of undirected <code>edges</code> (each edge is a pair of labels).\r\n</p>\n<p> \r\nYou can assume that no duplicate edges will appear in <code>edges</code>. Since all edges are\r\n    undirected, <code>[0, 1]</code> is the same as <code>[1, 0]</code> and thus will not appear together in\r\n    <code>edges</code>.\r\n</p>\n<p>\n<b>Example 1:</b>\n</p>\n<p>\r\n    Given <code>n = 4</code>, <code>edges = [[1, 0], [1, 2], [1, 3]]</code>\n</p>\n<pre>\r\n        0\r\n        |\r\n        1\r\n       / \\\r\n      2   3\r\n</pre>\n<p>\r\n    return <code> [1]</code>\n</p>\n<p>\n<b>Example 2:</b>\n</p>\n<p>\r\n    Given <code>n = 6</code>, <code>edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]]</code>\n</p>\n<pre>\r\n     0  1  2\r\n      \\ | /\r\n        3\r\n        |\r\n        4\r\n        |\r\n        5\r\n</pre>\n<p>\r\n    return <code> [3, 4]</code>\n</p>\n<p>\n<b>Note</b>:\r\n</p>\n<p>\r\n    (1) According to the <a href="https://en.wikipedia.org/wiki/Tree_(graph_theory)" target="_blank">definition\r\n    of tree on Wikipedia</a>: \xe2\x80\x9ca tree is an undirected graph in which any two vertices are connected by\r\n    <i>exactly</i> one path. In other words, any connected graph without simple cycles is a tree.\xe2\x80\x9d\r\n</p>\n<p>\r\n    (2) The height of a rooted tree is the number of edges on the longest downward path between the root and a\r\n    leaf.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'


310 : minimum-height-trees
309 : best-time-to-buy-and-sell-stock-with-cooldown


b'<div class="question-description">\n<p><p>\r\n    For a undirected graph with tree characteristics, we can choose any node as the root. The result graph is then a rooted tree. Among all possible rooted trees, those with minimum height are called minimum height trees (MHTs).\r\n    Given such a graph, write a function to find all the MHTs and return a list of their root labels.\r\n</p>\n<p>\n<b>Format</b><br/>\r\n    The graph contains <code>n</code> nodes which are labeled from <code>0</code> to <code>n - 1</code>.\r\n    You will be given the number <code>n</code> and a list of undirected <code>edges</code> (each edge is a pair of labels).\r\n</p>\n<p> \r\nYou can assume that no duplicate edges will appear in <code>edges</code>. Since all edges are\r\n    undirected, <code>[0, 1]</code> is the same as <code>[1, 0]</code> and thus will not appear together in\r\n    <code>edges</code>.\r\n</p>\n<p>\n<b>Example 1:</b>\n</p>\n<p>\r\n    Given <code>n = 4</code>, <code>edges = [[1, 0], [1, 2], [1, 3]]</code>\n</p>\n<pre>\r\n        0\r\n        |\r\n        1\r\n       / \\\r\n      2   3\r\n</pre>\n<p>\r\n    return <code> [1]</code>\n</p>\n<p>\n<b>Example 2:</b>\n</p>\n<p>\r\n    Given <code>n = 6</code>, <code>edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]]</code>\n</p>\n<pre>\r\n     0  1  2\r\n      \\ | /\r\n        3\r\n        |\r\n        4\r\n        |\r\n        5\r\n</pre>\n<p>\r\n    return <code> [3, 4]</code>\n</p>\n<p>\n<b>Note</b>:\r\n</p>\n<p>\r\n    (1) According to the <a href="https://en.wikipedia.org/wiki/Tree_(graph_theory)" target="_blank">definition\r\n    of tree on Wikipedia</a>: \xe2\x80\x9ca tree is an undirected graph in which any two vertices are connected by\r\n    <i>exactly</i> one path. In other words, any connected graph without simple cycles is a tree.\xe2\x80\x9d\r\n</p>\n<p>\r\n    (2) The height of a rooted tree is the number of edges on the longest downward path between the root and a\r\n    leaf.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like\r\n(ie, buy one and sell one share of the stock multiple times) with the following restrictions:</p>\n<ul>\n<li>You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</li>\n<li>After you sell your stock, you cannot buy stock on next day. (ie, cooldown 1 day)</li>\n</ul>\n<p><b>Example:</b><br/></p>\n<pre>\r\nprices = [1, 2, 3, 0, 2]\r\nmaxProfit = 3\r\ntransactions = [buy, sell, cooldown, buy, sell]\r\n</pre>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


309 : best-time-to-buy-and-sell-stock-with-cooldown
308 : range-sum-query-2d-mutable


b'<div class="question-description">\n<p><p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like\r\n(ie, buy one and sell one share of the stock multiple times) with the following restrictions:</p>\n<ul>\n<li>You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</li>\n<li>After you sell your stock, you cannot buy stock on next day. (ie, cooldown 1 day)</li>\n</ul>\n<p><b>Example:</b><br/></p>\n<pre>\r\nprices = [1, 2, 3, 0, 2]\r\nmaxProfit = 3\r\ntransactions = [buy, sell, cooldown, buy, sell]\r\n</pre>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/dietpepsi">@dietpepsi</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




No Description


308 : range-sum-query-2d-mutable
307 : range-sum-query-mutable


No Description




b'<div class="question-description">\n<p><p>Given an integer array <i>nums</i>, find the sum of the elements between indices <i>i</i> and <i>j</i> (<i>i</i> \xe2\x89\xa4 <i>j</i>), inclusive.</p>\r\n\r\nThe <i>update(i, val)</i> function modifies <i>nums</i> by updating the element at index <i>i</i> to <i>val</i>.\r\n\r\n<p><b>Example:</b><br/>\n<pre>\r\nGiven nums = [1, 3, 5]\r\n\r\nsumRange(0, 2) -&gt; 9\r\nupdate(1, 2)\r\nsumRange(0, 2) -&gt; 8\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The array is only modifiable by the <i>update</i> function.</li>\n<li>You may assume the number of calls to <i>update</i> and <i>sumRange</i> function is distributed evenly.</li>\n</ol>\n</p></p>\n</div>'


307 : range-sum-query-mutable
306 : additive-number


b'<div class="question-description">\n<p><p>Given an integer array <i>nums</i>, find the sum of the elements between indices <i>i</i> and <i>j</i> (<i>i</i> \xe2\x89\xa4 <i>j</i>), inclusive.</p>\r\n\r\nThe <i>update(i, val)</i> function modifies <i>nums</i> by updating the element at index <i>i</i> to <i>val</i>.\r\n\r\n<p><b>Example:</b><br/>\n<pre>\r\nGiven nums = [1, 3, 5]\r\n\r\nsumRange(0, 2) -&gt; 9\r\nupdate(1, 2)\r\nsumRange(0, 2) -&gt; 8\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The array is only modifiable by the <i>update</i> function.</li>\n<li>You may assume the number of calls to <i>update</i> and <i>sumRange</i> function is distributed evenly.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Additive number is a string whose digits can form additive sequence.</p>\n<p>A valid additive sequence should contain <b>at least</b> three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.</p>\n<p>\r\nFor example:<br/>\n<code>"112358"</code> is an additive number because the digits can form an additive sequence: <code>1, 1, 2, 3, 5, 8</code>.\r\n<pre>1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8</pre>\n<code>"199100199"</code> is also an additive number, the additive sequence is: <code>1, 99, 100, 199</code>.\r\n<pre>1 + 99 = 100, 99 + 100 = 199</pre>\n</p>\n<p>\n<b>Note:</b> Numbers in the additive sequence <b>cannot</b> have leading zeros, so sequence <code>1, 2, 03</code> or <code>1, 02, 3</code> is invalid.\r\n</p>\n<p>Given a string containing only digits <code>\'0\'-\'9\'</code>, write a function to determine if it\'s an additive number.</p>\n<p>\n<b>Follow up:</b><br/>\r\nHow would you handle overflow for very large input integers?\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jeantimex">@jeantimex</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


306 : additive-number
305 : number-of-islands-ii


b'<div class="question-description">\n<p><p>Additive number is a string whose digits can form additive sequence.</p>\n<p>A valid additive sequence should contain <b>at least</b> three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.</p>\n<p>\r\nFor example:<br/>\n<code>"112358"</code> is an additive number because the digits can form an additive sequence: <code>1, 1, 2, 3, 5, 8</code>.\r\n<pre>1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8</pre>\n<code>"199100199"</code> is also an additive number, the additive sequence is: <code>1, 99, 100, 199</code>.\r\n<pre>1 + 99 = 100, 99 + 100 = 199</pre>\n</p>\n<p>\n<b>Note:</b> Numbers in the additive sequence <b>cannot</b> have leading zeros, so sequence <code>1, 2, 03</code> or <code>1, 02, 3</code> is invalid.\r\n</p>\n<p>Given a string containing only digits <code>\'0\'-\'9\'</code>, write a function to determine if it\'s an additive number.</p>\n<p>\n<b>Follow up:</b><br/>\r\nHow would you handle overflow for very large input integers?\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jeantimex">@jeantimex</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




No Description


305 : number-of-islands-ii
304 : range-sum-query-2d-immutable


b'<div class="question-description">\n<p><p>Given a 2D matrix <i>matrix</i>, find the sum of the elements inside the rectangle defined by its upper left corner (<i>row</i>1, <i>col</i>1) and lower right corner (<i>row</i>2, <i>col</i>2).</p>\n<p>\n<img alt="Range Sum Query 2D" border="0" src="/static/images/courses/range_sum_query_2d.png"><br/>\n<small>The above rectangle (with the red border) is defined by (row1, col1) = <b>(2, 1)</b> and (row2, col2) = <b>(4, 3)</b>, which contains sum = <b>8</b>.</small>\n</img></p>\n<p><b>Example:</b><br/>\n<pre>\r\nGiven matrix = [\r\n  [3, 0, 1, 4, 2],\r\n  [5, 6, 3, 2, 1],\r\n  [1, 2, 0, 1, 5],\r\n  [4, 1, 0, 1, 7],\r\n  [1, 0, 3, 0, 5]\r\n]\r\n\r\nsumRegion(2, 1, 4, 3) -&gt; 8\r\nsumRegion(1, 1, 2, 2) -&gt; 11\r\nsumRegion(1, 2, 2, 4) -&gt; 12\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume that the matrix does not change.</li>\n<li>There are many calls to <i>sumRegion</i> function.</li>\n<li>You may assume that <i>row</i>1 \xe2\x89\xa4 <i>row</i>2 and <i>col</i>1 \xe2\x89\xa4 <i>col</i>2.</li>\n</ol>\n</p></p>\n</div>'




No Description


304 : range-sum-query-2d-immutable
303 : range-sum-query-immutable


b'<div class="question-description">\n<p><p>Given a 2D matrix <i>matrix</i>, find the sum of the elements inside the rectangle defined by its upper left corner (<i>row</i>1, <i>col</i>1) and lower right corner (<i>row</i>2, <i>col</i>2).</p>\n<p>\n<img alt="Range Sum Query 2D" border="0" src="/static/images/courses/range_sum_query_2d.png"><br/>\n<small>The above rectangle (with the red border) is defined by (row1, col1) = <b>(2, 1)</b> and (row2, col2) = <b>(4, 3)</b>, which contains sum = <b>8</b>.</small>\n</img></p>\n<p><b>Example:</b><br/>\n<pre>\r\nGiven matrix = [\r\n  [3, 0, 1, 4, 2],\r\n  [5, 6, 3, 2, 1],\r\n  [1, 2, 0, 1, 5],\r\n  [4, 1, 0, 1, 7],\r\n  [1, 0, 3, 0, 5]\r\n]\r\n\r\nsumRegion(2, 1, 4, 3) -&gt; 8\r\nsumRegion(1, 1, 2, 2) -&gt; 11\r\nsumRegion(1, 2, 2, 4) -&gt; 12\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume that the matrix does not change.</li>\n<li>There are many calls to <i>sumRegion</i> function.</li>\n<li>You may assume that <i>row</i>1 \xe2\x89\xa4 <i>row</i>2 and <i>col</i>1 \xe2\x89\xa4 <i>col</i>2.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an integer array <i>nums</i>, find the sum of the elements between indices <i>i</i> and <i>j</i> (<i>i</i> \xe2\x89\xa4 <i>j</i>), inclusive.</p>\n<p><b>Example:</b><br/>\n<pre>\r\nGiven nums = [-2, 0, 3, -5, 2, -1]\r\n\r\nsumRange(0, 2) -&gt; 1\r\nsumRange(2, 5) -&gt; -1\r\nsumRange(0, 5) -&gt; -3\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume that the array does not change.</li>\n<li>There are many calls to <i>sumRange</i> function.</li>\n</ol>\n</p></p>\n</div>'


303 : range-sum-query-immutable
302 : smallest-rectangle-enclosing-black-pixels


b'<div class="question-description">\n<p><p>Given an integer array <i>nums</i>, find the sum of the elements between indices <i>i</i> and <i>j</i> (<i>i</i> \xe2\x89\xa4 <i>j</i>), inclusive.</p>\n<p><b>Example:</b><br/>\n<pre>\r\nGiven nums = [-2, 0, 3, -5, 2, -1]\r\n\r\nsumRange(0, 2) -&gt; 1\r\nsumRange(2, 5) -&gt; -1\r\nsumRange(0, 5) -&gt; -3\r\n</pre>\n</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>You may assume that the array does not change.</li>\n<li>There are many calls to <i>sumRange</i> function.</li>\n</ol>\n</p></p>\n</div>'




No Description


302 : smallest-rectangle-enclosing-black-pixels
301 : remove-invalid-parentheses


b'<div class="question-description">\n<p><p>\r\nRemove the minimum number of invalid parentheses in order to make the input string valid. Return all possible results.</p>\n<p>Note: The input string may contain letters other than the parentheses <code>(</code> and <code>)</code>. \r\n</p>\n<p>\n<b>Examples:</b><br/>\n<pre>\r\n"()())()" -&gt; ["()()()", "(())()"]\r\n"(a)())()" -&gt; ["(a)()()", "(a())()"]\r\n")(" -&gt; [""]\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/hpplayer">@hpplayer</a> for adding this problem and creating all test cases.</p></p>\n</div>'


301 : remove-invalid-parentheses
300 : longest-increasing-subsequence


No Description




b'<div class="question-description">\n<p><p>\r\nGiven an unsorted array of integers, find the length of longest increasing subsequence.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>[10, 9, 2, 5, 3, 7, 101, 18]</code>,<br/>\r\nThe longest increasing subsequence is <code>[2, 3, 7, 101]</code>, therefore the length is <code>4</code>. Note that there may be more than one LIS combination, it is only necessary for you to return the length.\r\n</p>\n<p>\r\nYour algorithm should run in O(<i>n<sup>2</sup></i>) complexity.\r\n</p>\n<p><b>Follow up:</b> Could you improve it to O(<i>n</i> log <i>n</i>) time complexity? </p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/pbrother">@pbrother</a> for adding this problem and creating all test cases.</p></p>\n</div>'


300 : longest-increasing-subsequence
299 : bulls-and-cows


b'<div class="question-description">\n<p><p>\r\nRemove the minimum number of invalid parentheses in order to make the input string valid. Return all possible results.</p>\n<p>Note: The input string may contain letters other than the parentheses <code>(</code> and <code>)</code>. \r\n</p>\n<p>\n<b>Examples:</b><br/>\n<pre>\r\n"()())()" -&gt; ["()()()", "(())()"]\r\n"(a)())()" -&gt; ["(a)()()", "(a())()"]\r\n")(" -&gt; [""]\r\n</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/hpplayer">@hpplayer</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an unsorted array of integers, find the length of longest increasing subsequence.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>[10, 9, 2, 5, 3, 7, 101, 18]</code>,<br/>\r\nThe longest increasing subsequence is <code>[2, 3, 7, 101]</code>, therefore the length is <code>4</code>. Note that there may be more than one LIS combination, it is only necessary for you to return the length.\r\n</p>\n<p>\r\nYour algorithm should run in O(<i>n<sup>2</sup></i>) complexity.\r\n</p>\n<p><b>Follow up:</b> Could you improve it to O(<i>n</i> log <i>n</i>) time complexity? </p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/pbrother">@pbrother</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You are playing the following <a href="https://en.wikipedia.org/wiki/Bulls_and_Cows" target="_blank">Bulls and Cows</a> game with your friend: You write down a number and ask your friend to guess what the number is. Each time your friend makes a guess, you provide a hint that indicates how many digits in said guess match your secret number exactly in both digit and position (called "bulls") and how many digits match the secret number but locate in the wrong position (called "cows"). Your friend will use successive guesses and hints to eventually derive the secret number.</p>\n<p>\r\nFor example:\r\n<pre>\r\nSecret number:  "1807"\r\nFriend\'s guess: "7810"\r\n</pre>\r\nHint: <code>1</code> bull and <code>3</code> cows. (The bull is <code>8</code>, the cows are <code>0</code>, <code>1</code> and <code>7</code>.)\r\n</p>\n<p>Write a function to return a hint according to the secret number and friend\'s guess, use <code>A</code> to indicate the bulls and <code>B</code> to indicate the cows. In the above example, your function should return <code>"1A3B"</code>. </p>\n<p>Please note that both secret number and friend\'s guess may contain duplicate digits, for example:\r\n<pre>\r\nSecret number:  "1123"\r\nFriend\'s guess: "0111"\r\n</pre>\r\nIn this case, the 1st <code>1</code> in friend\'s guess is a bull, the 2nd or 3rd <code>1</code> is a cow, and your function should return <code>"1A1B"</code>.\r\n</p>\n<p>You may assume that the secret number and your friend\'s guess only contain digits, and their lengths are always equal.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jeantimex">@jeantimex</a> for adding this problem and creating all test cases.</p></p>\n</div>'


299 : bulls-and-cows
298 : binary-tree-longest-consecutive-sequence


b'<div class="question-description">\n<p><p>You are playing the following <a href="https://en.wikipedia.org/wiki/Bulls_and_Cows" target="_blank">Bulls and Cows</a> game with your friend: You write down a number and ask your friend to guess what the number is. Each time your friend makes a guess, you provide a hint that indicates how many digits in said guess match your secret number exactly in both digit and position (called "bulls") and how many digits match the secret number but locate in the wrong position (called "cows"). Your friend will use successive guesses and hints to eventually derive the secret number.</p>\n<p>\r\nFor example:\r\n<pre>\r\nSecret number:  "1807"\r\nFriend\'s guess: "7810"\r\n</pre>\r\nHint: <code>1</code> bull and <code>3</code> cows. (The bull is <code>8</code>, the cows are <code>0</code>, <code>1</code> and <code>7</code>.)\r\n</p>\n<p>Write a function to return a hint according to the secret number and friend\'s guess, use <code>A</code> to indicate the bulls and <code>B</code> to indicate the cows. In the above example, your function should return <code>"1A3B"</code>. </p>\n<p>Please note that both secret number and friend\'s guess may contain duplicate digits, for example:\r\n<pre>\r\nSecret number:  "1123"\r\nFriend\'s guess: "0111"\r\n</pre>\r\nIn this case, the 1st <code>1</code> in friend\'s guess is a bull, the 2nd or 3rd <code>1</code> is a cow, and your function should return <code>"1A1B"</code>.\r\n</p>\n<p>You may assume that the secret number and your friend\'s guess only contain digits, and their lengths are always equal.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jeantimex">@jeantimex</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


298 : binary-tree-longest-consecutive-sequence
297 : serialize-and-deserialize-binary-tree


No Description




b'<div class="question-description">\n<p><p>Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. </p>\n<p>Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.</p>\n<p>\r\nFor example, you may serialize the following tree\r\n<pre>\r\n    1\r\n   / \\\r\n  2   3\r\n     / \\\r\n    4   5\r\n</pre>\r\nas <code>"[1,2,3,null,null,4,5]"</code>, just the same as <a href="https://leetcode.com/faq/#binary-tree">how LeetCode OJ serializes a binary tree</a>. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.\r\n</p>\n<p>\n<b>Note:</b> Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/Louis1992">@Louis1992</a> for adding this problem and creating all test cases.</p></p>\n</div>'


297 : serialize-and-deserialize-binary-tree
296 : best-meeting-point


b'<div class="question-description">\n<p><p>Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment. </p>\n<p>Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.</p>\n<p>\r\nFor example, you may serialize the following tree\r\n<pre>\r\n    1\r\n   / \\\r\n  2   3\r\n     / \\\r\n    4   5\r\n</pre>\r\nas <code>"[1,2,3,null,null,4,5]"</code>, just the same as <a href="https://leetcode.com/faq/#binary-tree">how LeetCode OJ serializes a binary tree</a>. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.\r\n</p>\n<p>\n<b>Note:</b> Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/Louis1992">@Louis1992</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


296 : best-meeting-point
295 : find-median-from-data-stream


No Description




b'<div class="question-description">\n<p><p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.</p>\r\nExamples: <br/>\n<p><code>[2,3,4]</code> , the median is <code>3</code></p>\n<p><code>[2,3]</code>, the median is <code>(2 + 3) / 2 = 2.5</code> </p>\n<p>\r\nDesign a data structure that supports the following two operations:\r\n</p>\n<ul>\n<li>void addNum(int num) - Add a integer number from the data stream to the data structure.</li>\n<li>double findMedian() - Return the median of all elements so far.</li>\n</ul>\n<p>\r\nFor example:</p>\n<pre>\r\naddNum(1)\r\naddNum(2)\r\nfindMedian() -&gt; 1.5\r\naddNum(3) \r\nfindMedian() -&gt; 2\r\n</pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/Louis1992">@Louis1992</a> for adding this problem and creating all test cases.</p></p>\n</div>'


295 : find-median-from-data-stream
294 : flip-game-ii


b'<div class="question-description">\n<p><p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.</p>\r\nExamples: <br/>\n<p><code>[2,3,4]</code> , the median is <code>3</code></p>\n<p><code>[2,3]</code>, the median is <code>(2 + 3) / 2 = 2.5</code> </p>\n<p>\r\nDesign a data structure that supports the following two operations:\r\n</p>\n<ul>\n<li>void addNum(int num) - Add a integer number from the data stream to the data structure.</li>\n<li>double findMedian() - Return the median of all elements so far.</li>\n</ul>\n<p>\r\nFor example:</p>\n<pre>\r\naddNum(1)\r\naddNum(2)\r\nfindMedian() -&gt; 1.5\r\naddNum(3) \r\nfindMedian() -&gt; 2\r\n</pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/Louis1992">@Louis1992</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


294 : flip-game-ii
293 : flip-game


No Description




No Description


293 : flip-game
292 : nim-game


No Description




b'<div class="question-description">\n<p><p>\r\nYou are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.\r\n</p>\n<p>\r\nBoth of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.\r\n</p>\n<p>\r\nFor example, if there are 4 stones in the heap, then you will never win the game: no matter 1, 2, or 3 stones you remove, the last stone will always be removed by your friend.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'


292 : nim-game
291 : word-pattern-ii


b'<div class="question-description">\n<p><p>\r\nYou are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.\r\n</p>\n<p>\r\nBoth of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.\r\n</p>\n<p>\r\nFor example, if there are 4 stones in the heap, then you will never win the game: no matter 1, 2, or 3 stones you remove, the last stone will always be removed by your friend.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


291 : word-pattern-ii
290 : word-pattern


No Description




b'<div class="question-description">\n<p><p>Given a <code>pattern</code> and a string <code>str</code>, find if <code>str</code> follows the same pattern.</p>\n<p> Here <b>follow</b> means a full match, such that there is a bijection between a letter in <code>pattern</code> and a <b>non-empty</b> word in <code>str</code>.</p>\n<p>\n<b>Examples:</b><br/>\n<ol>\n<li>pattern = <code>"abba"</code>, str = <code>"dog cat cat dog"</code> should return true.</li>\n<li>pattern = <code>"abba"</code>, str = <code>"dog cat cat fish"</code> should return false.</li>\n<li>pattern = <code>"aaaa"</code>, str = <code>"dog cat cat dog"</code> should return false.</li>\n<li>pattern = <code>"abba"</code>, str = <code>"dog dog dog dog"</code> should return false.</li>\n</ol>\n</p>\n<p>\n<b>Notes:</b><br/>\r\nYou may assume <code>pattern</code> contains only lowercase letters, and <code>str</code> contains lowercase letters separated by a single space.\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/minglotus6">@minglotus6</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


290 : word-pattern
289 : game-of-life


b'<div class="question-description">\n<p><p>Given a <code>pattern</code> and a string <code>str</code>, find if <code>str</code> follows the same pattern.</p>\n<p> Here <b>follow</b> means a full match, such that there is a bijection between a letter in <code>pattern</code> and a <b>non-empty</b> word in <code>str</code>.</p>\n<p>\n<b>Examples:</b><br/>\n<ol>\n<li>pattern = <code>"abba"</code>, str = <code>"dog cat cat dog"</code> should return true.</li>\n<li>pattern = <code>"abba"</code>, str = <code>"dog cat cat fish"</code> should return false.</li>\n<li>pattern = <code>"aaaa"</code>, str = <code>"dog cat cat dog"</code> should return false.</li>\n<li>pattern = <code>"abba"</code>, str = <code>"dog dog dog dog"</code> should return false.</li>\n</ol>\n</p>\n<p>\n<b>Notes:</b><br/>\r\nYou may assume <code>pattern</code> contains only lowercase letters, and <code>str</code> contains lowercase letters separated by a single space.\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/minglotus6">@minglotus6</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nAccording to the <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life" target="_blank">Wikipedia\'s article</a>: "The <b>Game of Life</b>, also known simply as <b>Life</b>, is a cellular automaton devised by the British mathematician John Horton Conway in 1970."\r\n</p>\n<p>\r\nGiven a <i>board</i> with <i>m</i> by <i>n</i> cells, each cell has an initial state <i>live</i> (1) or <i>dead</i> (0). Each cell interacts with its <a href="https://en.wikipedia.org/wiki/Moore_neighborhood" target="_blank">eight neighbors</a> (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):\r\n</p>\n<p>\n<ol>\n<li>Any live cell with fewer than two live neighbors dies, as if caused by under-population.</li>\n<li>Any live cell with two or three live neighbors lives on to the next generation.</li>\n<li>Any live cell with more than three live neighbors dies, as if by over-population..</li>\n<li>Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.</li>\n</ol>\n</p>\n<p>\r\nWrite a function to compute the next state (after one update) of the board given its current state.</p>\n<p>\n<b>Follow up</b>: <br/>\n<ol>\n<li>Could you solve it in-place? Remember that the board needs to be updated at the same time: You cannot update some cells first and then use their updated values to update other cells.</li>\n<li>In this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches the border of the array. How would you address these problems?</li>\n</ol>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


289 : game-of-life
288 : unique-word-abbreviation


b'<div class="question-description">\n<p><p>\r\nAccording to the <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life" target="_blank">Wikipedia\'s article</a>: "The <b>Game of Life</b>, also known simply as <b>Life</b>, is a cellular automaton devised by the British mathematician John Horton Conway in 1970."\r\n</p>\n<p>\r\nGiven a <i>board</i> with <i>m</i> by <i>n</i> cells, each cell has an initial state <i>live</i> (1) or <i>dead</i> (0). Each cell interacts with its <a href="https://en.wikipedia.org/wiki/Moore_neighborhood" target="_blank">eight neighbors</a> (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):\r\n</p>\n<p>\n<ol>\n<li>Any live cell with fewer than two live neighbors dies, as if caused by under-population.</li>\n<li>Any live cell with two or three live neighbors lives on to the next generation.</li>\n<li>Any live cell with more than three live neighbors dies, as if by over-population..</li>\n<li>Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.</li>\n</ol>\n</p>\n<p>\r\nWrite a function to compute the next state (after one update) of the board given its current state.</p>\n<p>\n<b>Follow up</b>: <br/>\n<ol>\n<li>Could you solve it in-place? Remember that the board needs to be updated at the same time: You cannot update some cells first and then use their updated values to update other cells.</li>\n<li>In this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches the border of the array. How would you address these problems?</li>\n</ol>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




No Description


288 : unique-word-abbreviation
287 : find-the-duplicate-number


No Description




b'<div class="question-description">\n<p><p>\r\nGiven an array <i>nums</i> containing <i>n</i> + 1 integers where each integer is between 1 and <i>n</i> (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.\r\n</p>\n<p>\n<b>Note:</b><br/>\n<ol>\n<li>You <b>must not</b> modify the array (assume the array is read only).</li>\n<li>You must use only constant, <i>O</i>(1) extra space.</li>\n<li>Your runtime complexity should be less than <code>O(n<sup>2</sup>)</code>.</li>\n<li>There is only one duplicate number in the array, but it could be repeated more than once.</li>\n</ol>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


287 : find-the-duplicate-number
286 : walls-and-gates


b'<div class="question-description">\n<p><p>\r\nGiven an array <i>nums</i> containing <i>n</i> + 1 integers where each integer is between 1 and <i>n</i> (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.\r\n</p>\n<p>\n<b>Note:</b><br/>\n<ol>\n<li>You <b>must not</b> modify the array (assume the array is read only).</li>\n<li>You must use only constant, <i>O</i>(1) extra space.</li>\n<li>Your runtime complexity should be less than <code>O(n<sup>2</sup>)</code>.</li>\n<li>There is only one duplicate number in the array, but it could be repeated more than once.</li>\n</ol>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




No Description


286 : walls-and-gates
285 : inorder-successor-in-bst


No Description




No Description


285 : inorder-successor-in-bst
284 : peeking-iterator


No Description




b'<div class="question-description">\n<p><p>Given an Iterator class interface with methods: <code>next()</code> and <code>hasNext()</code>, design and implement a PeekingIterator that support the <code>peek()</code> operation -- it essentially peek() at the element that will be returned by the next call to next().</p>\n<hr>\n<p>Here is an example. Assume that the iterator is initialized to the beginning of the list: <code>[1, 2, 3]</code>.</p>\n<p>Call <code>next()</code> gets you 1, the first element in the list.</p>\n<p>Now you call <code>peek()</code> and it returns 2, the next element. Calling <code>next()</code> after that <i><b>still</b></i> return 2.</p>\n<p>You call <code>next()</code> the final time and it returns 3, the last element. Calling <code>hasNext()</code> after that should return false.</p>\n<p>\n<b>Follow up</b>: How would you extend your design to be generic and work with all types, not just integer?</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/porker2008">@porker2008</a> for adding this problem and creating all test cases.</p></hr></p>\n</div>'


284 : peeking-iterator
283 : move-zeroes


b'<div class="question-description">\n<p><p>Given an Iterator class interface with methods: <code>next()</code> and <code>hasNext()</code>, design and implement a PeekingIterator that support the <code>peek()</code> operation -- it essentially peek() at the element that will be returned by the next call to next().</p>\n<hr>\n<p>Here is an example. Assume that the iterator is initialized to the beginning of the list: <code>[1, 2, 3]</code>.</p>\n<p>Call <code>next()</code> gets you 1, the first element in the list.</p>\n<p>Now you call <code>peek()</code> and it returns 2, the next element. Calling <code>next()</code> after that <i><b>still</b></i> return 2.</p>\n<p>You call <code>next()</code> the final time and it returns 3, the last element. Calling <code>hasNext()</code> after that should return false.</p>\n<p>\n<b>Follow up</b>: How would you extend your design to be generic and work with all types, not just integer?</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/porker2008">@porker2008</a> for adding this problem and creating all test cases.</p></hr></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array <code>nums</code>, write a function to move all <code>0</code>\'s to the end of it while maintaining the relative order of the non-zero elements.\r\n</p>\n<p>\r\nFor example, given <code>nums  = [0, 1, 0, 3, 12]</code>, after calling your function, <code>nums</code> should be <code>[1, 3, 12, 0, 0]</code>.\r\n</p>\n<p>\n<b>Note</b>:<br/>\n<ol>\n<li>You must do this <b>in-place</b> without making a copy of the array.</li>\n<li>Minimize the total number of operations.</li>\n</ol>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


283 : move-zeroes
282 : expression-add-operators


b'<div class="question-description">\n<p><p>\r\nGiven an array <code>nums</code>, write a function to move all <code>0</code>\'s to the end of it while maintaining the relative order of the non-zero elements.\r\n</p>\n<p>\r\nFor example, given <code>nums  = [0, 1, 0, 3, 12]</code>, after calling your function, <code>nums</code> should be <code>[1, 3, 12, 0, 0]</code>.\r\n</p>\n<p>\n<b>Note</b>:<br/>\n<ol>\n<li>You must do this <b>in-place</b> without making a copy of the array.</li>\n<li>Minimize the total number of operations.</li>\n</ol>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string that contains only digits <code>0-9</code> and a target value, return all possibilities to add <b>binary</b> operators (not unary) <code>+</code>, <code>-</code>, or <code>*</code> between the digits so they evaluate to the target value.\r\n</p>\n<p>\r\nExamples: <br/>\n<pre>"123", 6 -&gt; ["1+2+3", "1*2*3"] \r\n"232", 8 -&gt; ["2*3+2", "2+3*2"]\r\n"105", 5 -&gt; ["1*0+5","10-5"]\r\n"00", 0 -&gt; ["0+0", "0-0", "0*0"]\r\n"3456237490", 9191 -&gt; []\r\n</pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/davidtan1890">@davidtan1890</a> for adding this problem and creating all test cases.</p></p>\n</p></div>'


282 : expression-add-operators
281 : zigzag-iterator


b'<div class="question-description">\n<p><p>\r\nGiven a string that contains only digits <code>0-9</code> and a target value, return all possibilities to add <b>binary</b> operators (not unary) <code>+</code>, <code>-</code>, or <code>*</code> between the digits so they evaluate to the target value.\r\n</p>\n<p>\r\nExamples: <br/>\n<pre>"123", 6 -&gt; ["1+2+3", "1*2*3"] \r\n"232", 8 -&gt; ["2*3+2", "2+3*2"]\r\n"105", 5 -&gt; ["1*0+5","10-5"]\r\n"00", 0 -&gt; ["0+0", "0-0", "0*0"]\r\n"3456237490", 9191 -&gt; []\r\n</pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/davidtan1890">@davidtan1890</a> for adding this problem and creating all test cases.</p></p>\n</p></div>'




No Description


281 : zigzag-iterator
280 : wiggle-sort


No Description




No Description


280 : wiggle-sort
279 : perfect-squares


b'<div class="question-description">\n<p><p>\r\nGiven a positive integer <i>n</i>, find the least number of perfect square numbers (for example, <code>1, 4, 9, 16, ...</code>) which sum to <i>n</i>.\r\n</p>\n<p>\r\nFor example, given <i>n</i> = <code>12</code>, return <code>3</code> because <code>12 = 4 + 4 + 4</code>; given <i>n</i> = <code>13</code>, return <code>2</code> because <code>13 = 4 + 9</code>.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'


279 : perfect-squares
278 : first-bad-version


No Description




b'<div class="question-description">\n<p><p>\r\nGiven a positive integer <i>n</i>, find the least number of perfect square numbers (for example, <code>1, 4, 9, 16, ...</code>) which sum to <i>n</i>.\r\n</p>\n<p>\r\nFor example, given <i>n</i> = <code>12</code>, return <code>3</code> because <code>12 = 4 + 4 + 4</code>; given <i>n</i> = <code>13</code>, return <code>2</code> because <code>13 = 4 + 9</code>.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nYou are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad. \r\n</p>\n<p>\r\nSuppose you have <code>n</code> versions <code>[1, 2, ..., n]</code> and you want to find out the first bad one, which causes all the following ones to be bad.\r\n</p>\n<p>\r\nYou are given an API <code>bool isBadVersion(version)</code> which will return whether <code>version</code> is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'


278 : first-bad-version
277 : find-the-celebrity


b'<div class="question-description">\n<p><p>\r\nYou are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad. \r\n</p>\n<p>\r\nSuppose you have <code>n</code> versions <code>[1, 2, ..., n]</code> and you want to find out the first bad one, which causes all the following ones to be bad.\r\n</p>\n<p>\r\nYou are given an API <code>bool isBadVersion(version)</code> which will return whether <code>version</code> is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


277 : find-the-celebrity
276 : paint-fence


No Description




No Description


276 : paint-fence
275 : h-index-ii


No Description




b'<div class="question-description">\n<p><p>\n<b>Follow up</b> for <a href="/problems/h-index/" target="_blank">H-Index</a>: What if the <code>citations</code> array is sorted in ascending order? Could you optimize your algorithm?\r\n</p></p>\n</div>'


275 : h-index-ii
274 : h-index


b'<div class="question-description">\n<p><p>\n<b>Follow up</b> for <a href="/problems/h-index/" target="_blank">H-Index</a>: What if the <code>citations</code> array is sorted in ascending order? Could you optimize your algorithm?\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher\'s h-index.\r\n</p>\n<p>\r\nAccording to the <a href="https://en.wikipedia.org/wiki/H-index" target="_blank">definition of h-index on Wikipedia</a>: "A scientist has index <i>h</i> if <i>h</i> of his/her <i>N</i> papers have <b>at least</b> <i>h</i> citations each, and the other <i>N \xe2\x88\x92 h</i> papers have <b>no more than</b> <i>h</i> citations each."\r\n</p>\n<p>\r\nFor example, given <code>citations = [3, 0, 6, 1, 5]</code>, which means the researcher has <code>5</code> papers in total and each of them had received <code>3, 0, 6, 1, 5</code> citations respectively. Since the researcher has <code>3</code> papers with <b>at least</b> <code>3</code> citations each and the remaining two with <b>no more than</b> <code>3</code> citations each, his h-index is <code>3</code>.\r\n</p>\n<p>\n<b>Note</b>: If there are several possible values for <code>h</code>, the maximum one is taken as the h-index.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'


274 : h-index
273 : integer-to-english-words


b'<div class="question-description">\n<p><p>\r\nGiven an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher\'s h-index.\r\n</p>\n<p>\r\nAccording to the <a href="https://en.wikipedia.org/wiki/H-index" target="_blank">definition of h-index on Wikipedia</a>: "A scientist has index <i>h</i> if <i>h</i> of his/her <i>N</i> papers have <b>at least</b> <i>h</i> citations each, and the other <i>N \xe2\x88\x92 h</i> papers have <b>no more than</b> <i>h</i> citations each."\r\n</p>\n<p>\r\nFor example, given <code>citations = [3, 0, 6, 1, 5]</code>, which means the researcher has <code>5</code> papers in total and each of them had received <code>3, 0, 6, 1, 5</code> citations respectively. Since the researcher has <code>3</code> papers with <b>at least</b> <code>3</code> citations each and the remaining two with <b>no more than</b> <code>3</code> citations each, his h-index is <code>3</code>.\r\n</p>\n<p>\n<b>Note</b>: If there are several possible values for <code>h</code>, the maximum one is taken as the h-index.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nConvert a non-negative integer to its english words representation. Given input is guaranteed to be less than 2<sup>31</sup> - 1.\r\n</p>\n<p>For example,<br/>\n<pre>\r\n123 -&gt; "One Hundred Twenty Three"\r\n12345 -&gt; "Twelve Thousand Three Hundred Forty Five"\r\n1234567 -&gt; "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"</pre></p></p>\n</div>'


273 : integer-to-english-words
272 : closest-binary-search-tree-value-ii


b'<div class="question-description">\n<p><p>\r\nConvert a non-negative integer to its english words representation. Given input is guaranteed to be less than 2<sup>31</sup> - 1.\r\n</p>\n<p>For example,<br/>\n<pre>\r\n123 -&gt; "One Hundred Twenty Three"\r\n12345 -&gt; "Twelve Thousand Three Hundred Forty Five"\r\n1234567 -&gt; "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"</pre></p></p>\n</div>'




No Description


272 : closest-binary-search-tree-value-ii
271 : encode-and-decode-strings


No Description


271 : encode-and-decode-strings
270 : closest-binary-search-tree-value


No Description




No Description




No Description


270 : closest-binary-search-tree-value
269 : alien-dictionary


No Description




No Description


269 : alien-dictionary
268 : missing-number


No Description




b'<div class="question-description">\n<p><p>\r\nGiven an array containing <i>n</i> distinct numbers taken from <code>0, 1, 2, ..., n</code>, find the one that is missing from the array.\r\n</p>\n<p>For example,<br/>\r\nGiven <i>nums</i> = <code>[0, 1, 3]</code> return <code>2</code>.\r\n</p>\n<p>\n<b>Note</b>:<br/>\r\nYour algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


268 : missing-number
267 : palindrome-permutation-ii


b'<div class="question-description">\n<p><p>\r\nGiven an array containing <i>n</i> distinct numbers taken from <code>0, 1, 2, ..., n</code>, find the one that is missing from the array.\r\n</p>\n<p>For example,<br/>\r\nGiven <i>nums</i> = <code>[0, 1, 3]</code> return <code>2</code>.\r\n</p>\n<p>\n<b>Note</b>:<br/>\r\nYour algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




No Description


267 : palindrome-permutation-ii
266 : palindrome-permutation


No Description




No Description


266 : palindrome-permutation
265 : paint-house-ii


No Description


265 : paint-house-ii
264 : ugly-number-ii


No Description




b'<div class="question-description">\n<p><p>\r\nWrite a program to find the <code>n</code>-th ugly number.\r\n</p>\n<p>\r\nUgly numbers are positive numbers whose prime factors only include <code>2, 3, 5</code>. For example, <code>1, 2, 3, 4, 5, 6, 8, 9, 10, 12</code> is the sequence of the first <code>10</code> ugly numbers.\r\n</p>\n<p>\r\nNote that <code>1</code> is typically treated as an ugly number, and <i>n</i> <b>does not exceed 1690</b>.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'


264 : ugly-number-ii
263 : ugly-number


No Description




b'<div class="question-description">\n<p><p>\r\nWrite a program to find the <code>n</code>-th ugly number.\r\n</p>\n<p>\r\nUgly numbers are positive numbers whose prime factors only include <code>2, 3, 5</code>. For example, <code>1, 2, 3, 4, 5, 6, 8, 9, 10, 12</code> is the sequence of the first <code>10</code> ugly numbers.\r\n</p>\n<p>\r\nNote that <code>1</code> is typically treated as an ugly number, and <i>n</i> <b>does not exceed 1690</b>.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nWrite a program to check whether a given number is an ugly number.\r\n</p>\n<p>\r\nUgly numbers are positive numbers whose prime factors only include <code>2, 3, 5</code>. For example, <code>6, 8</code> are ugly while <code>14</code> is not ugly since it includes another prime factor <code>7</code>.\r\n</p>\n<p>\r\nNote that <code>1</code> is typically treated as an ugly number.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'


263 : ugly-number
261 : graph-valid-tree


b'<div class="question-description">\n<p><p>\r\nWrite a program to check whether a given number is an ugly number.\r\n</p>\n<p>\r\nUgly numbers are positive numbers whose prime factors only include <code>2, 3, 5</code>. For example, <code>6, 8</code> are ugly while <code>14</code> is not ugly since it includes another prime factor <code>7</code>.\r\n</p>\n<p>\r\nNote that <code>1</code> is typically treated as an ugly number.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


261 : graph-valid-tree
260 : single-number-iii


No Description




b'<div class="question-description">\n<p><p>\r\nGiven an array of numbers <code>nums</code>, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once.\r\n</p>\n<p>\r\nFor example:\r\n</p>\n<p>\r\nGiven <code>nums = [1, 2, 1, 3, 2, 5]</code>, return <code>[3, 5]</code>.\r\n</p>\n<p>\n<b>Note</b>:<br/>\n<ol>\n<li>The order of the result is not important. So in the above example, <code>[5, 3]</code> is also correct.</li>\n<li>Your algorithm should run in linear runtime complexity. Could you implement it using only constant space complexity?</li>\n</ol>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


260 : single-number-iii
259 : 3sum-smaller


b'<div class="question-description">\n<p><p>\r\nGiven an array of numbers <code>nums</code>, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once.\r\n</p>\n<p>\r\nFor example:\r\n</p>\n<p>\r\nGiven <code>nums = [1, 2, 1, 3, 2, 5]</code>, return <code>[3, 5]</code>.\r\n</p>\n<p>\n<b>Note</b>:<br/>\n<ol>\n<li>The order of the result is not important. So in the above example, <code>[5, 3]</code> is also correct.</li>\n<li>Your algorithm should run in linear runtime complexity. Could you implement it using only constant space complexity?</li>\n</ol>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




No Description


259 : 3sum-smaller
258 : add-digits


b'<div class="question-description">\n<p><p>\r\nGiven a non-negative integer <code>num</code>, repeatedly add all its digits until the result has only one digit. \r\n</p>\n<p>\r\nFor example:\r\n</p>\n<p>\r\nGiven <code>num = 38</code>, the process is like: <code>3 + 8 = 11</code>, <code>1 + 1 = 2</code>. Since <code>2</code> has only one digit, return it.\r\n</p>\n<p><b>Follow up:</b><br/>\r\nCould you do it without any loop/recursion in O(1) runtime?\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


258 : add-digits
257 : binary-tree-paths


No Description




b'<div class="question-description">\n<p><p>\r\nGiven a non-negative integer <code>num</code>, repeatedly add all its digits until the result has only one digit. \r\n</p>\n<p>\r\nFor example:\r\n</p>\n<p>\r\nGiven <code>num = 38</code>, the process is like: <code>3 + 8 = 11</code>, <code>1 + 1 = 2</code>. Since <code>2</code> has only one digit, return it.\r\n</p>\n<p><b>Follow up:</b><br/>\r\nCould you do it without any loop/recursion in O(1) runtime?\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, return all root-to-leaf paths.\r\n</p>\n<p>\r\nFor example, given the following binary tree:\r\n</p>\n<p>\n<pre>\r\n   1\r\n /   \\\r\n2     3\r\n \\\r\n  5\r\n</pre>\n</p>\n<p>\r\nAll root-to-leaf paths are:\r\n<pre>["1-&gt;2-&gt;5", "1-&gt;3"]</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'


257 : binary-tree-paths
256 : paint-house


b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, return all root-to-leaf paths.\r\n</p>\n<p>\r\nFor example, given the following binary tree:\r\n</p>\n<p>\n<pre>\r\n   1\r\n /   \\\r\n2     3\r\n \\\r\n  5\r\n</pre>\n</p>\n<p>\r\nAll root-to-leaf paths are:\r\n<pre>["1-&gt;2-&gt;5", "1-&gt;3"]</pre>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


256 : paint-house
255 : verify-preorder-sequence-in-binary-search-tree


No Description




No Description


255 : verify-preorder-sequence-in-binary-search-tree
254 : factor-combinations


No Description




No Description


254 : factor-combinations
253 : meeting-rooms-ii


No Description




No Description


253 : meeting-rooms-ii
252 : meeting-rooms


No Description




No Description


252 : meeting-rooms
251 : flatten-2d-vector


No Description




No Description


251 : flatten-2d-vector
250 : count-univalue-subtrees


No Description


250 : count-univalue-subtrees
249 : group-shifted-strings


No Description




No Description




No Description


249 : group-shifted-strings
248 : strobogrammatic-number-iii


No Description




No Description


248 : strobogrammatic-number-iii
247 : strobogrammatic-number-ii


No Description




No Description


247 : strobogrammatic-number-ii
246 : strobogrammatic-number


No Description




No Description


246 : strobogrammatic-number
245 : shortest-word-distance-iii


No Description




No Description


245 : shortest-word-distance-iii
244 : shortest-word-distance-ii


No Description




No Description


244 : shortest-word-distance-ii
243 : shortest-word-distance


No Description




No Description


243 : shortest-word-distance
242 : valid-anagram


No Description




b'<div class="question-description">\n<p><p>Given two strings <i>s</i> and <i>t</i>, write a function to determine if <i>t</i> is an anagram of <i>s</i>.</p>\n<p>For example,<br/>\n<i>s</i> = "anagram", <i>t</i> = "nagaram", return true.<br/>\n<i>s</i> = "rat", <i>t</i> = "car", return false.\r\n</p>\n<p><b>Note:</b><br/>\r\nYou may assume the string contains only lowercase alphabets.</p>\n<p><b>Follow up:</b><br/>\r\nWhat if the inputs contain unicode characters? How would you adapt your solution to such case?</p></p>\n</div>'


242 : valid-anagram
241 : different-ways-to-add-parentheses


b'<div class="question-description">\n<p><p>Given two strings <i>s</i> and <i>t</i>, write a function to determine if <i>t</i> is an anagram of <i>s</i>.</p>\n<p>For example,<br/>\n<i>s</i> = "anagram", <i>t</i> = "nagaram", return true.<br/>\n<i>s</i> = "rat", <i>t</i> = "car", return false.\r\n</p>\n<p><b>Note:</b><br/>\r\nYou may assume the string contains only lowercase alphabets.</p>\n<p><b>Follow up:</b><br/>\r\nWhat if the inputs contain unicode characters? How would you adapt your solution to such case?</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. The valid operators are <code>+</code>, <code>-</code> and <code>*</code>.</p>\n<br/>\n<b>Example 1</b>\n<p>Input: <code>"2-1-1"</code>.</p>\n<pre>((2-1)-1) = 0\r\n(2-(1-1)) = 2</pre>\n<p>Output: <code>[0, 2]</code></p>\n<br/>\n<b>Example 2</b>\n<p>Input: <code>"2*3-4*5"</code></p>\n<pre>(2*(3-(4*5))) = -34\r\n((2*3)-(4*5)) = -14\r\n((2*(3-4))*5) = -10\r\n(2*((3-4)*5)) = -10\r\n(((2*3)-4)*5) = 10</pre>\n<p>Output: <code>[-34, -14, -10, -10, 10]</code></p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


241 : different-ways-to-add-parentheses
240 : search-a-2d-matrix-ii


b'<div class="question-description">\n<p><p>Given a string of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. The valid operators are <code>+</code>, <code>-</code> and <code>*</code>.</p>\n<br/>\n<b>Example 1</b>\n<p>Input: <code>"2-1-1"</code>.</p>\n<pre>((2-1)-1) = 0\r\n(2-(1-1)) = 2</pre>\n<p>Output: <code>[0, 2]</code></p>\n<br/>\n<b>Example 2</b>\n<p>Input: <code>"2*3-4*5"</code></p>\n<pre>(2*(3-(4*5))) = -34\r\n((2*3)-(4*5)) = -14\r\n((2*(3-4))*5) = -10\r\n(2*((3-4)*5)) = -10\r\n(((2*3)-4)*5) = 10</pre>\n<p>Output: <code>[-34, -14, -10, -10, 10]</code></p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>Write an efficient algorithm that searches for a value in an <i>m</i> x <i>n</i> matrix. This matrix has the following properties:</p>\n<p>\n<ul>\n<li>Integers in each row are sorted in ascending from left to right.</li>\n<li>Integers in each column are sorted in ascending from top to bottom.</li>\n</ul>\n</p>\n<p>\r\nFor example,</p>\n<p>\r\nConsider the following matrix:\r\n</p>\n<pre>\r\n[\r\n  [1,   4,  7, 11, 15],\r\n  [2,   5,  8, 12, 19],\r\n  [3,   6,  9, 16, 22],\r\n  [10, 13, 14, 17, 24],\r\n  [18, 21, 23, 26, 30]\r\n]\r\n</pre>\n<p>Given <b>target</b> = <code>5</code>, return <code>true</code>.</p>\n<p>Given <b>target</b> = <code>20</code>, return <code>false</code>.</p></p>\n</div>'


240 : search-a-2d-matrix-ii
239 : sliding-window-maximum


b'<div class="question-description">\n<p><p>Given an array <i>nums</i>, there is a sliding window of size <i>k</i> which is moving from the very left of the array to the very right. You can only see the <i>k</i> numbers in the window. Each time the sliding window moves right by one position.</p>\n<p>For example,<br/>\r\nGiven <i>nums</i> = <code>[1,3,-1,-3,5,3,6,7]</code>, and <i>k</i> = 3.</p>\n<pre>\r\nWindow position                Max\r\n---------------               -----\r\n[1  3  -1] -3  5  3  6  7       3\r\n 1 [3  -1  -3] 5  3  6  7       3\r\n 1  3 [-1  -3  5] 3  6  7       5\r\n 1  3  -1 [-3  5  3] 6  7       5\r\n 1  3  -1  -3 [5  3  6] 7       6\r\n 1  3  -1  -3  5 [3  6  7]      7\r\n</pre>\n<p>Therefore, return the max sliding window as <code>[3,3,5,5,6,7]</code>.</p>\n<p><b>Note: </b><br/>\r\nYou may assume <i>k</i> is always valid, ie: 1 \xe2\x89\xa4 k \xe2\x89\xa4 input array\'s size for non-empty array.</p>\n<p><b>Follow up:</b><br/>\r\nCould you solve it in linear time?</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Write an efficient algorithm that searches for a value in an <i>m</i> x <i>n</i> matrix. This matrix has the following properties:</p>\n<p>\n<ul>\n<li>Integers in each row are sorted in ascending from left to right.</li>\n<li>Integers in each column are sorted in ascending from top to bottom.</li>\n</ul>\n</p>\n<p>\r\nFor example,</p>\n<p>\r\nConsider the following matrix:\r\n</p>\n<pre>\r\n[\r\n  [1,   4,  7, 11, 15],\r\n  [2,   5,  8, 12, 19],\r\n  [3,   6,  9, 16, 22],\r\n  [10, 13, 14, 17, 24],\r\n  [18, 21, 23, 26, 30]\r\n]\r\n</pre>\n<p>Given <b>target</b> = <code>5</code>, return <code>true</code>.</p>\n<p>Given <b>target</b> = <code>20</code>, return <code>false</code>.</p></p>\n</div>'


239 : sliding-window-maximum
238 : product-of-array-except-self


b'<div class="question-description">\n<p><p>\r\nGiven an array of <i>n</i> integers where <i>n</i> &gt; 1, <code>nums</code>, return an array <code>output</code> such that <code>output[i]</code> is equal to the product of all the elements of <code>nums</code> except <code>nums[i]</code>.</p>\n<p>Solve it <b>without division</b> and in O(<i>n</i>).</p>\n<p>For example, given <code>[1,2,3,4]</code>, return <code>[24,12,8,6]</code>.\r\n\r\n<p><b>Follow up:</b><br/>\r\nCould you solve it with constant space complexity? (Note: The output array <b>does not</b> count as extra space for the purpose of space complexity analysis.)</p></p>\n</p></div>'




b'<div class="question-description">\n<p><p>Given an array <i>nums</i>, there is a sliding window of size <i>k</i> which is moving from the very left of the array to the very right. You can only see the <i>k</i> numbers in the window. Each time the sliding window moves right by one position.</p>\n<p>For example,<br/>\r\nGiven <i>nums</i> = <code>[1,3,-1,-3,5,3,6,7]</code>, and <i>k</i> = 3.</p>\n<pre>\r\nWindow position                Max\r\n---------------               -----\r\n[1  3  -1] -3  5  3  6  7       3\r\n 1 [3  -1  -3] 5  3  6  7       3\r\n 1  3 [-1  -3  5] 3  6  7       5\r\n 1  3  -1 [-3  5  3] 6  7       5\r\n 1  3  -1  -3 [5  3  6] 7       6\r\n 1  3  -1  -3  5 [3  6  7]      7\r\n</pre>\n<p>Therefore, return the max sliding window as <code>[3,3,5,5,6,7]</code>.</p>\n<p><b>Note: </b><br/>\r\nYou may assume <i>k</i> is always valid, ie: 1 \xe2\x89\xa4 k \xe2\x89\xa4 input array\'s size for non-empty array.</p>\n<p><b>Follow up:</b><br/>\r\nCould you solve it in linear time?</p></p>\n</div>'


238 : product-of-array-except-self
237 : delete-node-in-a-linked-list


b'<div class="question-description">\n<p><p>\r\nGiven an array of <i>n</i> integers where <i>n</i> &gt; 1, <code>nums</code>, return an array <code>output</code> such that <code>output[i]</code> is equal to the product of all the elements of <code>nums</code> except <code>nums[i]</code>.</p>\n<p>Solve it <b>without division</b> and in O(<i>n</i>).</p>\n<p>For example, given <code>[1,2,3,4]</code>, return <code>[24,12,8,6]</code>.\r\n\r\n<p><b>Follow up:</b><br/>\r\nCould you solve it with constant space complexity? (Note: The output array <b>does not</b> count as extra space for the purpose of space complexity analysis.)</p></p>\n</p></div>'




b'<div class="question-description">\n<p><p>\r\nWrite a function to delete a node (except the tail) in a singly linked list, given only access to that node.\r\n</p>\n<p>\r\nSupposed the linked list is <code>1 -&gt; 2 -&gt; 3 -&gt; 4</code> and you are given the third node with value <code>3</code>, the linked list should become <code>1 -&gt; 2 -&gt; 4</code> after calling your function.\r\n</p></p>\n</div>'


237 : delete-node-in-a-linked-list
236 : lowest-common-ancestor-of-a-binary-tree


b'<div class="question-description">\n<p><p>\r\nWrite a function to delete a node (except the tail) in a singly linked list, given only access to that node.\r\n</p>\n<p>\r\nSupposed the linked list is <code>1 -&gt; 2 -&gt; 3 -&gt; 4</code> and you are given the third node with value <code>3</code>, the linked list should become <code>1 -&gt; 2 -&gt; 4</code> after calling your function.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.\r\n</p>\n<p>\r\nAccording to the <a href="https://en.wikipedia.org/wiki/Lowest_common_ancestor" target="_blank">definition of LCA on Wikipedia</a>: \xe2\x80\x9cThe lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow <b>a node to be a descendant of itself</b>).\xe2\x80\x9d\r\n</p>\n<pre>\r\n        _______3______\r\n       /              \\\r\n    ___5__          ___1__\r\n   /      \\        /      \\\r\n   6      _2       0       8\r\n         /  \\\r\n         7   4\r\n</pre>\n<p>\r\nFor example, the lowest common ancestor (LCA) of nodes <code>5</code> and <code>1</code> is <code>3</code>. Another example is LCA of nodes <code>5</code> and <code>4</code> is <code>5</code>, since a node can be a descendant of itself according to the LCA definition.</p></p>\n</div>'


236 : lowest-common-ancestor-of-a-binary-tree
235 : lowest-common-ancestor-of-a-binary-search-tree


b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.\r\n</p>\n<p>\r\nAccording to the <a href="https://en.wikipedia.org/wiki/Lowest_common_ancestor" target="_blank">definition of LCA on Wikipedia</a>: \xe2\x80\x9cThe lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow <b>a node to be a descendant of itself</b>).\xe2\x80\x9d\r\n</p>\n<pre>\r\n        _______3______\r\n       /              \\\r\n    ___5__          ___1__\r\n   /      \\        /      \\\r\n   6      _2       0       8\r\n         /  \\\r\n         7   4\r\n</pre>\n<p>\r\nFor example, the lowest common ancestor (LCA) of nodes <code>5</code> and <code>1</code> is <code>3</code>. Another example is LCA of nodes <code>5</code> and <code>4</code> is <code>5</code>, since a node can be a descendant of itself according to the LCA definition.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.\r\n</p>\n<p>\r\nAccording to the <a href="https://en.wikipedia.org/wiki/Lowest_common_ancestor" target="_blank">definition of LCA on Wikipedia</a>: \xe2\x80\x9cThe lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow <b>a node to be a descendant of itself</b>).\xe2\x80\x9d\r\n</p>\n<pre>\r\n        _______6______\r\n       /              \\\r\n    ___2__          ___8__\r\n   /      \\        /      \\\r\n   0      _4       7       9\r\n         /  \\\r\n         3   5\r\n</pre>\n<p>\r\nFor example, the lowest common ancestor (LCA) of nodes <code>2</code> and <code>8</code> is <code>6</code>. Another example is LCA of nodes <code>2</code> and <code>4</code> is <code>2</code>, since a node can be a descendant of itself according to the LCA definition.</p></p>\n</div>'


235 : lowest-common-ancestor-of-a-binary-search-tree
234 : palindrome-linked-list


b'<div class="question-description">\n<p><p>\r\nGiven a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.\r\n</p>\n<p>\r\nAccording to the <a href="https://en.wikipedia.org/wiki/Lowest_common_ancestor" target="_blank">definition of LCA on Wikipedia</a>: \xe2\x80\x9cThe lowest common ancestor is defined between two nodes v and w as the lowest node in T that has both v and w as descendants (where we allow <b>a node to be a descendant of itself</b>).\xe2\x80\x9d\r\n</p>\n<pre>\r\n        _______6______\r\n       /              \\\r\n    ___2__          ___8__\r\n   /      \\        /      \\\r\n   0      _4       7       9\r\n         /  \\\r\n         3   5\r\n</pre>\n<p>\r\nFor example, the lowest common ancestor (LCA) of nodes <code>2</code> and <code>8</code> is <code>6</code>. Another example is LCA of nodes <code>2</code> and <code>4</code> is <code>2</code>, since a node can be a descendant of itself according to the LCA definition.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a singly linked list, determine if it is a palindrome.</p>\n<p><b>Follow up:</b><br/>\r\nCould you do it in O(n) time and O(1) space?</p></p>\n</div>'


234 : palindrome-linked-list
233 : number-of-digit-one


b'<div class="question-description">\n<p><p>Given a singly linked list, determine if it is a palindrome.</p>\n<p><b>Follow up:</b><br/>\r\nCould you do it in O(n) time and O(1) space?</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.</p>\n<p>\r\nFor example:<br/> \r\nGiven n = 13,<br/>\r\nReturn 6, because digit 1 occurred in the following numbers: 1, 10, 11, 12, 13.\r\n</p></p>\n</div>'


233 : number-of-digit-one
232 : implement-queue-using-stacks


b'<div class="question-description">\n<p><p>Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.</p>\n<p>\r\nFor example:<br/> \r\nGiven n = 13,<br/>\r\nReturn 6, because digit 1 occurred in the following numbers: 1, 10, 11, 12, 13.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nImplement the following operations of a queue using stacks.\r\n<ul>\n<li>\r\npush(x) -- Push element x to the back of queue.\r\n</li>\n<li>\r\npop() -- Removes the element from in front of queue.\r\n</li>\n<li>\r\npeek() -- Get the front element.\r\n</li>\n<li>\r\nempty() -- Return whether the queue is empty.\r\n</li>\n</ul>\n<b>Notes:</b><br/>\n<ul>\n<li>You must use <i>only</i> standard operations of a stack -- which means only <code>push to top</code>, <code>peek/pop from top</code>, <code>size</code>, and <code>is empty</code> operations are valid.</li>\n<li>Depending on your language, stack may not be supported natively. You may simulate a stack by using a list or deque (double-ended queue), as long as you use only standard operations of a stack.</li>\n<li>You may assume that all operations are valid (for example, no pop or peek operations will be called on an empty queue).</li>\n</ul>\n</p></p>\n</div>'


232 : implement-queue-using-stacks
231 : power-of-two


b'<div class="question-description">\n<p><p>\r\nImplement the following operations of a queue using stacks.\r\n<ul>\n<li>\r\npush(x) -- Push element x to the back of queue.\r\n</li>\n<li>\r\npop() -- Removes the element from in front of queue.\r\n</li>\n<li>\r\npeek() -- Get the front element.\r\n</li>\n<li>\r\nempty() -- Return whether the queue is empty.\r\n</li>\n</ul>\n<b>Notes:</b><br/>\n<ul>\n<li>You must use <i>only</i> standard operations of a stack -- which means only <code>push to top</code>, <code>peek/pop from top</code>, <code>size</code>, and <code>is empty</code> operations are valid.</li>\n<li>Depending on your language, stack may not be supported natively. You may simulate a stack by using a list or deque (double-ended queue), as long as you use only standard operations of a stack.</li>\n<li>You may assume that all operations are valid (for example, no pop or peek operations will be called on an empty queue).</li>\n</ul>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an integer, write a function to determine if it is a power of two.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'


231 : power-of-two
230 : kth-smallest-element-in-a-bst


b'<div class="question-description">\n<p><p>\r\nGiven an integer, write a function to determine if it is a power of two.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary search tree, write a function <code>kthSmallest</code> to find the <b>k</b>th smallest element in it.</p>\n<p><b>Note: </b><br/>\r\nYou may assume k is always valid, 1 ? k ? BST\'s total elements.</p>\n<p><b>Follow up:</b><br/>\r\nWhat if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


230 : kth-smallest-element-in-a-bst
229 : majority-element-ii


b'<div class="question-description">\n<p><p>Given a binary search tree, write a function <code>kthSmallest</code> to find the <b>k</b>th smallest element in it.</p>\n<p><b>Note: </b><br/>\r\nYou may assume k is always valid, 1 ? k ? BST\'s total elements.</p>\n<p><b>Follow up:</b><br/>\r\nWhat if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an integer array of size <i>n</i>, find all elements that appear more than <code>\xe2\x8c\x8a n/3 \xe2\x8c\x8b</code> times. The algorithm should run in linear time and in O(1) space.</p></p>\n</div>'


229 : majority-element-ii
228 : summary-ranges


b'<div class="question-description">\n<p><p>Given an integer array of size <i>n</i>, find all elements that appear more than <code>\xe2\x8c\x8a n/3 \xe2\x8c\x8b</code> times. The algorithm should run in linear time and in O(1) space.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a sorted integer array without duplicates, return the summary of its ranges.</p>\n<p>\r\nFor example, given <code>[0,1,2,4,5,7]</code>, return <code>["0-&gt;2","4-&gt;5","7"].</code>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'


228 : summary-ranges
227 : basic-calculator-ii


b'<div class="question-description">\n<p><p>\r\nGiven a sorted integer array without duplicates, return the summary of its ranges.</p>\n<p>\r\nFor example, given <code>[0,1,2,4,5,7]</code>, return <code>["0-&gt;2","4-&gt;5","7"].</code>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Implement a basic calculator to evaluate a simple expression string.</p>\n<p>The expression string contains only <b>non-negative</b> integers, <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code> operators and empty spaces <code> </code>. The integer division should truncate toward zero.</p>\n<p>You may assume that the given expression is always valid.</p>\n<p>Some examples:<br/>\n<pre>\r\n"3+2*2" = 7\r\n" 3/2 " = 1\r\n" 3+5 / 2 " = 5\r\n</pre>\n</p>\n<p>\n<b>Note:</b> <b>Do not</b> use the <code>eval</code> built-in library function.\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


227 : basic-calculator-ii
226 : invert-binary-tree


b'<div class="question-description">\n<p><p>Implement a basic calculator to evaluate a simple expression string.</p>\n<p>The expression string contains only <b>non-negative</b> integers, <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code> operators and empty spaces <code> </code>. The integer division should truncate toward zero.</p>\n<p>You may assume that the given expression is always valid.</p>\n<p>Some examples:<br/>\n<pre>\r\n"3+2*2" = 7\r\n" 3/2 " = 1\r\n" 3+5 / 2 " = 5\r\n</pre>\n</p>\n<p>\n<b>Note:</b> <b>Do not</b> use the <code>eval</code> built-in library function.\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p>Invert a binary tree.\r\n<pre>     4\r\n   /   \\\r\n  2     7\r\n / \\   / \\\r\n1   3 6   9</pre>\r\n\r\nto\r\n<pre>     4\r\n   /   \\\r\n  7     2\r\n / \\   / \\\r\n9   6 3   1</pre>\n<b>Trivia:</b><br/>\r\nThis problem was inspired by <a href="https://twitter.com/mxcl/status/608682016205344768" target="_blank">this original tweet</a> by <a href="https://twitter.com/mxcl" target="_blank">Max Howell</a>:\r\n<blockquote>Google: 90% of our engineers use the software you wrote (Homebrew), but you can\xe2\x80\x99t invert a binary tree on a whiteboard so fuck off.</blockquote></p>\n</div>'


226 : invert-binary-tree
225 : implement-stack-using-queues


b'<div class="question-description">\n<p>Invert a binary tree.\r\n<pre>     4\r\n   /   \\\r\n  2     7\r\n / \\   / \\\r\n1   3 6   9</pre>\r\n\r\nto\r\n<pre>     4\r\n   /   \\\r\n  7     2\r\n / \\   / \\\r\n9   6 3   1</pre>\n<b>Trivia:</b><br/>\r\nThis problem was inspired by <a href="https://twitter.com/mxcl/status/608682016205344768" target="_blank">this original tweet</a> by <a href="https://twitter.com/mxcl" target="_blank">Max Howell</a>:\r\n<blockquote>Google: 90% of our engineers use the software you wrote (Homebrew), but you can\xe2\x80\x99t invert a binary tree on a whiteboard so fuck off.</blockquote></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nImplement the following operations of a stack using queues.\r\n<ul>\n<li>\r\npush(x) -- Push element x onto stack.\r\n</li>\n<li>\r\npop() -- Removes the element on top of the stack.\r\n</li>\n<li>\r\ntop() -- Get the top element.\r\n</li>\n<li>\r\nempty() -- Return whether the stack is empty.\r\n</li>\n</ul>\n<b>Notes:</b><br/>\n<ul>\n<li>You must use <i>only</i> standard operations of a queue -- which means only <code>push to back</code>, <code>peek/pop from front</code>, <code>size</code>, and <code>is empty</code> operations are valid.</li>\n<li>Depending on your language, queue may not be supported natively. You may simulate a queue by using a list or deque (double-ended queue), as long as you use only standard operations of a queue.</li>\n<li>You may assume that all operations are valid (for example, no pop or top operations will be called on an empty stack).</li>\n</ul>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and all test cases.</br></p></p>\n</div>'


225 : implement-stack-using-queues
224 : basic-calculator


b'<div class="question-description">\n<p><p>\r\nImplement the following operations of a stack using queues.\r\n<ul>\n<li>\r\npush(x) -- Push element x onto stack.\r\n</li>\n<li>\r\npop() -- Removes the element on top of the stack.\r\n</li>\n<li>\r\ntop() -- Get the top element.\r\n</li>\n<li>\r\nempty() -- Return whether the stack is empty.\r\n</li>\n</ul>\n<b>Notes:</b><br/>\n<ul>\n<li>You must use <i>only</i> standard operations of a queue -- which means only <code>push to back</code>, <code>peek/pop from front</code>, <code>size</code>, and <code>is empty</code> operations are valid.</li>\n<li>Depending on your language, queue may not be supported natively. You may simulate a queue by using a list or deque (double-ended queue), as long as you use only standard operations of a queue.</li>\n<li>You may assume that all operations are valid (for example, no pop or top operations will be called on an empty stack).</li>\n</ul>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/jianchao.li.fighter">@jianchao.li.fighter</a> for adding this problem and all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>Implement a basic calculator to evaluate a simple expression string.</p>\n<p>The expression string may contain open <code>(</code> and closing parentheses <code>)</code>, the plus <code>+</code> or minus sign <code>-</code>, <b>non-negative</b> integers and empty spaces <code> </code>.</p>\n<p>You may assume that the given expression is always valid.</p>\n<p>Some examples:<br/>\n<pre>\r\n"1 + 1" = 2\r\n" 2-1 + 2 " = 3\r\n"(1+(4+5+2)-3)+(6+8)" = 23\r\n</pre>\n</p>\n<p>\n<b>Note:</b> <b>Do not</b> use the <code>eval</code> built-in library function.\r\n</p></p>\n</div>'


224 : basic-calculator
223 : rectangle-area


b'<div class="question-description">\n<p><p>Implement a basic calculator to evaluate a simple expression string.</p>\n<p>The expression string may contain open <code>(</code> and closing parentheses <code>)</code>, the plus <code>+</code> or minus sign <code>-</code>, <b>non-negative</b> integers and empty spaces <code> </code>.</p>\n<p>You may assume that the given expression is always valid.</p>\n<p>Some examples:<br/>\n<pre>\r\n"1 + 1" = 2\r\n" 2-1 + 2 " = 3\r\n"(1+(4+5+2)-3)+(6+8)" = 23\r\n</pre>\n</p>\n<p>\n<b>Note:</b> <b>Do not</b> use the <code>eval</code> built-in library function.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Find the total area covered by two <b>rectilinear</b> rectangles in a <b>2D</b> plane.</p>\n<p>Each rectangle is defined by its bottom left corner and top right corner as shown in the figure.</p>\n<div style="width:529px; height:300px; background-color:rgb(235, 235, 235);">\n<img alt="Rectangle Area" border="0" src="/static/images/problemset/rectangle_area.png"/>\n</div>\n<div style="padding-top:23px;">\n<p>Assume that the total area is never beyond the maximum possible value of <b>int</b>.</p>\n</div>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem, creating the above image and all test cases.</p></p>\n</div>'


223 : rectangle-area
222 : count-complete-tree-nodes


b'<div class="question-description">\n<p><p>Find the total area covered by two <b>rectilinear</b> rectangles in a <b>2D</b> plane.</p>\n<p>Each rectangle is defined by its bottom left corner and top right corner as shown in the figure.</p>\n<div style="width:529px; height:300px; background-color:rgb(235, 235, 235);">\n<img alt="Rectangle Area" border="0" src="/static/images/problemset/rectangle_area.png"/>\n</div>\n<div style="padding-top:23px;">\n<p>Assume that the total area is never beyond the maximum possible value of <b>int</b>.</p>\n</div>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem, creating the above image and all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a <b>complete</b> binary tree, count the number of nodes.</p>\n<p><b><u>Definition of a complete binary tree from <a href="http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees" target="_blank">Wikipedia</a>:</u></b><br/>\r\nIn a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2<sup>h</sup> nodes inclusive at the last level h.</p></p>\n</div>'


222 : count-complete-tree-nodes
221 : maximal-square


b'<div class="question-description">\n<p><p>Given a <b>complete</b> binary tree, count the number of nodes.</p>\n<p><b><u>Definition of a complete binary tree from <a href="http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees" target="_blank">Wikipedia</a>:</u></b><br/>\r\nIn a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2<sup>h</sup> nodes inclusive at the last level h.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a 2D binary matrix filled with 0\'s and 1\'s, find the largest square containing only 1\'s and return its area.\r\n</p>\n<p>For example, given the following matrix:\r\n<pre>\r\n1 0 1 0 0\r\n1 0 <font color="red">1</font> <font color="red">1</font> 1\r\n1 1 <font color="red">1</font> <font color="red">1</font> 1\r\n1 0 0 1 0\r\n</pre>\r\nReturn 4.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p></p>\n</div>'


221 : maximal-square
220 : contains-duplicate-iii


b'<div class="question-description">\n<p><p>\r\nGiven a 2D binary matrix filled with 0\'s and 1\'s, find the largest square containing only 1\'s and return its area.\r\n</p>\n<p>For example, given the following matrix:\r\n<pre>\r\n1 0 1 0 0\r\n1 0 <font color="red">1</font> <font color="red">1</font> 1\r\n1 1 <font color="red">1</font> <font color="red">1</font> 1\r\n1 0 0 1 0\r\n</pre>\r\nReturn 4.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array of integers, find out whether there are two distinct indices <i>i</i> and <i>j</i> in the array such that the <b>absolute</b> difference between <b>nums[i]</b> and <b>nums[j]</b> is at most <i>t</i> and the <b>absolute</b> difference between <i>i</i> and <i>j</i> is at most <i>k</i>.\r\n</p></p>\n</div>'


220 : contains-duplicate-iii
219 : contains-duplicate-ii


b'<div class="question-description">\n<p><p>\r\nGiven an array of integers, find out whether there are two distinct indices <i>i</i> and <i>j</i> in the array such that the <b>absolute</b> difference between <b>nums[i]</b> and <b>nums[j]</b> is at most <i>t</i> and the <b>absolute</b> difference between <i>i</i> and <i>j</i> is at most <i>k</i>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array of integers and an integer <i>k</i>, find out whether there are two distinct indices <i>i</i> and <i>j</i> in the array such that <b>nums[i] = nums[j]</b> and the <b>absolute</b> difference between <i>i</i> and <i>j</i> is at most <i>k</i>.\r\n</p></p>\n</div>'


219 : contains-duplicate-ii
218 : the-skyline-problem


b'<div class="question-description">\n<p><p>\r\nGiven an array of integers and an integer <i>k</i>, find out whether there are two distinct indices <i>i</i> and <i>j</i> in the array such that <b>nums[i] = nums[j]</b> and the <b>absolute</b> difference between <i>i</i> and <i>j</i> is at most <i>k</i>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>A city\'s skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Now suppose you are <b>given the locations and height of all the buildings</b> as shown on a cityscape photo (Figure A), write a program to <b>output the skyline</b> formed by these buildings collectively (Figure B).</p>\n<!-- Cityscape -->\n<a href="/static/images/problemset/skyline1.jpg" target="_blank">\n<img alt="Buildings" border="0" src="/static/images/problemset/skyline1.jpg" style=" max-width: 45%;"/>\n</a>\n<!-- Use this image for the \'turning point\' description of skyline -->\n<a href="/static/images/problemset/skyline2.jpg" target="_blank">\n<img alt="Skyline Contour" border="0" src="/static/images/problemset/skyline2.jpg" style="max-width: 45%;"/>\n</a>\n<!-- Use the following image if we\'d like to define the output as \'horizontal lines\' rather than \'turning points\'-->\n<!--\r\n<a href="http://tinypic.com?ref=mij3wi" target="_blank">\r\n<img style="max-width: 45%;" src="http://i59.tinypic.com/mij3wi.jpg" border="0" alt="Skyline Contour">\r\n</a>\r\n-->\n<p>The geometric information of each building is represented by a triplet of integers <code>[Li, Ri, Hi]</code>, where <code>Li</code> and <code>Ri</code> are the x coordinates of the left and right edge of the ith building, respectively, and <code>Hi</code> is its height. It is guaranteed that <code>0 ? Li, Ri ? INT_MAX</code>, <code>0 &lt; Hi ? INT_MAX</code>, and <code>Ri - Li &gt; 0</code>. You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height 0.</p>\n<p>For instance, the dimensions of all buildings in Figure A are recorded as: <code>[ [2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8] ] </code>.</p>\n<p>The output is a list of "<b>key points</b>" (red dots in Figure B) in the format of <code>[ [x1,y1], [x2, y2], [x3, y3], ... ]</code> that uniquely defines a skyline. <b>A key point is the left endpoint of a horizontal line segment</b>. Note that the last key point, where the rightmost building ends, is merely used to mark the termination of the skyline, and always has zero height. Also, the ground in between any two adjacent buildings should be considered part of the skyline contour.\r\n\r\n<p>For instance, the skyline in Figure B should be represented as:<code>[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ]</code>.</p>\n<p><b>Notes:</b>\n<ul>\n<li> The number of buildings in any input list is guaranteed to be in the range <code>[0, 10000]</code>.</li>\n<li> The input list is already sorted in ascending order by the left x position <code>Li</code>. </li>\n<li> The output list must be sorted by the x position. </li>\n<li> There must be no consecutive horizontal lines of equal height in the output skyline. For instance, <code>[...[2 3], [4 5], [7 5], [11 5], [12 7]...]</code> is not acceptable; the three lines of height 5 should be merged into one in the final output as such: <code>[...[2 3], [4 5], [12 7], ...]</code></li>\n</ul>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/stellari">@stellari</a> for adding this problem, creating these two awesome images and all test cases.</p></p>\n</p></div>'


218 : the-skyline-problem
217 : contains-duplicate


b'<div class="question-description">\n<p><p>A city\'s skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Now suppose you are <b>given the locations and height of all the buildings</b> as shown on a cityscape photo (Figure A), write a program to <b>output the skyline</b> formed by these buildings collectively (Figure B).</p>\n<!-- Cityscape -->\n<a href="/static/images/problemset/skyline1.jpg" target="_blank">\n<img alt="Buildings" border="0" src="/static/images/problemset/skyline1.jpg" style=" max-width: 45%;"/>\n</a>\n<!-- Use this image for the \'turning point\' description of skyline -->\n<a href="/static/images/problemset/skyline2.jpg" target="_blank">\n<img alt="Skyline Contour" border="0" src="/static/images/problemset/skyline2.jpg" style="max-width: 45%;"/>\n</a>\n<!-- Use the following image if we\'d like to define the output as \'horizontal lines\' rather than \'turning points\'-->\n<!--\r\n<a href="http://tinypic.com?ref=mij3wi" target="_blank">\r\n<img style="max-width: 45%;" src="http://i59.tinypic.com/mij3wi.jpg" border="0" alt="Skyline Contour">\r\n</a>\r\n-->\n<p>The geometric information of each building is represented by a triplet of integers <code>[Li, Ri, Hi]</code>, where <code>Li</code> and <code>Ri</code> are the x coordinates of the left and right edge of the ith building, respectively, and <code>Hi</code> is its height. It is guaranteed that <code>0 ? Li, Ri ? INT_MAX</code>, <code>0 &lt; Hi ? INT_MAX</code>, and <code>Ri - Li &gt; 0</code>. You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height 0.</p>\n<p>For instance, the dimensions of all buildings in Figure A are recorded as: <code>[ [2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8] ] </code>.</p>\n<p>The output is a list of "<b>key points</b>" (red dots in Figure B) in the format of <code>[ [x1,y1], [x2, y2], [x3, y3], ... ]</code> that uniquely defines a skyline. <b>A key point is the left endpoint of a horizontal line segment</b>. Note that the last key point, where the rightmost building ends, is merely used to mark the termination of the skyline, and always has zero height. Also, the ground in between any two adjacent buildings should be considered part of the skyline contour.\r\n\r\n<p>For instance, the skyline in Figure B should be represented as:<code>[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ]</code>.</p>\n<p><b>Notes:</b>\n<ul>\n<li> The number of buildings in any input list is guaranteed to be in the range <code>[0, 10000]</code>.</li>\n<li> The input list is already sorted in ascending order by the left x position <code>Li</code>. </li>\n<li> The output list must be sorted by the x position. </li>\n<li> There must be no consecutive horizontal lines of equal height in the output skyline. For instance, <code>[...[2 3], [4 5], [7 5], [11 5], [12 7]...]</code> is not acceptable; the three lines of height 5 should be merged into one in the final output as such: <code>[...[2 3], [4 5], [12 7], ...]</code></li>\n</ul>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/stellari">@stellari</a> for adding this problem, creating these two awesome images and all test cases.</p></p>\n</p></div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array of integers, find if the array contains any duplicates. Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.\r\n</p></p>\n</div>'


217 : contains-duplicate
216 : combination-sum-iii


b'<div class="question-description">\n<p><p>\r\nGiven an array of integers, find if the array contains any duplicates. Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><div>\n<p>Find all possible combinations of <i><b>k</b></i> numbers that add up to a number <i><b>n</b></i>, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.</p>\n</div>\n<div>\n<br/>\n<p> <i><b>Example 1:</b></i></p>\n<p>Input:  <i><b>k</b></i> = 3,  <i><b>n</b></i> = 7</p>\n<p>Output: </p>\n<p><pre>\r\n[[1,2,4]]\r\n</pre></p>\n<br/>\n<p> <i><b>Example 2:</b></i></p>\n<p>Input:  <i><b>k</b></i> = 3,  <i><b>n</b></i> = 9</p>\n<p>Output: </p>\n<p><pre>\r\n[[1,2,6], [1,3,5], [2,3,4]]\r\n</pre></p>\n</div>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


216 : combination-sum-iii
215 : kth-largest-element-in-an-array


b'<div class="question-description">\n<p><div>\n<p>Find all possible combinations of <i><b>k</b></i> numbers that add up to a number <i><b>n</b></i>, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.</p>\n</div>\n<div>\n<br/>\n<p> <i><b>Example 1:</b></i></p>\n<p>Input:  <i><b>k</b></i> = 3,  <i><b>n</b></i> = 7</p>\n<p>Output: </p>\n<p><pre>\r\n[[1,2,4]]\r\n</pre></p>\n<br/>\n<p> <i><b>Example 2:</b></i></p>\n<p>Input:  <i><b>k</b></i> = 3,  <i><b>n</b></i> = 9</p>\n<p>Output: </p>\n<p><pre>\r\n[[1,2,6], [1,3,5], [2,3,4]]\r\n</pre></p>\n</div>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p>Find the <b>k</b>th largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.\r\n\r\n<p>For example,<br/>\r\nGiven <code>[3,2,1,5,6,4]</code> and k = 2, return 5.\r\n</p>\n<p><b>Note: </b><br/>\r\nYou may assume k is always valid, 1 ? k ? array\'s length.</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


215 : kth-largest-element-in-an-array
214 : shortest-palindrome


b'<div class="question-description">\n<p>Find the <b>k</b>th largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.\r\n\r\n<p>For example,<br/>\r\nGiven <code>[3,2,1,5,6,4]</code> and k = 2, return 5.\r\n</p>\n<p><b>Note: </b><br/>\r\nYou may assume k is always valid, 1 ? k ? array\'s length.</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string S, you are allowed to convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.\r\n</p>\n<p>For example: </p>\n<p>Given <code>"aacecaaa"</code>, return <code>"aaacecaaa"</code>.</p>\n<p>Given <code>"abcd"</code>, return <code>"dcbabcd"</code>.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/ifanchu">@ifanchu</a> for adding this problem and creating all test cases. Thanks to <a href="https://leetcode.com/discuss/user/Freezen">@Freezen</a> for additional test cases.</p></p>\n</div>'


214 : shortest-palindrome
213 : house-robber-ii


b'<div class="question-description">\n<p><p><b>Note:</b> This is an extension of <a href="https://leetcode.com/problems/house-robber/">House Robber</a>.</p>\n<p>After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are <strong>arranged in a circle.</strong> That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street. </p>\n<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <strong>without alerting the police</strong>.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string S, you are allowed to convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.\r\n</p>\n<p>For example: </p>\n<p>Given <code>"aacecaaa"</code>, return <code>"aaacecaaa"</code>.</p>\n<p>Given <code>"abcd"</code>, return <code>"dcbabcd"</code>.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/ifanchu">@ifanchu</a> for adding this problem and creating all test cases. Thanks to <a href="https://leetcode.com/discuss/user/Freezen">@Freezen</a> for additional test cases.</p></p>\n</div>'


213 : house-robber-ii
212 : word-search-ii


b'<div class="question-description">\n<p><p>\r\nGiven a 2D board and a list of words from the dictionary, find all words in the board.\r\n</p>\n<p>\r\nEach word must be constructed from letters of sequentially adjacent cell, where "adjacent" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <b>words</b> = <code>["oath","pea","eat","rain"]</code> and <b>board</b> = \r\n<pre>\r\n[\r\n  [\'<span style="color:#d70">o</span>\',\'<span style="color:#d70">a</span>\',\'a\',\'n\'],\r\n  [\'e\',\'<span style="color:#d30">t</span>\',\'<span style="color:#d00">a</span>\',\'<span style="color:#d00">e</span>\'],\r\n  [\'i\',\'<span style="color:#d70">h</span>\',\'k\',\'r\'],\r\n  [\'i\',\'f\',\'l\',\'v\']\r\n]\r\n</pre>\r\n\r\nReturn <code>["eat","oath"]</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nYou may assume that all inputs are consist of lowercase letters <code>a-z</code>.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show hint.</a></p>\n<div class="spoilers"><p>You would need to optimize your backtracking to pass the larger test. Could you stop backtracking earlier?</p>\n<p>If the current candidate does not exist in all words\' prefix, you could stop backtracking immediately. What kind of data structure could answer such query efficiently? Does a hash table work? Why or why not? How about a Trie? If you would like to learn how to implement a basic trie, please work on this problem: <a href="https://leetcode.com/problems/implement-trie-prefix-tree/">Implement Trie (Prefix Tree)</a> first.</p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p><b>Note:</b> This is an extension of <a href="https://leetcode.com/problems/house-robber/">House Robber</a>.</p>\n<p>After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are <strong>arranged in a circle.</strong> That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street. </p>\n<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <strong>without alerting the police</strong>.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p></p>\n</div>'


212 : word-search-ii
211 : add-and-search-word-data-structure-design


b'<div class="question-description">\n<p><p>\r\nGiven a 2D board and a list of words from the dictionary, find all words in the board.\r\n</p>\n<p>\r\nEach word must be constructed from letters of sequentially adjacent cell, where "adjacent" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <b>words</b> = <code>["oath","pea","eat","rain"]</code> and <b>board</b> = \r\n<pre>\r\n[\r\n  [\'<span style="color:#d70">o</span>\',\'<span style="color:#d70">a</span>\',\'a\',\'n\'],\r\n  [\'e\',\'<span style="color:#d30">t</span>\',\'<span style="color:#d00">a</span>\',\'<span style="color:#d00">e</span>\'],\r\n  [\'i\',\'<span style="color:#d70">h</span>\',\'k\',\'r\'],\r\n  [\'i\',\'f\',\'l\',\'v\']\r\n]\r\n</pre>\r\n\r\nReturn <code>["eat","oath"]</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nYou may assume that all inputs are consist of lowercase letters <code>a-z</code>.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show hint.</a></p>\n<div class="spoilers"><p>You would need to optimize your backtracking to pass the larger test. Could you stop backtracking earlier?</p>\n<p>If the current candidate does not exist in all words\' prefix, you could stop backtracking immediately. What kind of data structure could answer such query efficiently? Does a hash table work? Why or why not? How about a Trie? If you would like to learn how to implement a basic trie, please work on this problem: <a href="https://leetcode.com/problems/implement-trie-prefix-tree/">Implement Trie (Prefix Tree)</a> first.</p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nDesign a data structure that supports the following two operations:\r\n</p>\n<pre>\r\nvoid addWord(word)\r\nbool search(word)\r\n</pre>\n<p>\r\nsearch(word) can search a literal word or a regular expression string containing only letters <code>a-z</code> or <code>.</code>. A <code>.</code> means it can represent any one letter.</p>\n<p>\r\nFor example:</p>\n<pre>\r\naddWord("bad")\r\naddWord("dad")\r\naddWord("mad")\r\nsearch("pad") -&gt; false\r\nsearch("bad") -&gt; true\r\nsearch(".ad") -&gt; true\r\nsearch("b..") -&gt; true\r\n</pre>\n<p>\n<b>Note:</b><br/>\r\nYou may assume that all words are consist of lowercase letters <code>a-z</code>.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show hint.</a></p>\n<div class="spoilers">You should be familiar with how a Trie works. If not, please work on this problem: <a href="https://leetcode.com/problems/implement-trie-prefix-tree/">Implement Trie (Prefix Tree)</a> first.\r\n</div></p>\n</div>'


211 : add-and-search-word-data-structure-design
210 : course-schedule-ii


b'<div class="question-description">\n<p><p>\r\nDesign a data structure that supports the following two operations:\r\n</p>\n<pre>\r\nvoid addWord(word)\r\nbool search(word)\r\n</pre>\n<p>\r\nsearch(word) can search a literal word or a regular expression string containing only letters <code>a-z</code> or <code>.</code>. A <code>.</code> means it can represent any one letter.</p>\n<p>\r\nFor example:</p>\n<pre>\r\naddWord("bad")\r\naddWord("dad")\r\naddWord("mad")\r\nsearch("pad") -&gt; false\r\nsearch("bad") -&gt; true\r\nsearch(".ad") -&gt; true\r\nsearch("b..") -&gt; true\r\n</pre>\n<p>\n<b>Note:</b><br/>\r\nYou may assume that all words are consist of lowercase letters <code>a-z</code>.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show hint.</a></p>\n<div class="spoilers">You should be familiar with how a Trie works. If not, please work on this problem: <a href="https://leetcode.com/problems/implement-trie-prefix-tree/">Implement Trie (Prefix Tree)</a> first.\r\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nThere are a total of <i>n</i> courses you have to take, labeled from <code>0</code> to <code>n - 1</code>.</p>\n<p>Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: <code>[0,1]</code></p>\n<p>\r\nGiven the total number of courses and a list of prerequisite <b>pairs</b>, return the ordering of courses you should take to finish all courses.</p>\n<p>There may be multiple correct orders, you just need to return one of them. If it is impossible to finish all courses, return an empty array.\r\n</p>\n<p>For example:</p>\n<pre>2, [[1,0]]</pre>\n<p>There are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is <code>[0,1]</code></p>\n<pre>4, [[1,0],[2,0],[3,1],[3,2]]</pre>\n<p>There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0. So one correct course order is <code>[0,1,2,3]</code>. Another correct ordering is<code>[0,2,1,3]</code>.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input prerequisites is a graph represented by <b>a list of edges</b>, not adjacency matrices. Read more about <a href="https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs" target="_blank">how a graph is represented</a>.</li>\n<li>You may assume that there are no duplicate edges in the input prerequisites.</li>\n</ol>\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show more hints.</a></p>\n<div class="spoilers"><b>Hints:</b>\n<ol>\n<li>This problem is equivalent to finding the topological order in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.</li>\n<li><a href="https://class.coursera.org/algo-003/lecture/52" target="_blank">Topological Sort via DFS</a> - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.</li>\n<li>Topological sort could also be done via <a href="http://en.wikipedia.org/wiki/Topological_sorting#Algorithms" target="_blank">BFS</a>.</li>\n</ol>\n</div></p>\n</div>'


210 : course-schedule-ii
209 : minimum-size-subarray-sum


b'<div class="question-description">\n<p><p>\r\nThere are a total of <i>n</i> courses you have to take, labeled from <code>0</code> to <code>n - 1</code>.</p>\n<p>Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: <code>[0,1]</code></p>\n<p>\r\nGiven the total number of courses and a list of prerequisite <b>pairs</b>, return the ordering of courses you should take to finish all courses.</p>\n<p>There may be multiple correct orders, you just need to return one of them. If it is impossible to finish all courses, return an empty array.\r\n</p>\n<p>For example:</p>\n<pre>2, [[1,0]]</pre>\n<p>There are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is <code>[0,1]</code></p>\n<pre>4, [[1,0],[2,0],[3,1],[3,2]]</pre>\n<p>There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0. So one correct course order is <code>[0,1,2,3]</code>. Another correct ordering is<code>[0,2,1,3]</code>.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input prerequisites is a graph represented by <b>a list of edges</b>, not adjacency matrices. Read more about <a href="https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs" target="_blank">how a graph is represented</a>.</li>\n<li>You may assume that there are no duplicate edges in the input prerequisites.</li>\n</ol>\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show more hints.</a></p>\n<div class="spoilers"><b>Hints:</b>\n<ol>\n<li>This problem is equivalent to finding the topological order in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.</li>\n<li><a href="https://class.coursera.org/algo-003/lecture/52" target="_blank">Topological Sort via DFS</a> - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.</li>\n<li>Topological sort could also be done via <a href="http://en.wikipedia.org/wiki/Topological_sorting#Algorithms" target="_blank">BFS</a>.</li>\n</ol>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array of <strong>n</strong> positive integers and a positive integer <strong>s</strong>, find the minimal length of a <b>contiguous</b> subarray of which the sum \xe2\x89\xa5 <strong>s</strong>. If there isn\'t one, return 0 instead.\r\n</p>\n<p>\r\nFor example, given the array <code>[2,3,1,2,4,3]</code> and <code>s = 7</code>,<br/>\r\nthe subarray <code>[4,3]</code> has the minimal length under the problem constraint.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show more practice.</a></p>\n<div class="spoilers"><b>More practice:</b>\n<p>If you have figured out the <i>O</i>(<i>n</i>) solution, try coding another solution of which the time complexity is <i>O</i>(<i>n</i> log <i>n</i>).</p>\n</div>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p></p>\n</div>'


209 : minimum-size-subarray-sum
208 : implement-trie-prefix-tree


b'<div class="question-description">\n<p><p>\r\nGiven an array of <strong>n</strong> positive integers and a positive integer <strong>s</strong>, find the minimal length of a <b>contiguous</b> subarray of which the sum \xe2\x89\xa5 <strong>s</strong>. If there isn\'t one, return 0 instead.\r\n</p>\n<p>\r\nFor example, given the array <code>[2,3,1,2,4,3]</code> and <code>s = 7</code>,<br/>\r\nthe subarray <code>[4,3]</code> has the minimal length under the problem constraint.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show more practice.</a></p>\n<div class="spoilers"><b>More practice:</b>\n<p>If you have figured out the <i>O</i>(<i>n</i>) solution, try coding another solution of which the time complexity is <i>O</i>(<i>n</i> log <i>n</i>).</p>\n</div>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nImplement a trie with <code>insert</code>, <code>search</code>, and <code>startsWith</code> methods.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nYou may assume that all inputs are consist of lowercase letters <code>a-z</code>.\r\n</p></p>\n</div>'


208 : implement-trie-prefix-tree
207 : course-schedule


b'<div class="question-description">\n<p><p>\r\nThere are a total of <i>n</i> courses you have to take, labeled from <code>0</code> to <code>n - 1</code>.</p>\n<p>Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: <code>[0,1]</code></p>\n<p>\r\nGiven the total number of courses and a list of prerequisite <b>pairs</b>, is it possible for you to finish all courses?\r\n</p>\n<p>For example:</p>\n<pre>2, [[1,0]]</pre>\n<p>There are a total of 2 courses to take. To take course 1 you should have finished course 0. So it is possible.</p>\n<pre>2, [[1,0],[0,1]]</pre>\n<p>There are a total of 2 courses to take. To take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input prerequisites is a graph represented by <b>a list of edges</b>, not adjacency matrices. Read more about <a href="https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs" target="_blank">how a graph is represented</a>.</li>\n<li>You may assume that there are no duplicate edges in the input prerequisites.</li>\n</ol>\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show more hints.</a></p>\n<div class="spoilers"><b>Hints:</b>\n<ol>\n<li>This problem is equivalent to finding if a cycle exists in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.</li>\n<li><a href="https://class.coursera.org/algo-003/lecture/52" target="_blank">Topological Sort via DFS</a> - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.</li>\n<li>Topological sort could also be done via <a href="http://en.wikipedia.org/wiki/Topological_sorting#Algorithms" target="_blank">BFS</a>.</li>\n</ol>\n</div></p>\n</div>'


207 : course-schedule
206 : reverse-linked-list


b'<div class="question-description">\n<p><p>\r\nImplement a trie with <code>insert</code>, <code>search</code>, and <code>startsWith</code> methods.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nYou may assume that all inputs are consist of lowercase letters <code>a-z</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nThere are a total of <i>n</i> courses you have to take, labeled from <code>0</code> to <code>n - 1</code>.</p>\n<p>Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: <code>[0,1]</code></p>\n<p>\r\nGiven the total number of courses and a list of prerequisite <b>pairs</b>, is it possible for you to finish all courses?\r\n</p>\n<p>For example:</p>\n<pre>2, [[1,0]]</pre>\n<p>There are a total of 2 courses to take. To take course 1 you should have finished course 0. So it is possible.</p>\n<pre>2, [[1,0],[0,1]]</pre>\n<p>There are a total of 2 courses to take. To take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible.</p>\n<p><b>Note:</b><br/>\n<ol>\n<li>The input prerequisites is a graph represented by <b>a list of edges</b>, not adjacency matrices. Read more about <a href="https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs" target="_blank">how a graph is represented</a>.</li>\n<li>You may assume that there are no duplicate edges in the input prerequisites.</li>\n</ol>\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show more hints.</a></p>\n<div class="spoilers"><b>Hints:</b>\n<ol>\n<li>This problem is equivalent to finding if a cycle exists in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.</li>\n<li><a href="https://class.coursera.org/algo-003/lecture/52" target="_blank">Topological Sort via DFS</a> - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.</li>\n<li>Topological sort could also be done via <a href="http://en.wikipedia.org/wiki/Topological_sorting#Algorithms" target="_blank">BFS</a>.</li>\n</ol>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>Reverse a singly linked list.</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show more hints.</a></p>\n<div class="spoilers"><b>Hint:</b>\n<p>A linked list can be reversed either iteratively or recursively. Could you implement both?</p>\n</div></p>\n</div>'


206 : reverse-linked-list
205 : isomorphic-strings


b'<div class="question-description">\n<p><p>Reverse a singly linked list.</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show more hints.</a></p>\n<div class="spoilers"><b>Hint:</b>\n<p>A linked list can be reversed either iteratively or recursively. Could you implement both?</p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>Given two strings <b><i>s</i></b> and <b><i>t</i></b>, determine if they are isomorphic.</p>\n<p>Two strings are isomorphic if the characters in <b><i>s</i></b> can be replaced to get <b><i>t</i></b>.</p>\n<p>All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.</p>\n<p>For example,<br/>\r\nGiven <code>"egg"</code>, <code>"add"</code>, return true.</p>\n<p>Given <code>"foo"</code>, <code>"bar"</code>, return false.</p>\n<p>Given <code>"paper"</code>, <code>"title"</code>, return true.</p>\n<p><b>Note:</b><br/>\r\nYou may assume both <b><i>s</i></b> and <b><i>t</i></b> have the same length.</p></p>\n</div>'


205 : isomorphic-strings
204 : count-primes


b'<div class="question-description">\n<p><p>Given two strings <b><i>s</i></b> and <b><i>t</i></b>, determine if they are isomorphic.</p>\n<p>Two strings are isomorphic if the characters in <b><i>s</i></b> can be replaced to get <b><i>t</i></b>.</p>\n<p>All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.</p>\n<p>For example,<br/>\r\nGiven <code>"egg"</code>, <code>"add"</code>, return true.</p>\n<p>Given <code>"foo"</code>, <code>"bar"</code>, return false.</p>\n<p>Given <code>"paper"</code>, <code>"title"</code>, return true.</p>\n<p><b>Note:</b><br/>\r\nYou may assume both <b><i>s</i></b> and <b><i>t</i></b> have the same length.</p></p>\n</div>'




b'<div class="question-description">\n<p><p><b>Description:</b></p>\n<p>Count the number of prime numbers less than a non-negative number, <b><i>n</i></b>.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</p></p>\n</div>'


204 : count-primes
203 : remove-linked-list-elements


b'<div class="question-description">\n<p><p>Remove all elements from a linked list of integers that have value <b><i>val</i></b>.</p>\n<p>\n<b>Example</b><br/>\n<i><b>Given:</b></i> 1 --&gt; 2 --&gt; 6 --&gt; 3 --&gt; 4 --&gt; 5 --&gt; 6,  <b><i>val</i></b> = 6<br/>\n<i><b>Return:</b></i> 1 --&gt; 2 --&gt; 3 --&gt; 4 --&gt; 5\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p><b>Description:</b></p>\n<p>Count the number of prime numbers less than a non-negative number, <b><i>n</i></b>.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</p></p>\n</div>'


203 : remove-linked-list-elements
202 : happy-number


b'<div class="question-description">\n<p><p>Remove all elements from a linked list of integers that have value <b><i>val</i></b>.</p>\n<p>\n<b>Example</b><br/>\n<i><b>Given:</b></i> 1 --&gt; 2 --&gt; 6 --&gt; 3 --&gt; 4 --&gt; 5 --&gt; 6,  <b><i>val</i></b> = 6<br/>\n<i><b>Return:</b></i> 1 --&gt; 2 --&gt; 3 --&gt; 4 --&gt; 5\r\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>Write an algorithm to determine if a number is "happy".</p>\n<p>A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.</p>\n<p><b>Example:\xc2\xa0</b>19 is a happy number</p>\n<ul style="list-style: none;">\n<li>1<sup>2</sup> + 9<sup>2</sup> = 82</li>\n<li>8<sup>2</sup> + 2<sup>2</sup> = 68</li>\n<li>6<sup>2</sup> + 8<sup>2</sup> = 100</li>\n<li>1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1</li>\n</ul>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> and <a href="https://leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'


202 : happy-number
201 : bitwise-and-of-numbers-range


b'<div class="question-description">\n<p><p>Write an algorithm to determine if a number is "happy".</p>\n<p>A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.</p>\n<p><b>Example:\xc2\xa0</b>19 is a happy number</p>\n<ul style="list-style: none;">\n<li>1<sup>2</sup> + 9<sup>2</sup> = 82</li>\n<li>8<sup>2</sup> + 2<sup>2</sup> = 68</li>\n<li>6<sup>2</sup> + 8<sup>2</sup> = 100</li>\n<li>1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1</li>\n</ul>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> and <a href="https://leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a range [m, n] where 0 &lt;= m &lt;= n &lt;= 2147483647, return the bitwise AND of all numbers in this range, inclusive.</p>\n<p>\r\nFor example, given the range [5, 7], you should return 4.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/amrsaqr">@amrsaqr</a> for adding this problem and creating all test cases.</p></p>\n</div>'


201 : bitwise-and-of-numbers-range
200 : number-of-islands


b'<div class="question-description">\n<p><p>Given a range [m, n] where 0 &lt;= m &lt;= n &lt;= 2147483647, return the bitwise AND of all numbers in this range, inclusive.</p>\n<p>\r\nFor example, given the range [5, 7], you should return 4.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/amrsaqr">@amrsaqr</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a 2d grid map of <code>\'1\'</code>s (land) and <code>\'0\'</code>s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n<p><i><b>Example 1:</b></i></p>\n<pre>11110<br/>11010<br/>11000<br/>00000</pre>\n<p>Answer: 1</p>\n<p><i><b>Example 2:</b></i></p>\n<pre>11000<br/>11000<br/>00100<br/>00011</pre>\n<p>Answer: 3</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


200 : number-of-islands
199 : binary-tree-right-side-view


b'<div class="question-description">\n<p><p>Given a binary tree, imagine yourself standing on the <i>right</i> side of it, return the values of the nodes you can see ordered from top to bottom.</p>\n<p>\r\nFor example:<br/>\r\nGiven the following binary tree,<br/>\n<pre>\r\n   1            &lt;---\r\n /   \\\r\n2     3         &lt;---\r\n \\     \\\r\n  5     4       &lt;---\r\n</pre>\n</p>\n<p>\r\nYou should return <code>[1, 3, 4]</code>.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/amrsaqr">@amrsaqr</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a 2d grid map of <code>\'1\'</code>s (land) and <code>\'0\'</code>s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n<p><i><b>Example 1:</b></i></p>\n<pre>11110<br/>11010<br/>11000<br/>00000</pre>\n<p>Answer: 1</p>\n<p><i><b>Example 2:</b></i></p>\n<pre>11000<br/>11000<br/>00100<br/>00011</pre>\n<p>Answer: 3</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


199 : binary-tree-right-side-view
198 : house-robber


b'<div class="question-description">\n<p><p>Given a binary tree, imagine yourself standing on the <i>right</i> side of it, return the values of the nodes you can see ordered from top to bottom.</p>\n<p>\r\nFor example:<br/>\r\nGiven the following binary tree,<br/>\n<pre>\r\n   1            &lt;---\r\n /   \\\r\n2     3         &lt;---\r\n \\     \\\r\n  5     4       &lt;---\r\n</pre>\n</p>\n<p>\r\nYou should return <code>[1, 3, 4]</code>.\r\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/amrsaqr">@amrsaqr</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and <b>it will automatically contact the police if two adjacent houses were broken into on the same night</b>.</p>\n<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <b>without alerting the police</b>.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ifanchu">@ifanchu</a> for adding this problem and creating all test cases. Also thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding additional test cases.</p></p>\n</div>'


198 : house-robber
191 : number-of-1-bits


b'<div class="question-description">\n<p><p>Write a function that takes an unsigned integer and returns the number of \xe2\x80\x991\' bits it has (also known as the <a href="http://en.wikipedia.org/wiki/Hamming_weight">Hamming weight</a>).</p>\n<p>For example, the 32-bit integer \xe2\x80\x9911\' has binary representation <code>00000000000000000000000000001011</code>, so the function should return 3.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and <b>it will automatically contact the police if two adjacent houses were broken into on the same night</b>.</p>\n<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <b>without alerting the police</b>.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ifanchu">@ifanchu</a> for adding this problem and creating all test cases. Also thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding additional test cases.</p></p>\n</div>'


191 : number-of-1-bits
190 : reverse-bits


b'<div class="question-description">\n<p><p>Write a function that takes an unsigned integer and returns the number of \xe2\x80\x991\' bits it has (also known as the <a href="http://en.wikipedia.org/wiki/Hamming_weight">Hamming weight</a>).</p>\n<p>For example, the 32-bit integer \xe2\x80\x9911\' has binary representation <code>00000000000000000000000000001011</code>, so the function should return 3.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Reverse bits of a given 32 bits unsigned integer.</p>\n<p>For example, given input 43261596 (represented in binary as <b>00000010100101000001111010011100</b>), return 964176192 (represented in binary as <b>00111001011110000010100101000000</b>).</p>\n<p>\n<b>Follow up</b>:<br/>\r\nIf this function is called many times, how would you optimize it?\r\n</p>\n<p>Related problem: <a href="/problems/reverse-integer/">Reverse Integer</a></p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'


190 : reverse-bits
189 : rotate-array


b'<div class="question-description">\n<p><p>Reverse bits of a given 32 bits unsigned integer.</p>\n<p>For example, given input 43261596 (represented in binary as <b>00000010100101000001111010011100</b>), return 964176192 (represented in binary as <b>00111001011110000010100101000000</b>).</p>\n<p>\n<b>Follow up</b>:<br/>\r\nIf this function is called many times, how would you optimize it?\r\n</p>\n<p>Related problem: <a href="/problems/reverse-integer/">Reverse Integer</a></p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Rotate an array of <i>n</i> elements to the right by <i>k</i> steps.</p>\n<p>For example, with <i>n</i> = 7 and <i>k</i> = 3, the array <code>[1,2,3,4,5,6,7]</code> is rotated to <code>[5,6,7,1,2,3,4]</code>. </p>\n<p><b>Note:</b><br/>\r\nTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">[show hint]</a></p>\n<div class="spoilers"><b>Hint:</b><br/>\r\nCould you do it in-place with O(1) extra space?\r\n</div>\n<p>Related problem: <a href="/problems/reverse-words-in-a-string-ii/">Reverse Words in a String II</a></p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p></p>\n</div>'


189 : rotate-array
188 : best-time-to-buy-and-sell-stock-iv


b'<div class="question-description">\n<p><p>Rotate an array of <i>n</i> elements to the right by <i>k</i> steps.</p>\n<p>For example, with <i>n</i> = 7 and <i>k</i> = 3, the array <code>[1,2,3,4,5,6,7]</code> is rotated to <code>[5,6,7,1,2,3,4]</code>. </p>\n<p><b>Note:</b><br/>\r\nTry to come up as many solutions as you can, there are at least 3 different ways to solve this problem.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">[show hint]</a></p>\n<div class="spoilers"><b>Hint:</b><br/>\r\nCould you do it in-place with O(1) extra space?\r\n</div>\n<p>Related problem: <a href="/problems/reverse-words-in-a-string-ii/">Reverse Words in a String II</a></p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete at most <b>k</b> transactions.</p>\n<p><b>Note:</b><br/>\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p></p>\n</div>'


188 : best-time-to-buy-and-sell-stock-iv
187 : repeated-dna-sequences


b'<div class="question-description">\n<p><p>\r\nAll DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.</p>\n<p>Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.</p>\n<p>\r\nFor example,</p>\n<pre>\r\nGiven s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT",\r\n\r\nReturn:\r\n["AAAAACCCCC", "CCCCCAAAAA"].\r\n</pre></p>\n</div>'


187 : repeated-dna-sequences
186 : reverse-words-in-a-string-ii


b'<div class="question-description">\n<p><p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete at most <b>k</b> transactions.</p>\n<p><b>Note:</b><br/>\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nAll DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.</p>\n<p>Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.</p>\n<p>\r\nFor example,</p>\n<pre>\r\nGiven s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT",\r\n\r\nReturn:\r\n["AAAAACCCCC", "CCCCCAAAAA"].\r\n</pre></p>\n</div>'




No Description


186 : reverse-words-in-a-string-ii
179 : largest-number


No Description




b'<div class="question-description">\n<p><p>Given a list of non negative integers, arrange them such that they form the largest number.</p>\n<p>For example, given <code>[3, 30, 34, 5, 9]</code>, the largest formed number is <code>9534330</code>.</p>\n<p>Note: The result may be very large, so you need to return a string instead of an integer.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'


179 : largest-number
174 : dungeon-game


b'<div class="question-description">\n<p><p>Given a list of non negative integers, arrange them such that they form the largest number.</p>\n<p>For example, given <code>[3, 30, 34, 5, 9]</code>, the largest formed number is <code>9534330</code>.</p>\n<p>Note: The result may be very large, so you need to return a string instead of an integer.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><style>\r\ntable.dungeon, .dungeon th, .dungeon td {\r\n  border:3px solid black;\r\n}\r\n\r\n .dungeon th, .dungeon td {\r\n    text-align: center;\r\n    height: 70px;\r\n    width: 70px;\r\n}\r\n</style>\n<p>The demons had captured the princess (<b>P</b>) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (<b>K</b>) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess. </p>\n<p>The knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately. </p>\n<p>Some of the rooms are guarded by demons, so the knight loses health (<i>negative</i> integers) upon entering these rooms; \r\nother rooms are either empty (<i>0\'s</i>) or contain magic orbs that increase the knight\'s health (<i>positive</i> integers).</p>\n<p>In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step. </p>\n<br/>\n<p><b>Write a function to determine the knight\'s minimum initial health so that he is able to rescue the princess.</b></p>\n<p>For example, given the dungeon below, the initial health of the knight must be at least <b>7</b> if he follows the optimal path <code>RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN</code>.</p>\n<table class="dungeon">\n<tr>\n<td>-2 (K)</td>\n<td>-3</td>\n<td>3</td>\n</tr>\n<tr>\n<td>-5</td>\n<td>-10</td>\n<td>1</td>\n</tr>\n<tr>\n<td>10</td>\n<td>30</td>\n<td>-5 (P)</td>\n</tr>\n</table>\n<!---2K   -3  3\r\n-5   -10   1\r\n10 30   5P-->\n<br/>\n<p><b>Notes:</b>\n<ul>\n<li>The knight\'s health has no upper bound.</li>\n<li>Any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.  </li>\n</ul>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/stellari">@stellari</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'


174 : dungeon-game
173 : binary-search-tree-iterator


b'<div class="question-description">\n<p><style>\r\ntable.dungeon, .dungeon th, .dungeon td {\r\n  border:3px solid black;\r\n}\r\n\r\n .dungeon th, .dungeon td {\r\n    text-align: center;\r\n    height: 70px;\r\n    width: 70px;\r\n}\r\n</style>\n<p>The demons had captured the princess (<b>P</b>) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (<b>K</b>) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess. </p>\n<p>The knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately. </p>\n<p>Some of the rooms are guarded by demons, so the knight loses health (<i>negative</i> integers) upon entering these rooms; \r\nother rooms are either empty (<i>0\'s</i>) or contain magic orbs that increase the knight\'s health (<i>positive</i> integers).</p>\n<p>In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step. </p>\n<br/>\n<p><b>Write a function to determine the knight\'s minimum initial health so that he is able to rescue the princess.</b></p>\n<p>For example, given the dungeon below, the initial health of the knight must be at least <b>7</b> if he follows the optimal path <code>RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN</code>.</p>\n<table class="dungeon">\n<tr>\n<td>-2 (K)</td>\n<td>-3</td>\n<td>3</td>\n</tr>\n<tr>\n<td>-5</td>\n<td>-10</td>\n<td>1</td>\n</tr>\n<tr>\n<td>10</td>\n<td>30</td>\n<td>-5 (P)</td>\n</tr>\n</table>\n<!---2K   -3  3\r\n-5   -10   1\r\n10 30   5P-->\n<br/>\n<p><b>Notes:</b>\n<ul>\n<li>The knight\'s health has no upper bound.</li>\n<li>Any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.  </li>\n</ul>\n</p>\n<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/stellari">@stellari</a> for adding this problem and creating all test cases.</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.</p>\n<p>Calling <code>next()</code> will return the next smallest number in the BST.</p>\n<p><b>Note: </b><code>next()</code> and <code>hasNext()</code> should run in average O(1) time and uses O(<i>h</i>) memory, where <i>h</i> is the height of the tree. </p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'


173 : binary-search-tree-iterator
172 : factorial-trailing-zeroes


b'<div class="question-description">\n<p><p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.</p>\n<p>Calling <code>next()</code> will return the next smallest number in the BST.</p>\n<p><b>Note: </b><code>next()</code> and <code>hasNext()</code> should run in average O(1) time and uses O(<i>h</i>) memory, where <i>h</i> is the height of the tree. </p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an integer <i>n</i>, return the number of trailing zeroes in <i>n</i>!.</p>\n<p><b>Note: </b>Your solution should be in logarithmic time complexity.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'


172 : factorial-trailing-zeroes
171 : excel-sheet-column-number


b'<div class="question-description">\n<p><p>Given an integer <i>n</i>, return the number of trailing zeroes in <i>n</i>!.</p>\n<p><b>Note: </b>Your solution should be in logarithmic time complexity.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Related to question <a href="https://leetcode.com/problems/excel-sheet-column-title/">Excel Sheet Column Title</a></p>\n<p>Given a column title as appear in an Excel sheet, return its corresponding column number.</p>\n<p>For example:</p>\n<pre>    A -&gt; 1\r\n    B -&gt; 2\r\n    C -&gt; 3\r\n    ...\r\n    Z -&gt; 26\r\n    AA -&gt; 27\r\n    AB -&gt; 28 </pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'


171 : excel-sheet-column-number
170 : two-sum-iii-data-structure-design


b'<div class="question-description">\n<p><p>Related to question <a href="https://leetcode.com/problems/excel-sheet-column-title/">Excel Sheet Column Title</a></p>\n<p>Given a column title as appear in an Excel sheet, return its corresponding column number.</p>\n<p>For example:</p>\n<pre>    A -&gt; 1\r\n    B -&gt; 2\r\n    C -&gt; 3\r\n    ...\r\n    Z -&gt; 26\r\n    AA -&gt; 27\r\n    AB -&gt; 28 </pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


170 : two-sum-iii-data-structure-design
169 : majority-element


b'<div class="question-description">\n<p><p>Given an array of size <i>n</i>, find the majority element. The majority element is the element that appears <b>more than</b> <code>\xe2\x8c\x8a n/2 \xe2\x8c\x8b</code> times.</p>\n<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'


169 : majority-element
168 : excel-sheet-column-title


No Description




b'<div class="question-description">\n<p><p>Given an array of size <i>n</i>, find the majority element. The majority element is the element that appears <b>more than</b> <code>\xe2\x8c\x8a n/2 \xe2\x8c\x8b</code> times.</p>\n<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a positive integer, return its corresponding column title as appear in an Excel sheet.</p>\n<p>For example:</p>\n<pre>\r\n    1 -&gt; A\r\n    2 -&gt; B\r\n    3 -&gt; C\r\n    ...\r\n    26 -&gt; Z\r\n    27 -&gt; AA\r\n    28 -&gt; AB </pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/ifanchu">@ifanchu</a> for adding this problem and creating all test cases.</p></p>\n</div>'


168 : excel-sheet-column-title
167 : two-sum-ii-input-array-is-sorted


b'<div class="question-description">\n<p><p>Given a positive integer, return its corresponding column title as appear in an Excel sheet.</p>\n<p>For example:</p>\n<pre>\r\n    1 -&gt; A\r\n    2 -&gt; B\r\n    3 -&gt; C\r\n    ...\r\n    26 -&gt; Z\r\n    27 -&gt; AA\r\n    28 -&gt; AB </pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://leetcode.com/discuss/user/ifanchu">@ifanchu</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array of integers that is already <b><i>sorted in ascending order</i></b>, find two numbers such that they add up to a specific target number.</p>\n<p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.</p>\n<p>You may assume that each input would have <i>exactly</i> one solution and you may not use the <i>same</i> element twice.</p>\n<p style="font-family:monospace">\n<b>Input:</b> numbers={2, 7, 11, 15}, target=9<br/>\n<b>Output:</b> index1=1, index2=2\r\n</p></p>\n</div>'


167 : two-sum-ii-input-array-is-sorted
166 : fraction-to-recurring-decimal


b'<div class="question-description">\n<p><p>Given an array of integers that is already <b><i>sorted in ascending order</i></b>, find two numbers such that they add up to a specific target number.</p>\n<p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.</p>\n<p>You may assume that each input would have <i>exactly</i> one solution and you may not use the <i>same</i> element twice.</p>\n<p style="font-family:monospace">\n<b>Input:</b> numbers={2, 7, 11, 15}, target=9<br/>\n<b>Output:</b> index1=1, index2=2\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.</p>\n<p>If the fractional part is repeating, enclose the repeating part in parentheses.</p>\n<p>\r\nFor example,\r\n<ul>\n<li>Given numerator = 1, denominator = 2, return "0.5".</li>\n<li>Given numerator = 2, denominator = 1, return "2".</li>\n<li>Given numerator = 2, denominator = 3, return "0.(6)".</li>\n</ul>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Shangrila">@Shangrila</a> for adding this problem and creating all test cases.</p></p>\n</div>'


166 : fraction-to-recurring-decimal
165 : compare-version-numbers


b'<div class="question-description">\n<p><p>Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.</p>\n<p>If the fractional part is repeating, enclose the repeating part in parentheses.</p>\n<p>\r\nFor example,\r\n<ul>\n<li>Given numerator = 1, denominator = 2, return "0.5".</li>\n<li>Given numerator = 2, denominator = 1, return "2".</li>\n<li>Given numerator = 2, denominator = 3, return "0.(6)".</li>\n</ul>\n</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Shangrila">@Shangrila</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Compare two version numbers <i>version1</i> and <i>version2</i>.<br/>\r\nIf <i>version1</i> &gt; <i>version2</i> return 1, if <i>version1</i> &lt; <i>version2</i> return -1, otherwise return 0.</p>\n<p>You may assume that the version strings are non-empty and contain only digits and the <code>.</code> character.<br/>\r\nThe <code>.</code> character does not represent a decimal point and is used to separate number sequences.<br/>\r\nFor instance, <code>2.5</code> is not "two and a half" or "half way to version three", it is the fifth second-level revision of the second first-level revision.</p>\n<p>Here is an example of version numbers ordering:</p>\n<pre>0.1 &lt; 1.1 &lt; 1.2 &lt; 13.37</pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'


165 : compare-version-numbers
164 : maximum-gap


b'<div class="question-description">\n<p><p>Compare two version numbers <i>version1</i> and <i>version2</i>.<br/>\r\nIf <i>version1</i> &gt; <i>version2</i> return 1, if <i>version1</i> &lt; <i>version2</i> return -1, otherwise return 0.</p>\n<p>You may assume that the version strings are non-empty and contain only digits and the <code>.</code> character.<br/>\r\nThe <code>.</code> character does not represent a decimal point and is used to separate number sequences.<br/>\r\nFor instance, <code>2.5</code> is not "two and a half" or "half way to version three", it is the fifth second-level revision of the second first-level revision.</p>\n<p>Here is an example of version numbers ordering:</p>\n<pre>0.1 &lt; 1.1 &lt; 1.2 &lt; 13.37</pre>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an unsorted array, find the maximum difference between the successive elements in its sorted form.</p>\n<p>Try to solve it in linear time/space.</p>\n<p>Return 0 if the array contains less than 2 elements.</p>\n<p>You may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/porker2008">@porker2008</a> for adding this problem and creating all test cases.</p></p>\n</div>'


164 : maximum-gap
163 : missing-ranges


b'<div class="question-description">\n<p><p>Given an unsorted array, find the maximum difference between the successive elements in its sorted form.</p>\n<p>Try to solve it in linear time/space.</p>\n<p>Return 0 if the array contains less than 2 elements.</p>\n<p>You may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.</p>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/porker2008">@porker2008</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


163 : missing-ranges
162 : find-peak-element


No Description




b'<div class="question-description">\n<p><p>A peak element is an element that is greater than its neighbors.</p>\n<p>Given an input array where <code>num[i] \xe2\x89\xa0 num[i+1]</code>, find a peak element and return its index.</p>\n<p>The array may contain multiple peaks, in that case return the index to any one of the peaks is fine.</p>\n<p>You may imagine that <code>num[-1] = num[n] = -\xe2\x88\x9e</code>.</p>\n<p>For example, in array <code>[1, 2, 3, 1]</code>, 3 is a peak element and your function should return the index number 2.</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show spoilers.</a></p>\n<div class="spoilers"><b>Note:</b>\n<p>Your solution should be in logarithmic complexity.</p>\n</div>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'


162 : find-peak-element
161 : one-edit-distance


b'<div class="question-description">\n<p><p>A peak element is an element that is greater than its neighbors.</p>\n<p>Given an input array where <code>num[i] \xe2\x89\xa0 num[i+1]</code>, find a peak element and return its index.</p>\n<p>The array may contain multiple peaks, in that case return the index to any one of the peaks is fine.</p>\n<p>You may imagine that <code>num[-1] = num[n] = -\xe2\x88\x9e</code>.</p>\n<p>For example, in array <code>[1, 2, 3, 1]</code>, 3 is a peak element and your function should return the index number 2.</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show spoilers.</a></p>\n<div class="spoilers"><b>Note:</b>\n<p>Your solution should be in logarithmic complexity.</p>\n</div>\n<p><b>Credits:</b><br/>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p></p>\n</div>'




No Description


161 : one-edit-distance
160 : intersection-of-two-linked-lists


b'<div class="question-description">\n<p><p>Write a program to find the node at which the intersection of two singly linked lists begins.</p>\n</p></div>'


160 : intersection-of-two-linked-lists
159 : longest-substring-with-at-most-two-distinct-characters


No Description




b'<div class="question-description">\n<p><p>Write a program to find the node at which the intersection of two singly linked lists begins.</p>\n</p></div>'




No Description


159 : longest-substring-with-at-most-two-distinct-characters
158 : read-n-characters-given-read4-ii-call-multiple-times


No Description




No Description


158 : read-n-characters-given-read4-ii-call-multiple-times
157 : read-n-characters-given-read4


No Description




No Description


157 : read-n-characters-given-read4
156 : binary-tree-upside-down


No Description




No Description


156 : binary-tree-upside-down
155 : min-stack


No Description




b'<div class="question-description">\n<p><p>\r\nDesign a stack that supports push, pop, top, and retrieving the minimum element in constant time.\r\n<ul>\n<li>\r\npush(x) -- Push element x onto stack.\r\n</li>\n<li>\r\npop() -- Removes the element on top of the stack.\r\n</li>\n<li>\r\ntop() -- Get the top element.\r\n</li>\n<li>\r\ngetMin() -- Retrieve the minimum element in the stack.\r\n</li>\n</ul>\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\nMinStack minStack = new MinStack();\r\nminStack.push(-2);\r\nminStack.push(0);\r\nminStack.push(-3);\r\nminStack.getMin();   --&gt; Returns -3.\r\nminStack.pop();\r\nminStack.top();      --&gt; Returns 0.\r\nminStack.getMin();   --&gt; Returns -2.\r\n</pre>\n</p></p>\n</div>'


155 : min-stack
154 : find-minimum-in-rotated-sorted-array-ii


b'<div class="question-description">\n<p><p>\r\nDesign a stack that supports push, pop, top, and retrieving the minimum element in constant time.\r\n<ul>\n<li>\r\npush(x) -- Push element x onto stack.\r\n</li>\n<li>\r\npop() -- Removes the element on top of the stack.\r\n</li>\n<li>\r\ntop() -- Get the top element.\r\n</li>\n<li>\r\ngetMin() -- Retrieve the minimum element in the stack.\r\n</li>\n</ul>\n</p>\n<p><b>Example:</b><br/>\n<pre>\r\nMinStack minStack = new MinStack();\r\nminStack.push(-2);\r\nminStack.push(0);\r\nminStack.push(-3);\r\nminStack.getMin();   --&gt; Returns -3.\r\nminStack.pop();\r\nminStack.top();      --&gt; Returns 0.\r\nminStack.getMin();   --&gt; Returns -2.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><blockquote>\n<p><i>Follow up</i> for "Find Minimum in Rotated Sorted Array":<br/>\r\nWhat if <i>duplicates</i> are allowed?</p>\n<p>Would this affect the run-time complexity? How and why?</p>\n</blockquote>\n<p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n<p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p>\n<p>Find the minimum element.</p>\n<p>The array may contain duplicates.</p></p>\n</div>'


154 : find-minimum-in-rotated-sorted-array-ii
153 : find-minimum-in-rotated-sorted-array


b'<div class="question-description">\n<p><p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n<p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p>\n<p>Find the minimum element.</p>\n<p>You may assume no duplicate exists in the array.</p></p>\n</div>'


153 : find-minimum-in-rotated-sorted-array
152 : maximum-product-subarray


b'<div class="question-description">\n<p><blockquote>\n<p><i>Follow up</i> for "Find Minimum in Rotated Sorted Array":<br/>\r\nWhat if <i>duplicates</i> are allowed?</p>\n<p>Would this affect the run-time complexity? How and why?</p>\n</blockquote>\n<p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n<p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p>\n<p>Find the minimum element.</p>\n<p>The array may contain duplicates.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n<p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p>\n<p>Find the minimum element.</p>\n<p>You may assume no duplicate exists in the array.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nFind the contiguous subarray within an array (containing at least one number) which has the largest product.\r\n</p>\n<p>\r\nFor example, given the array <code>[2,3,-2,4]</code>,<br/>\r\nthe contiguous subarray <code>[2,3]</code> has the largest product = <code>6</code>.\r\n</p></p>\n</div>'


152 : maximum-product-subarray
151 : reverse-words-in-a-string


b'<div class="question-description">\n<p><p>\r\nFind the contiguous subarray within an array (containing at least one number) which has the largest product.\r\n</p>\n<p>\r\nFor example, given the array <code>[2,3,-2,4]</code>,<br/>\r\nthe contiguous subarray <code>[2,3]</code> has the largest product = <code>6</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an input string, reverse the string word by word.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven s = "<code>the sky is blue</code>",<br/>\r\nreturn "<code>blue is sky the</code>".\r\n</p>\n<p>\n<b><font color="red">Update (2015-02-12):</font></b><br/>\r\nFor C programmers: Try to solve it <i>in-place</i> in <i>O</i>(1) space.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show clarification.</a></p>\n<div class="spoilers"><b>Clarification:</b>\n<p>\n<ul>\n<li>What constitutes a word?<br/>\r\nA sequence of non-space characters constitutes a word.</li>\n<li>Could the input string contain leading or trailing spaces?<br/>\r\nYes. However, your reversed string should not contain leading or trailing spaces.</li>\n<li>How about multiple spaces between two words?<br/>\r\nReduce them to a single space in the reversed string.</li>\n</ul>\n</p>\n</div></p>\n</div>'


151 : reverse-words-in-a-string
150 : evaluate-reverse-polish-notation


b'<div class="question-description">\n<p><p>\r\nGiven an input string, reverse the string word by word.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven s = "<code>the sky is blue</code>",<br/>\r\nreturn "<code>blue is sky the</code>".\r\n</p>\n<p>\n<b><font color="red">Update (2015-02-12):</font></b><br/>\r\nFor C programmers: Try to solve it <i>in-place</i> in <i>O</i>(1) space.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show clarification.</a></p>\n<div class="spoilers"><b>Clarification:</b>\n<p>\n<ul>\n<li>What constitutes a word?<br/>\r\nA sequence of non-space characters constitutes a word.</li>\n<li>Could the input string contain leading or trailing spaces?<br/>\r\nYes. However, your reversed string should not contain leading or trailing spaces.</li>\n<li>How about multiple spaces between two words?<br/>\r\nReduce them to a single space in the reversed string.</li>\n</ul>\n</p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nEvaluate the value of an arithmetic expression in <a href="http://en.wikipedia.org/wiki/Reverse_Polish_notation">Reverse Polish Notation</a>.\r\n</p>\n<p>\r\nValid operators are <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>. Each operand may be an integer or another expression.\r\n</p>\n<p>\r\nSome examples:<br/>\n<pre>\r\n  ["2", "1", "+", "3", "*"] -&gt; ((2 + 1) * 3) -&gt; 9\r\n  ["4", "13", "5", "/", "+"] -&gt; (4 + (13 / 5)) -&gt; 6\r\n</pre>\n</p></p>\n</div>'


150 : evaluate-reverse-polish-notation
149 : max-points-on-a-line


b'<div class="question-description">\n<p><p>\r\nEvaluate the value of an arithmetic expression in <a href="http://en.wikipedia.org/wiki/Reverse_Polish_notation">Reverse Polish Notation</a>.\r\n</p>\n<p>\r\nValid operators are <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>. Each operand may be an integer or another expression.\r\n</p>\n<p>\r\nSome examples:<br/>\n<pre>\r\n  ["2", "1", "+", "3", "*"] -&gt; ((2 + 1) * 3) -&gt; 9\r\n  ["4", "13", "5", "/", "+"] -&gt; (4 + (13 / 5)) -&gt; 6\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given <i>n</i> points on a 2D plane, find the maximum number of points that lie on the same straight line.</p></p>\n</div>'


149 : max-points-on-a-line
148 : sort-list


b'<div class="question-description">\n<p><p>Given <i>n</i> points on a 2D plane, find the maximum number of points that lie on the same straight line.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Sort a linked list in <i>O</i>(<i>n</i> log <i>n</i>) time using constant space complexity.</p></p>\n</div>'


148 : sort-list
147 : insertion-sort-list


b'<div class="question-description">\n<p><p>Sort a linked list in <i>O</i>(<i>n</i> log <i>n</i>) time using constant space complexity.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Sort a linked list using insertion sort.</p></p>\n</div>'


147 : insertion-sort-list
146 : lru-cache


b'<div class="question-description">\n<p><p>Sort a linked list using insertion sort.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nDesign and implement a data structure for <a href="https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU" target="_blank">Least Recently Used (LRU) cache</a>. It should support the following operations: <code>get</code> and <code>put</code>.\r\n</p>\n<p>\n<code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.<br/>\n<code>put(key, value)</code> - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.\r\n</p>\n<p><b>Follow up:</b><br>\r\nCould you do both operations in <b>O(1)</b> time complexity?</br></p>\n<p><b>Example:</b>\n<pre>\r\nLRUCache cache = new LRUCache( 2 /* capacity */ );\r\n\r\ncache.put(1, 1);\r\ncache.put(2, 2);\r\ncache.get(1);       // returns 1\r\ncache.put(3, 3);    // evicts key 2\r\ncache.get(2);       // returns -1 (not found)\r\ncache.put(4, 4);    // evicts key 1\r\ncache.get(1);       // returns -1 (not found)\r\ncache.get(3);       // returns 3\r\ncache.get(4);       // returns 4\r\n</pre>\n</p></p>\n</div>'


146 : lru-cache
145 : binary-tree-postorder-traversal


b'<div class="question-description">\n<p><p>\r\nDesign and implement a data structure for <a href="https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU" target="_blank">Least Recently Used (LRU) cache</a>. It should support the following operations: <code>get</code> and <code>put</code>.\r\n</p>\n<p>\n<code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.<br/>\n<code>put(key, value)</code> - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.\r\n</p>\n<p><b>Follow up:</b><br>\r\nCould you do both operations in <b>O(1)</b> time complexity?</br></p>\n<p><b>Example:</b>\n<pre>\r\nLRUCache cache = new LRUCache( 2 /* capacity */ );\r\n\r\ncache.put(1, 1);\r\ncache.put(2, 2);\r\ncache.get(1);       // returns 1\r\ncache.put(3, 3);    // evicts key 2\r\ncache.get(2);       // returns -1 (not found)\r\ncache.put(4, 4);    // evicts key 1\r\ncache.get(1);       // returns -1 (not found)\r\ncache.get(3);       // returns 3\r\ncache.get(4);       // returns 4\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>postorder</i> traversal of its nodes\' values.</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>{1,#,2,3}</code>,<br/>\n<pre>\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n</pre>\n</p>\n<p>\r\nreturn <code>[3,2,1]</code>.\r\n</p>\n<p><b>Note:</b> Recursive solution is trivial, could you do it iteratively?</p></p>\n</div>'


145 : binary-tree-postorder-traversal
144 : binary-tree-preorder-traversal


b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>postorder</i> traversal of its nodes\' values.</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>{1,#,2,3}</code>,<br/>\n<pre>\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n</pre>\n</p>\n<p>\r\nreturn <code>[3,2,1]</code>.\r\n</p>\n<p><b>Note:</b> Recursive solution is trivial, could you do it iteratively?</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>preorder</i> traversal of its nodes\' values.</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>{1,#,2,3}</code>,<br/>\n<pre>\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n</pre>\n</p>\n<p>\r\nreturn <code>[1,2,3]</code>.\r\n</p>\n<p><b>Note:</b> Recursive solution is trivial, could you do it iteratively?</p></p>\n</div>'


144 : binary-tree-preorder-traversal
143 : reorder-list


b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>preorder</i> traversal of its nodes\' values.</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>{1,#,2,3}</code>,<br/>\n<pre>\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n</pre>\n</p>\n<p>\r\nreturn <code>[1,2,3]</code>.\r\n</p>\n<p><b>Note:</b> Recursive solution is trivial, could you do it iteratively?</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a singly linked list <i>L</i>: <i>L</i><sub>0</sub>?<i>L</i><sub>1</sub>?\xe2\x80\xa6?<i>L</i><sub><i>n</i>-1</sub>?<i>L</i><sub>n</sub>,<br/>\r\nreorder it to: <i>L</i><sub>0</sub>?<i>L</i><sub><i>n</i></sub>?<i>L</i><sub>1</sub>?<i>L</i><sub><i>n</i>-1</sub>?<i>L</i><sub>2</sub>?<i>L</i><sub><i>n</i>-2</sub>?\xe2\x80\xa6\r\n</p>\n<p>You must do this in-place without altering the nodes\' values.</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>{1,2,3,4}</code>, reorder it to <code>{1,4,2,3}</code>.\r\n</p></p>\n</div>'


143 : reorder-list
142 : linked-list-cycle-ii


b'<div class="question-description">\n<p><p>\r\nGiven a singly linked list <i>L</i>: <i>L</i><sub>0</sub>?<i>L</i><sub>1</sub>?\xe2\x80\xa6?<i>L</i><sub><i>n</i>-1</sub>?<i>L</i><sub>n</sub>,<br/>\r\nreorder it to: <i>L</i><sub>0</sub>?<i>L</i><sub><i>n</i></sub>?<i>L</i><sub>1</sub>?<i>L</i><sub><i>n</i>-1</sub>?<i>L</i><sub>2</sub>?<i>L</i><sub><i>n</i>-2</sub>?\xe2\x80\xa6\r\n</p>\n<p>You must do this in-place without altering the nodes\' values.</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>{1,2,3,4}</code>, reorder it to <code>{1,4,2,3}</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a linked list, return the node where the cycle begins. If there is no cycle, return <code>null</code>.\r\n</p>\n<p>\n<b>Note:</b> Do not modify the linked list.</p>\n<p>\n<b>Follow up</b>:<br/>\r\nCan you solve it without using extra space?\r\n</p></p>\n</div>'


142 : linked-list-cycle-ii
141 : linked-list-cycle


b'<div class="question-description">\n<p><p>\r\nGiven a linked list, return the node where the cycle begins. If there is no cycle, return <code>null</code>.\r\n</p>\n<p>\n<b>Note:</b> Do not modify the linked list.</p>\n<p>\n<b>Follow up</b>:<br/>\r\nCan you solve it without using extra space?\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a linked list, determine if it has a cycle in it.\r\n</p>\n<p>\r\nFollow up:<br/>\r\nCan you solve it without using extra space?\r\n</p></p>\n</div>'


141 : linked-list-cycle
140 : word-break-ii


b'<div class="question-description">\n<p><p>\r\nGiven a linked list, determine if it has a cycle in it.\r\n</p>\n<p>\r\nFollow up:<br/>\r\nCan you solve it without using extra space?\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a <b>non-empty</b> string <i>s</i> and a dictionary <i>wordDict</i> containing a list of <b>non-empty</b> words, add spaces in <i>s</i> to construct a sentence where each word is a valid dictionary word. You may assume the dictionary does not contain duplicate words.\r\n</p>\n<p>\r\nReturn all such possible sentences.\r\n</p>\n<p>\r\nFor example, given<br/>\n<i>s</i> = <code>"catsanddog"</code>,<br/>\n<i>dict</i> = <code>["cat", "cats", "and", "sand", "dog"]</code>.\r\n</p>\n<p>\r\nA solution is <code>["cats and dog", "cat sand dog"]</code>.\r\n</p>\n<p>\n<b><font color="red">UPDATE (2017/1/4):</font></b><br>\r\nThe <i>wordDict</i> parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.\r\n</br></p></p>\n</div>'


140 : word-break-ii
139 : word-break


b'<div class="question-description">\n<p><p>\r\nGiven a <b>non-empty</b> string <i>s</i> and a dictionary <i>wordDict</i> containing a list of <b>non-empty</b> words, add spaces in <i>s</i> to construct a sentence where each word is a valid dictionary word. You may assume the dictionary does not contain duplicate words.\r\n</p>\n<p>\r\nReturn all such possible sentences.\r\n</p>\n<p>\r\nFor example, given<br/>\n<i>s</i> = <code>"catsanddog"</code>,<br/>\n<i>dict</i> = <code>["cat", "cats", "and", "sand", "dog"]</code>.\r\n</p>\n<p>\r\nA solution is <code>["cats and dog", "cat sand dog"]</code>.\r\n</p>\n<p>\n<b><font color="red">UPDATE (2017/1/4):</font></b><br>\r\nThe <i>wordDict</i> parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.\r\n</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a <b>non-empty</b> string <i>s</i> and a dictionary <i>wordDict</i> containing a list of <b>non-empty</b> words, determine if <i>s</i> can be segmented into a space-separated sequence of one or more dictionary words. You may assume the dictionary does not contain duplicate words.\r\n</p>\n<p>For example, given<br/>\n<i>s</i> = <code>"leetcode"</code>,<br/>\n<i>dict</i> = <code>["leet", "code"]</code>.\r\n</p>\n<p>\r\nReturn true because <code>"leetcode"</code> can be segmented as <code>"leet code"</code>.\r\n</p>\n<p>\n<b><font color="red">UPDATE (2017/1/4):</font></b><br>\r\nThe <i>wordDict</i> parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.\r\n</br></p></p>\n</div>'


139 : word-break
138 : copy-list-with-random-pointer


b'<div class="question-description">\n<p><p>\r\nGiven a <b>non-empty</b> string <i>s</i> and a dictionary <i>wordDict</i> containing a list of <b>non-empty</b> words, determine if <i>s</i> can be segmented into a space-separated sequence of one or more dictionary words. You may assume the dictionary does not contain duplicate words.\r\n</p>\n<p>For example, given<br/>\n<i>s</i> = <code>"leetcode"</code>,<br/>\n<i>dict</i> = <code>["leet", "code"]</code>.\r\n</p>\n<p>\r\nReturn true because <code>"leetcode"</code> can be segmented as <code>"leet code"</code>.\r\n</p>\n<p>\n<b><font color="red">UPDATE (2017/1/4):</font></b><br>\r\nThe <i>wordDict</i> parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.\r\n</br></p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nA linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.\r\n</p>\n<p>\r\nReturn a deep copy of the list.\r\n</p></p>\n</div>'


138 : copy-list-with-random-pointer
137 : single-number-ii


b'<div class="question-description">\n<p><p>\r\nGiven an array of integers, every element appears <i>three</i> times except for one, which appears exactly once. Find that single one.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nA linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.\r\n</p>\n<p>\r\nReturn a deep copy of the list.\r\n</p></p>\n</div>'


137 : single-number-ii
136 : single-number


b'<div class="question-description">\n<p><p>\r\nGiven an array of integers, every element appears <i>three</i> times except for one, which appears exactly once. Find that single one.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array of integers, every element appears <i>twice</i> except for one. Find that single one.</p>\n<p>\n<b>Note:</b><br/>\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\r\n</p></p>\n</div>'


136 : single-number
135 : candy


b'<div class="question-description">\n<p><p>Given an array of integers, every element appears <i>twice</i> except for one. Find that single one.</p>\n<p>\n<b>Note:</b><br/>\r\nYour algorithm should have a linear runtime complexity. Could you implement it without using extra memory?\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nThere are <i>N</i> children standing in a line. Each child is assigned a rating value. \r\n</p>\n<p>\r\nYou are giving candies to these children subjected to the following requirements:\r\n</p>\n<ul>\n<li>Each child must have at least one candy.</li>\n<li>Children with a higher rating get more candies than their neighbors.</li>\n</ul>\n<p>\r\nWhat is the minimum candies you must give?\r\n</p></p>\n</div>'


135 : candy
134 : gas-station


b'<div class="question-description">\n<p><p>\r\nThere are <i>N</i> children standing in a line. Each child is assigned a rating value. \r\n</p>\n<p>\r\nYou are giving candies to these children subjected to the following requirements:\r\n</p>\n<ul>\n<li>Each child must have at least one candy.</li>\n<li>Children with a higher rating get more candies than their neighbors.</li>\n</ul>\n<p>\r\nWhat is the minimum candies you must give?\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nThere are <i>N</i> gas stations along a circular route, where the amount of gas at station <i>i</i> is <code>gas[i]</code>.\r\n</p>\n<p>\r\nYou have a car with an unlimited gas tank and it costs <code>cost[i]</code> of gas to travel from station <i>i</i> to its next station (<i>i</i>+1). You begin the journey with an empty tank at one of the gas stations.\r\n</p>\n<p>\r\nReturn the starting gas station\'s index if you can travel around the circuit once, otherwise return -1.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nThe solution is guaranteed to be unique.\r\n</p></p>\n</div>'


134 : gas-station
133 : clone-graph


b'<div class="question-description">\n<p><p>\r\nThere are <i>N</i> gas stations along a circular route, where the amount of gas at station <i>i</i> is <code>gas[i]</code>.\r\n</p>\n<p>\r\nYou have a car with an unlimited gas tank and it costs <code>cost[i]</code> of gas to travel from station <i>i</i> to its next station (<i>i</i>+1). You begin the journey with an empty tank at one of the gas stations.\r\n</p>\n<p>\r\nReturn the starting gas station\'s index if you can travel around the circuit once, otherwise return -1.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nThe solution is guaranteed to be unique.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nClone an undirected graph. Each node in the graph contains a <code>label</code> and a list of its <code>neighbors</code>.\r\n</p>\n<div>\n<br/>\n<b>OJ\'s undirected graph serialization:</b>\n<p>\r\nNodes are labeled uniquely.\r\n</p>\r\n\r\nWe use <code>#</code> as a separator for each node, and <code>,</code> as a separator for node label and each neighbor of the node.\r\n</div></p>\n<p>\r\nAs an example, consider the serialized graph <code><font color="red">{<font color="black">0</font>,1,2#</font><font color="blue"><font color="black">1</font>,2#</font><font color="green"><font color="black">2</font>,2}</font></code>.\r\n</p>\n<p>\r\nThe graph has a total of three nodes, and therefore contains three parts as separated by <code>#</code>.\r\n<ol>\n<li>First node is labeled as <code><font color="black">0</font></code>. Connect node <code><font color="black">0</font></code> to both nodes <code><font color="red">1</font></code> and <code><font color="red">2</font></code>.</li>\n<li>Second node is labeled as <code><font color="black">1</font></code>. Connect node <code><font color="black">1</font></code> to node <code><font color="blue">2</font></code>.</li>\n<li>Third node is labeled as <code><font color="black">2</font></code>. Connect node <code><font color="black">2</font></code> to node <code><font color="green">2</font></code> (itself), thus forming a self-cycle.</li>\n</ol>\n</p>\n<p>\r\nVisually, the graph looks like the following:\r\n<pre>\r\n       1\r\n      / \\\r\n     /   \\\r\n    0 --- 2\r\n         / \\\r\n         \\_/\r\n</pre>\n</p>\n</div>'


133 : clone-graph
132 : palindrome-partitioning-ii


b'<div class="question-description">\n<p><p>\r\nClone an undirected graph. Each node in the graph contains a <code>label</code> and a list of its <code>neighbors</code>.\r\n</p>\n<div>\n<br/>\n<b>OJ\'s undirected graph serialization:</b>\n<p>\r\nNodes are labeled uniquely.\r\n</p>\r\n\r\nWe use <code>#</code> as a separator for each node, and <code>,</code> as a separator for node label and each neighbor of the node.\r\n</div></p>\n<p>\r\nAs an example, consider the serialized graph <code><font color="red">{<font color="black">0</font>,1,2#</font><font color="blue"><font color="black">1</font>,2#</font><font color="green"><font color="black">2</font>,2}</font></code>.\r\n</p>\n<p>\r\nThe graph has a total of three nodes, and therefore contains three parts as separated by <code>#</code>.\r\n<ol>\n<li>First node is labeled as <code><font color="black">0</font></code>. Connect node <code><font color="black">0</font></code> to both nodes <code><font color="red">1</font></code> and <code><font color="red">2</font></code>.</li>\n<li>Second node is labeled as <code><font color="black">1</font></code>. Connect node <code><font color="black">1</font></code> to node <code><font color="blue">2</font></code>.</li>\n<li>Third node is labeled as <code><font color="black">2</font></code>. Connect node <code><font color="black">2</font></code> to node <code><font color="green">2</font></code> (itself), thus forming a self-cycle.</li>\n</ol>\n</p>\n<p>\r\nVisually, the graph looks like the following:\r\n<pre>\r\n       1\r\n      / \\\r\n     /   \\\r\n    0 --- 2\r\n         / \\\r\n         \\_/\r\n</pre>\n</p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string <i>s</i>, partition <i>s</i> such that every substring of the partition is a palindrome.\r\n</p>\n<p>\r\nReturn the minimum cuts needed for a palindrome partitioning of <i>s</i>.\r\n</p>\n<p>\r\nFor example, given <i>s</i> = <code>"aab"</code>,<br/>\r\nReturn <code>1</code> since the palindrome partitioning <code>["aa","b"]</code> could be produced using 1 cut.\r\n</p></p>\n</div>'


132 : palindrome-partitioning-ii
131 : palindrome-partitioning


b'<div class="question-description">\n<p><p>\r\nGiven a string <i>s</i>, partition <i>s</i> such that every substring of the partition is a palindrome.\r\n</p>\n<p>\r\nReturn the minimum cuts needed for a palindrome partitioning of <i>s</i>.\r\n</p>\n<p>\r\nFor example, given <i>s</i> = <code>"aab"</code>,<br/>\r\nReturn <code>1</code> since the palindrome partitioning <code>["aa","b"]</code> could be produced using 1 cut.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string <i>s</i>, partition <i>s</i> such that every substring of the partition is a palindrome.\r\n</p>\n<p>\r\nReturn all possible palindrome partitioning of <i>s</i>.\r\n</p>\n<p>\r\nFor example, given <i>s</i> = <code>"aab"</code>,<br/>\r\n\r\nReturn\r\n<pre>\r\n[\r\n  ["aa","b"],\r\n  ["a","a","b"]\r\n]\r\n</pre>\n</p></p>\n</div>'


131 : palindrome-partitioning
130 : surrounded-regions


b'<div class="question-description">\n<p><p>\r\nGiven a string <i>s</i>, partition <i>s</i> such that every substring of the partition is a palindrome.\r\n</p>\n<p>\r\nReturn all possible palindrome partitioning of <i>s</i>.\r\n</p>\n<p>\r\nFor example, given <i>s</i> = <code>"aab"</code>,<br/>\r\n\r\nReturn\r\n<pre>\r\n[\r\n  ["aa","b"],\r\n  ["a","a","b"]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a 2D board containing <code>\'X\'</code> and <code>\'O\'</code> (the <b>letter</b> O), capture all regions surrounded by <code>\'X\'</code>.</p>\n<p>A region is captured by flipping all <code>\'O\'</code>s into <code>\'X\'</code>s in that surrounded region.\r\n</p>\n<p>\r\nFor example,<br/>\n<pre>\r\nX X X X\r\nX O O X\r\nX X O X\r\nX O X X\r\n</pre>\n</p>\n<p>\r\nAfter running your function, the board should be:\r\n<pre>\r\nX X X X\r\nX X X X\r\nX X X X\r\nX O X X\r\n</pre>\n</p></p>\n</div>'


130 : surrounded-regions
129 : sum-root-to-leaf-numbers


b'<div class="question-description">\n<p><p>\r\nGiven a 2D board containing <code>\'X\'</code> and <code>\'O\'</code> (the <b>letter</b> O), capture all regions surrounded by <code>\'X\'</code>.</p>\n<p>A region is captured by flipping all <code>\'O\'</code>s into <code>\'X\'</code>s in that surrounded region.\r\n</p>\n<p>\r\nFor example,<br/>\n<pre>\r\nX X X X\r\nX O O X\r\nX X O X\r\nX O X X\r\n</pre>\n</p>\n<p>\r\nAfter running your function, the board should be:\r\n<pre>\r\nX X X X\r\nX X X X\r\nX X X X\r\nX O X X\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree containing digits from <code>0-9</code> only, each root-to-leaf path could represent a number.</p>\n<p>An example is the root-to-leaf path <code>1-&gt;2-&gt;3</code> which represents the number <code>123</code>.</p>\n<p>Find the total sum of all root-to-leaf numbers.</p>\n<p>For example,\r\n<pre>\r\n    1\r\n   / \\\r\n  2   3\r\n</pre>\n</p>\n<p>\r\nThe root-to-leaf path <code>1-&gt;2</code> represents the number <code>12</code>.<br/>\r\nThe root-to-leaf path <code>1-&gt;3</code> represents the number <code>13</code>.\r\n</p>\n<p>\r\nReturn the sum = 12 + 13 = <code>25</code>.\r\n</p></p>\n</div>'


129 : sum-root-to-leaf-numbers
128 : longest-consecutive-sequence


b'<div class="question-description">\n<p><p>Given a binary tree containing digits from <code>0-9</code> only, each root-to-leaf path could represent a number.</p>\n<p>An example is the root-to-leaf path <code>1-&gt;2-&gt;3</code> which represents the number <code>123</code>.</p>\n<p>Find the total sum of all root-to-leaf numbers.</p>\n<p>For example,\r\n<pre>\r\n    1\r\n   / \\\r\n  2   3\r\n</pre>\n</p>\n<p>\r\nThe root-to-leaf path <code>1-&gt;2</code> represents the number <code>12</code>.<br/>\r\nThe root-to-leaf path <code>1-&gt;3</code> represents the number <code>13</code>.\r\n</p>\n<p>\r\nReturn the sum = 12 + 13 = <code>25</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an unsorted array of integers, find the length of the longest consecutive elements sequence.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>[100, 4, 200, 1, 3, 2]</code>,<br/>\r\nThe longest consecutive elements sequence is <code>[1, 2, 3, 4]</code>. Return its length: <code>4</code>.\r\n</p>\n<p>\r\nYour algorithm should run in O(<i>n</i>) complexity.\r\n</p></p>\n</div>'


128 : longest-consecutive-sequence
127 : word-ladder


b'<div class="question-description">\n<p><p>\r\nGiven an unsorted array of integers, find the length of the longest consecutive elements sequence.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>[100, 4, 200, 1, 3, 2]</code>,<br/>\r\nThe longest consecutive elements sequence is <code>[1, 2, 3, 4]</code>. Return its length: <code>4</code>.\r\n</p>\n<p>\r\nYour algorithm should run in O(<i>n</i>) complexity.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two words (<i>beginWord</i> and <i>endWord</i>), and a dictionary\'s word list, find the length of shortest transformation sequence from <i>beginWord</i> to <i>endWord</i>, such that:\r\n</p>\n<ol>\n<li>Only one letter can be changed at a time.</li>\n<li>Each transformed word must exist in the word list. Note that <i>beginWord</i> is <i>not</i> a transformed word.</li>\n</ol>\n<p>\r\nFor example,\r\n</p>\n<p>\r\nGiven:<br/>\n<i>beginWord</i> = <code>"hit"</code><br/>\n<i>endWord</i> = <code>"cog"</code><br/>\n<i>wordList</i> = <code>["hot","dot","dog","lot","log","cog"]</code><br/>\n</p>\n<p>\r\nAs one shortest transformation is <code>"hit" -&gt; "hot" -&gt; "dot" -&gt; "dog" -&gt; "cog"</code>,<br/>\r\nreturn its length <code>5</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\n<ul>\n<li>Return 0 if there is no such transformation sequence.</li>\n<li>All words have the same length.</li>\n<li>All words contain only lowercase alphabetic characters.</li>\n<li>You may assume no duplicates in the word list.</li>\n<li>You may assume <i>beginWord</i> and <i>endWord</i> are non-empty and are not the same.</li>\n</ul>\n</p>\n<p>\n<b><font color="red">UPDATE (2017/1/20):</font></b><br/>\r\nThe <i>wordList</i> parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.\r\n</p></p>\n</div>'


127 : word-ladder
126 : word-ladder-ii


b'<div class="question-description">\n<p><p>\r\nGiven two words (<i>beginWord</i> and <i>endWord</i>), and a dictionary\'s word list, find the length of shortest transformation sequence from <i>beginWord</i> to <i>endWord</i>, such that:\r\n</p>\n<ol>\n<li>Only one letter can be changed at a time.</li>\n<li>Each transformed word must exist in the word list. Note that <i>beginWord</i> is <i>not</i> a transformed word.</li>\n</ol>\n<p>\r\nFor example,\r\n</p>\n<p>\r\nGiven:<br/>\n<i>beginWord</i> = <code>"hit"</code><br/>\n<i>endWord</i> = <code>"cog"</code><br/>\n<i>wordList</i> = <code>["hot","dot","dog","lot","log","cog"]</code><br/>\n</p>\n<p>\r\nAs one shortest transformation is <code>"hit" -&gt; "hot" -&gt; "dot" -&gt; "dog" -&gt; "cog"</code>,<br/>\r\nreturn its length <code>5</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\n<ul>\n<li>Return 0 if there is no such transformation sequence.</li>\n<li>All words have the same length.</li>\n<li>All words contain only lowercase alphabetic characters.</li>\n<li>You may assume no duplicates in the word list.</li>\n<li>You may assume <i>beginWord</i> and <i>endWord</i> are non-empty and are not the same.</li>\n</ul>\n</p>\n<p>\n<b><font color="red">UPDATE (2017/1/20):</font></b><br/>\r\nThe <i>wordList</i> parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two words (<i>beginWord</i> and <i>endWord</i>), and a dictionary\'s word list, find all shortest transformation sequence(s) from <i>beginWord</i> to <i>endWord</i>, such that:\r\n</p>\n<ol>\n<li>Only one letter can be changed at a time</li>\n<li>Each transformed word must exist in the word list. Note that <i>beginWord</i> is <i>not</i> a transformed word.</li>\n</ol>\n<p>\r\nFor example,\r\n</p>\n<p>\r\nGiven:<br/>\n<i>beginWord</i> = <code>"hit"</code><br/>\n<i>endWord</i> = <code>"cog"</code><br/>\n<i>wordList</i> = <code>["hot","dot","dog","lot","log","cog"]</code><br/>\n</p>\n<p>\r\nReturn<br/>\n<pre>\r\n  [\r\n    ["hit","hot","dot","dog","cog"],\r\n    ["hit","hot","lot","log","cog"]\r\n  ]\r\n</pre>\n</p>\n<p>\n<b>Note:</b><br/>\n<ul>\n<li>Return an empty list if there is no such transformation sequence.</li>\n<li>All words have the same length.</li>\n<li>All words contain only lowercase alphabetic characters.</li>\n<li>You may assume no duplicates in the word list.</li>\n<li>You may assume <i>beginWord</i> and <i>endWord</i> are non-empty and are not the same.</li>\n</ul>\n</p>\n<p>\n<b><font color="red">UPDATE (2017/1/20):</font></b><br/>\r\nThe <i>wordList</i> parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.\r\n</p></p>\n</div>'


126 : word-ladder-ii
125 : valid-palindrome


b'<div class="question-description">\n<p><p>\r\nGiven two words (<i>beginWord</i> and <i>endWord</i>), and a dictionary\'s word list, find all shortest transformation sequence(s) from <i>beginWord</i> to <i>endWord</i>, such that:\r\n</p>\n<ol>\n<li>Only one letter can be changed at a time</li>\n<li>Each transformed word must exist in the word list. Note that <i>beginWord</i> is <i>not</i> a transformed word.</li>\n</ol>\n<p>\r\nFor example,\r\n</p>\n<p>\r\nGiven:<br/>\n<i>beginWord</i> = <code>"hit"</code><br/>\n<i>endWord</i> = <code>"cog"</code><br/>\n<i>wordList</i> = <code>["hot","dot","dog","lot","log","cog"]</code><br/>\n</p>\n<p>\r\nReturn<br/>\n<pre>\r\n  [\r\n    ["hit","hot","dot","dog","cog"],\r\n    ["hit","hot","lot","log","cog"]\r\n  ]\r\n</pre>\n</p>\n<p>\n<b>Note:</b><br/>\n<ul>\n<li>Return an empty list if there is no such transformation sequence.</li>\n<li>All words have the same length.</li>\n<li>All words contain only lowercase alphabetic characters.</li>\n<li>You may assume no duplicates in the word list.</li>\n<li>You may assume <i>beginWord</i> and <i>endWord</i> are non-empty and are not the same.</li>\n</ul>\n</p>\n<p>\n<b><font color="red">UPDATE (2017/1/20):</font></b><br/>\r\nThe <i>wordList</i> parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\r\n</p>\n<p>\r\nFor example,<br/>\n<code>"A man, a plan, a canal: Panama"</code> is a palindrome.<br/>\n<code>"race a car"</code> is <i>not</i> a palindrome.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nHave you consider that the string might be empty? This is a good question to ask during an interview.</p>\n<p>\r\nFor the purpose of this problem, we define empty string as valid palindrome.\r\n</p></p>\n</div>'


125 : valid-palindrome
124 : binary-tree-maximum-path-sum


b'<div class="question-description">\n<p><p>\r\nGiven a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.\r\n</p>\n<p>\r\nFor example,<br/>\n<code>"A man, a plan, a canal: Panama"</code> is a palindrome.<br/>\n<code>"race a car"</code> is <i>not</i> a palindrome.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nHave you consider that the string might be empty? This is a good question to ask during an interview.</p>\n<p>\r\nFor the purpose of this problem, we define empty string as valid palindrome.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, find the maximum path sum.\r\n</p>\n<p>For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain <b>at least one node</b> and does not need to go through the root.</p>\n<p>\r\nFor example:<br/>\r\nGiven the below binary tree,\r\n<pre>\r\n       1\r\n      / \\\r\n     2   3\r\n</pre>\n</p>\n<p>\r\nReturn <code>6</code>.\r\n</p></p>\n</div>'


124 : binary-tree-maximum-path-sum
123 : best-time-to-buy-and-sell-stock-iii


b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, find the maximum path sum.\r\n</p>\n<p>For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain <b>at least one node</b> and does not need to go through the root.</p>\n<p>\r\nFor example:<br/>\r\nGiven the below binary tree,\r\n<pre>\r\n       1\r\n      / \\\r\n     2   3\r\n</pre>\n</p>\n<p>\r\nReturn <code>6</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete at most <i>two</i> transactions.</p>\n<p><b>Note:</b><br/>\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p></p>\n</div>'


123 : best-time-to-buy-and-sell-stock-iii
122 : best-time-to-buy-and-sell-stock-ii


b'<div class="question-description">\n<p><p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete at most <i>two</i> transactions.</p>\n<p><b>Note:</b><br/>\r\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p></p>\n</div>'


122 : best-time-to-buy-and-sell-stock-ii
121 : best-time-to-buy-and-sell-stock


b'<div class="question-description">\n<p><p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n<p>If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\nInput: [7, 1, 5, 3, 6, 4]\r\nOutput: 5\r\n\r\nmax. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger than buying price)\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\nInput: [7, 6, 4, 3, 1]\r\nOutput: 0\r\n\r\nIn this case, no transaction is done, i.e. max profit = 0.\r\n</pre>\n</p></p>\n</div>'


121 : best-time-to-buy-and-sell-stock
120 : triangle


b'<div class="question-description">\n<p><p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n<p>If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\nInput: [7, 1, 5, 3, 6, 4]\r\nOutput: 5\r\n\r\nmax. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger than buying price)\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\nInput: [7, 6, 4, 3, 1]\r\nOutput: 0\r\n\r\nIn this case, no transaction is done, i.e. max profit = 0.\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.</p>\n<p>\r\nFor example, given the following triangle<br/>\n<pre>\r\n[\r\n     [<font color="red">2</font>],\r\n    [<font color="red">3</font>,4],\r\n   [6,<font color="red">5</font>,7],\r\n  [4,<font color="red">1</font>,8,3]\r\n]\r\n</pre>\n</p>\n<p>\r\nThe minimum path sum from top to bottom is <code>11</code> (i.e., <font color="red">2</font> + <font color="red">3</font> + <font color="red">5</font> + <font color="red">1</font> = 11).\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nBonus point if you are able to do this using only <i>O</i>(<i>n</i>) extra space, where <i>n</i> is the total number of rows in the triangle.\r\n</p></p>\n</div>'


120 : triangle
119 : pascals-triangle-ii


b'<div class="question-description">\n<p><p>Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.</p>\n<p>\r\nFor example, given the following triangle<br/>\n<pre>\r\n[\r\n     [<font color="red">2</font>],\r\n    [<font color="red">3</font>,4],\r\n   [6,<font color="red">5</font>,7],\r\n  [4,<font color="red">1</font>,8,3]\r\n]\r\n</pre>\n</p>\n<p>\r\nThe minimum path sum from top to bottom is <code>11</code> (i.e., <font color="red">2</font> + <font color="red">3</font> + <font color="red">5</font> + <font color="red">1</font> = 11).\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nBonus point if you are able to do this using only <i>O</i>(<i>n</i>) extra space, where <i>n</i> is the total number of rows in the triangle.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an index <i>k</i>, return the <i>k</i><sup>th</sup> row of the Pascal\'s triangle.</p>\n<p>\r\nFor example, given <i>k</i> = 3,<br/>\r\nReturn <code>[1,3,3,1]</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nCould you optimize your algorithm to use only <i>O</i>(<i>k</i>) extra space?\r\n</p></p>\n</div>'


119 : pascals-triangle-ii
118 : pascals-triangle


b'<div class="question-description">\n<p><p>Given an index <i>k</i>, return the <i>k</i><sup>th</sup> row of the Pascal\'s triangle.</p>\n<p>\r\nFor example, given <i>k</i> = 3,<br/>\r\nReturn <code>[1,3,3,1]</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nCould you optimize your algorithm to use only <i>O</i>(<i>k</i>) extra space?\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given <i>numRows</i>, generate the first <i>numRows</i> of Pascal\'s triangle.</p>\n<p>\r\nFor example, given <i>numRows</i> = 5,<br/>\r\nReturn\r\n<pre>\r\n[\r\n     [1],\r\n    [1,1],\r\n   [1,2,1],\r\n  [1,3,3,1],\r\n [1,4,6,4,1]\r\n]\r\n</pre>\n</p></p>\n</div>'


118 : pascals-triangle
117 : populating-next-right-pointers-in-each-node-ii


b'<div class="question-description">\n<p><p>Given <i>numRows</i>, generate the first <i>numRows</i> of Pascal\'s triangle.</p>\n<p>\r\nFor example, given <i>numRows</i> = 5,<br/>\r\nReturn\r\n<pre>\r\n[\r\n     [1],\r\n    [1,1],\r\n   [1,2,1],\r\n  [1,3,3,1],\r\n [1,4,6,4,1]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Follow up for problem "<i>Populating Next Right Pointers in Each Node</i>".</p>\n<p>What if the given tree could be any binary tree? Would your previous solution still work?</p>\n<p>\n<b>Note:</b>\n<ul><li>You may only use constant extra space.</li></ul>\n</p>\n<p>\r\nFor example,<br/>\r\nGiven the following binary tree,<br/>\n<pre>\r\n         1\r\n       /  \\\r\n      2    3\r\n     / \\    \\\r\n    4   5    7\r\n</pre>\n</p>\n<p>\r\nAfter calling your function, the tree should look like:<br/>\n<pre>\r\n         1 -&gt; NULL\r\n       /  \\\r\n      2 -&gt; 3 -&gt; NULL\r\n     / \\    \\\r\n    4-&gt; 5 -&gt; 7 -&gt; NULL\r\n</pre>\n</p></p>\n</div>'


117 : populating-next-right-pointers-in-each-node-ii
116 : populating-next-right-pointers-in-each-node


b'<div class="question-description">\n<p><p>Follow up for problem "<i>Populating Next Right Pointers in Each Node</i>".</p>\n<p>What if the given tree could be any binary tree? Would your previous solution still work?</p>\n<p>\n<b>Note:</b>\n<ul><li>You may only use constant extra space.</li></ul>\n</p>\n<p>\r\nFor example,<br/>\r\nGiven the following binary tree,<br/>\n<pre>\r\n         1\r\n       /  \\\r\n      2    3\r\n     / \\    \\\r\n    4   5    7\r\n</pre>\n</p>\n<p>\r\nAfter calling your function, the tree should look like:<br/>\n<pre>\r\n         1 -&gt; NULL\r\n       /  \\\r\n      2 -&gt; 3 -&gt; NULL\r\n     / \\    \\\r\n    4-&gt; 5 -&gt; 7 -&gt; NULL\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a binary tree\r\n<pre>\r\n    struct TreeLinkNode {\r\n      TreeLinkNode *left;\r\n      TreeLinkNode *right;\r\n      TreeLinkNode *next;\r\n    }\r\n</pre>\n</p>\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\n<p>\n<b>Note:</b>\n<ul>\n<li>You may only use constant extra space.</li>\n<li>You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).</li>\n</ul>\n</p>\n<p>\r\nFor example,<br/>\r\nGiven the following perfect binary tree,<br/>\n<pre>\r\n         1\r\n       /  \\\r\n      2    3\r\n     / \\  / \\\r\n    4  5  6  7\r\n</pre>\n</p>\n<p>\r\nAfter calling your function, the tree should look like:<br/>\n<pre>\r\n         1 -&gt; NULL\r\n       /  \\\r\n      2 -&gt; 3 -&gt; NULL\r\n     / \\  / \\\r\n    4-&gt;5-&gt;6-&gt;7 -&gt; NULL\r\n</pre>\n</p></p>\n</div>'


116 : populating-next-right-pointers-in-each-node
115 : distinct-subsequences


b'<div class="question-description">\n<p><p>\r\nGiven a binary tree\r\n<pre>\r\n    struct TreeLinkNode {\r\n      TreeLinkNode *left;\r\n      TreeLinkNode *right;\r\n      TreeLinkNode *next;\r\n    }\r\n</pre>\n</p>\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\n<p>\n<b>Note:</b>\n<ul>\n<li>You may only use constant extra space.</li>\n<li>You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).</li>\n</ul>\n</p>\n<p>\r\nFor example,<br/>\r\nGiven the following perfect binary tree,<br/>\n<pre>\r\n         1\r\n       /  \\\r\n      2    3\r\n     / \\  / \\\r\n    4  5  6  7\r\n</pre>\n</p>\n<p>\r\nAfter calling your function, the tree should look like:<br/>\n<pre>\r\n         1 -&gt; NULL\r\n       /  \\\r\n      2 -&gt; 3 -&gt; NULL\r\n     / \\  / \\\r\n    4-&gt;5-&gt;6-&gt;7 -&gt; NULL\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string <b>S</b> and a string <b>T</b>, count the number of distinct subsequences of <b>S</b> which equals <b>T</b>.\r\n</p>\n<p>\r\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, <code>"ACE"</code> is a subsequence of <code>"ABCDE"</code> while <code>"AEC"</code> is not).\r\n</p>\n<p>\r\nHere is an example:<br/>\n<b>S</b> = <code>"rabbbit"</code>, <b>T</b> = <code>"rabbit"</code>\n</p>\n<p>\r\nReturn <code>3</code>.\r\n</p></p>\n</div>'


115 : distinct-subsequences
114 : flatten-binary-tree-to-linked-list


b'<div class="question-description">\n<p><p>\r\nGiven a string <b>S</b> and a string <b>T</b>, count the number of distinct subsequences of <b>S</b> which equals <b>T</b>.\r\n</p>\n<p>\r\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, <code>"ACE"</code> is a subsequence of <code>"ABCDE"</code> while <code>"AEC"</code> is not).\r\n</p>\n<p>\r\nHere is an example:<br/>\n<b>S</b> = <code>"rabbbit"</code>, <b>T</b> = <code>"rabbit"</code>\n</p>\n<p>\r\nReturn <code>3</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, flatten it to a linked list in-place.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven\r\n<pre>\r\n         1\r\n        / \\\r\n       2   5\r\n      / \\   \\\r\n     3   4   6\r\n</pre>\n</p>\r\n\r\nThe flattened tree should look like:<br/>\n<pre>\r\n   1\r\n    \\\r\n     2\r\n      \\\r\n       3\r\n        \\\r\n         4\r\n          \\\r\n           5\r\n            \\\r\n             6\r\n</pre>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show hints.</a></p>\n<div class="spoilers"><b>Hints:</b>\n<p>If you notice carefully in the flattened tree, each node\'s right child points to the next node of a pre-order traversal.</p>\n</div></p>\n</div>'


114 : flatten-binary-tree-to-linked-list
113 : path-sum-ii


b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, flatten it to a linked list in-place.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven\r\n<pre>\r\n         1\r\n        / \\\r\n       2   5\r\n      / \\   \\\r\n     3   4   6\r\n</pre>\n</p>\r\n\r\nThe flattened tree should look like:<br/>\n<pre>\r\n   1\r\n    \\\r\n     2\r\n      \\\r\n       3\r\n        \\\r\n         4\r\n          \\\r\n           5\r\n            \\\r\n             6\r\n</pre>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show hints.</a></p>\n<div class="spoilers"><b>Hints:</b>\n<p>If you notice carefully in the flattened tree, each node\'s right child points to the next node of a pre-order traversal.</p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a binary tree and a sum, find all root-to-leaf paths where each path\'s sum equals the given sum.\r\n</p>\r\n\r\nFor example:<br/>\r\nGiven the below binary tree and <code>sum = 22</code>,\r\n<pre>\r\n              5\r\n             / \\\r\n            4   8\r\n           /   / \\\r\n          11  13  4\r\n         /  \\    / \\\r\n        7    2  5   1\r\n</pre>\n<p>\r\nreturn<br/>\n<pre>\r\n[\r\n   [5,4,11,2],\r\n   [5,8,4,5]\r\n]\r\n</pre>\n</p></p>\n</div>'


113 : path-sum-ii
112 : path-sum


b'<div class="question-description">\n<p><p>\r\nGiven a binary tree and a sum, find all root-to-leaf paths where each path\'s sum equals the given sum.\r\n</p>\r\n\r\nFor example:<br/>\r\nGiven the below binary tree and <code>sum = 22</code>,\r\n<pre>\r\n              5\r\n             / \\\r\n            4   8\r\n           /   / \\\r\n          11  13  4\r\n         /  \\    / \\\r\n        7    2  5   1\r\n</pre>\n<p>\r\nreturn<br/>\n<pre>\r\n[\r\n   [5,4,11,2],\r\n   [5,8,4,5]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.\r\n</p>\r\n\r\nFor example:<br/>\r\nGiven the below binary tree and <code>sum = 22</code>,\r\n<pre>\r\n              5\r\n             / \\\r\n            4   8\r\n           /   / \\\r\n          11  13  4\r\n         /  \\      \\\r\n        7    2      1\r\n</pre>\n<p>\r\nreturn true, as there exist a root-to-leaf path <code>5-&gt;4-&gt;11-&gt;2</code> which sum is 22.</p></p>\n</div>'


112 : path-sum
111 : minimum-depth-of-binary-tree


b'<div class="question-description">\n<p><p>\r\nGiven a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.\r\n</p>\r\n\r\nFor example:<br/>\r\nGiven the below binary tree and <code>sum = 22</code>,\r\n<pre>\r\n              5\r\n             / \\\r\n            4   8\r\n           /   / \\\r\n          11  13  4\r\n         /  \\      \\\r\n        7    2      1\r\n</pre>\n<p>\r\nreturn true, as there exist a root-to-leaf path <code>5-&gt;4-&gt;11-&gt;2</code> which sum is 22.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, find its minimum depth.</p>\n<p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p></p>\n</div>'


111 : minimum-depth-of-binary-tree
110 : balanced-binary-tree


b'<div class="question-description">\n<p><p>Given a binary tree, find its minimum depth.</p>\n<p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, determine if it is height-balanced.\r\n</p>\n<p>\r\nFor this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <i>every</i> node never differ by more than 1.\r\n</p></p>\n</div>'


110 : balanced-binary-tree
109 : convert-sorted-list-to-binary-search-tree


b'<div class="question-description">\n<p><p>Given a binary tree, determine if it is height-balanced.\r\n</p>\n<p>\r\nFor this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <i>every</i> node never differ by more than 1.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.</p></p>\n</div>'


109 : convert-sorted-list-to-binary-search-tree
108 : convert-sorted-array-to-binary-search-tree


b'<div class="question-description">\n<p><p>Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array where elements are sorted in ascending order, convert it to a height balanced BST.</p></p>\n</div>'


108 : convert-sorted-array-to-binary-search-tree
107 : binary-tree-level-order-traversal-ii


b'<div class="question-description">\n<p><p>Given an array where elements are sorted in ascending order, convert it to a height balanced BST.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>bottom-up level order</i> traversal of its nodes\' values. (ie, from left to right, level by level from leaf to root).</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br/>\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n</pre>\n</p>\n<p>\r\nreturn its bottom-up level order traversal as:<br/>\n<pre>\r\n[\r\n  [15,7],\r\n  [9,20],\r\n  [3]\r\n]\r\n</pre>\n</p></p>\n</div>'


107 : binary-tree-level-order-traversal-ii
106 : construct-binary-tree-from-inorder-and-postorder-traversal


b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>bottom-up level order</i> traversal of its nodes\' values. (ie, from left to right, level by level from leaf to root).</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br/>\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n</pre>\n</p>\n<p>\r\nreturn its bottom-up level order traversal as:<br/>\n<pre>\r\n[\r\n  [15,7],\r\n  [9,20],\r\n  [3]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given inorder and postorder traversal of a tree, construct the binary tree.</p>\n<p><b>Note:</b><br/>\r\nYou may assume that duplicates do not exist in the tree.\r\n</p></p>\n</div>'


106 : construct-binary-tree-from-inorder-and-postorder-traversal
105 : construct-binary-tree-from-preorder-and-inorder-traversal


b'<div class="question-description">\n<p><p>Given inorder and postorder traversal of a tree, construct the binary tree.</p>\n<p><b>Note:</b><br/>\r\nYou may assume that duplicates do not exist in the tree.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given preorder and inorder traversal of a tree, construct the binary tree.</p>\n<p><b>Note:</b><br/>\r\nYou may assume that duplicates do not exist in the tree.\r\n</p></p>\n</div>'


105 : construct-binary-tree-from-preorder-and-inorder-traversal
104 : maximum-depth-of-binary-tree


b'<div class="question-description">\n<p><p>Given preorder and inorder traversal of a tree, construct the binary tree.</p>\n<p><b>Note:</b><br/>\r\nYou may assume that duplicates do not exist in the tree.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, find its maximum depth.</p>\n<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p></p>\n</div>'


104 : maximum-depth-of-binary-tree
103 : binary-tree-zigzag-level-order-traversal


b'<div class="question-description">\n<p><p>Given a binary tree, find its maximum depth.</p>\n<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>zigzag level order</i> traversal of its nodes\' values. (ie, from left to right, then right to left for the next level and alternate between).</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br/>\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n</pre>\n</p>\n<p>\r\nreturn its zigzag level order traversal as:<br/>\n<pre>\r\n[\r\n  [3],\r\n  [20,9],\r\n  [15,7]\r\n]\r\n</pre>\n</p></p>\n</div>'


103 : binary-tree-zigzag-level-order-traversal
102 : binary-tree-level-order-traversal


b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>zigzag level order</i> traversal of its nodes\' values. (ie, from left to right, then right to left for the next level and alternate between).</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br/>\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n</pre>\n</p>\n<p>\r\nreturn its zigzag level order traversal as:<br/>\n<pre>\r\n[\r\n  [3],\r\n  [20,9],\r\n  [15,7]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>level order</i> traversal of its nodes\' values. (ie, from left to right, level by level).</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br/>\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n</pre>\n</p>\n<p>\r\nreturn its level order traversal as:<br/>\n<pre>\r\n[\r\n  [3],\r\n  [9,20],\r\n  [15,7]\r\n]\r\n</pre>\n</p></p>\n</div>'


102 : binary-tree-level-order-traversal
101 : symmetric-tree


b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>level order</i> traversal of its nodes\' values. (ie, from left to right, level by level).</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br/>\n<pre>\r\n    3\r\n   / \\\r\n  9  20\r\n    /  \\\r\n   15   7\r\n</pre>\n</p>\n<p>\r\nreturn its level order traversal as:<br/>\n<pre>\r\n[\r\n  [3],\r\n  [9,20],\r\n  [15,7]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</p>\n<p>\r\nFor example, this binary tree <code>[1,2,2,3,4,4,3]</code> is symmetric:\r\n<pre>\r\n    1\r\n   / \\\r\n  2   2\r\n / \\ / \\\r\n3  4 4  3\r\n</pre>\n</p>\n<p>\r\nBut the following <code>[1,2,2,null,3,null,3]</code>  is not:<br/>\n<pre>\r\n    1\r\n   / \\\r\n  2   2\r\n   \\   \\\r\n   3    3\r\n</pre>\n</p>\n<p>\n<b>Note:</b><br/>\r\nBonus points if you could solve it both recursively and iteratively.\r\n</p></p>\n</div>'


101 : symmetric-tree
100 : same-tree


b'<div class="question-description">\n<p><p>Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</p>\n<p>\r\nFor example, this binary tree <code>[1,2,2,3,4,4,3]</code> is symmetric:\r\n<pre>\r\n    1\r\n   / \\\r\n  2   2\r\n / \\ / \\\r\n3  4 4  3\r\n</pre>\n</p>\n<p>\r\nBut the following <code>[1,2,2,null,3,null,3]</code>  is not:<br/>\n<pre>\r\n    1\r\n   / \\\r\n  2   2\r\n   \\   \\\r\n   3    3\r\n</pre>\n</p>\n<p>\n<b>Note:</b><br/>\r\nBonus points if you could solve it both recursively and iteratively.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two binary trees, write a function to check if they are equal or not.\r\n</p>\n<p>Two binary trees are considered equal if they are structurally identical and the nodes have the same value.\r\n</p></p>\n</div>'


100 : same-tree
99 : recover-binary-search-tree


b'<div class="question-description">\n<p><p>\r\nGiven two binary trees, write a function to check if they are equal or not.\r\n</p>\n<p>Two binary trees are considered equal if they are structurally identical and the nodes have the same value.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nTwo elements of a binary search tree (BST) are swapped by mistake.</p>\n<p>Recover the tree without changing its structure.\r\n</p>\n<b>Note:</b><br/>\r\nA solution using O(<i>n</i>) space is pretty straight forward. Could you devise a constant space solution?\r\n</p></div>'


99 : recover-binary-search-tree
98 : validate-binary-search-tree


b'<div class="question-description">\n<p><p>\r\nTwo elements of a binary search tree (BST) are swapped by mistake.</p>\n<p>Recover the tree without changing its structure.\r\n</p>\n<b>Note:</b><br/>\r\nA solution using O(<i>n</i>) space is pretty straight forward. Could you devise a constant space solution?\r\n</p></div>'




b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, determine if it is a valid binary search tree (BST).\r\n</p>\n<p>\r\nAssume a BST is defined as follows:\r\n<ul>\n<li>The left subtree of a node contains only nodes with keys <b>less than</b> the node\'s key.</li>\n<li>The right subtree of a node contains only nodes with keys <b>greater than</b> the node\'s key.</li>\n<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n    2\r\n   / \\\r\n  1   3\r\n</pre>\r\nBinary tree <code>[2,1,3]</code>, return true.\r\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n    1\r\n   / \\\r\n  2   3\r\n</pre>\r\nBinary tree <code>[1,2,3]</code>, return false.\r\n</p></p>\n</div>'


98 : validate-binary-search-tree
97 : interleaving-string


b'<div class="question-description">\n<p><p>\r\nGiven a binary tree, determine if it is a valid binary search tree (BST).\r\n</p>\n<p>\r\nAssume a BST is defined as follows:\r\n<ul>\n<li>The left subtree of a node contains only nodes with keys <b>less than</b> the node\'s key.</li>\n<li>The right subtree of a node contains only nodes with keys <b>greater than</b> the node\'s key.</li>\n<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\n    2\r\n   / \\\r\n  1   3\r\n</pre>\r\nBinary tree <code>[2,1,3]</code>, return true.\r\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\n    1\r\n   / \\\r\n  2   3\r\n</pre>\r\nBinary tree <code>[1,2,3]</code>, return false.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven <i>s1</i>, <i>s2</i>, <i>s3</i>, find whether <i>s3</i> is formed by the interleaving of <i>s1</i> and <i>s2</i>.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven:<br/>\n<i>s1</i> = <code>"aabcc"</code>,<br/>\n<i>s2</i> = <code>"dbbca"</code>,\r\n</p>\n<p>\r\nWhen <i>s3</i> = <code>"aadbbcbcac"</code>, return true.<br/>\r\nWhen <i>s3</i> = <code>"aadbbbaccc"</code>, return false.\r\n</p></p>\n</div>'


97 : interleaving-string
96 : unique-binary-search-trees


b'<div class="question-description">\n<p><p>\r\nGiven <i>s1</i>, <i>s2</i>, <i>s3</i>, find whether <i>s3</i> is formed by the interleaving of <i>s1</i> and <i>s2</i>.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven:<br/>\n<i>s1</i> = <code>"aabcc"</code>,<br/>\n<i>s2</i> = <code>"dbbca"</code>,\r\n</p>\n<p>\r\nWhen <i>s3</i> = <code>"aadbbcbcac"</code>, return true.<br/>\r\nWhen <i>s3</i> = <code>"aadbbbaccc"</code>, return false.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given <i>n</i>, how many structurally unique <b>BST\'s</b> (binary search trees) that store values 1...<i>n</i>?</p>\n<p>\r\nFor example,<br/>\r\nGiven <i>n</i> = 3, there are a total of 5 unique BST\'s.\r\n\r\n<pre>\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3\r\n</pre>\n</p></p>\n</div>'


96 : unique-binary-search-trees
95 : unique-binary-search-trees-ii


b'<div class="question-description">\n<p><p>Given <i>n</i>, how many structurally unique <b>BST\'s</b> (binary search trees) that store values 1...<i>n</i>?</p>\n<p>\r\nFor example,<br/>\r\nGiven <i>n</i> = 3, there are a total of 5 unique BST\'s.\r\n\r\n<pre>\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an integer <i>n</i>, generate all structurally unique <b>BST\'s</b> (binary search trees) that store values 1...<i>n</i>.</p>\n<p>\r\nFor example,<br/>\r\nGiven <i>n</i> = 3, your program should return all 5 unique BST\'s shown below.\r\n\r\n<pre>\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3\r\n</pre>\n</p></p>\n</div>'


95 : unique-binary-search-trees-ii
94 : binary-tree-inorder-traversal


b'<div class="question-description">\n<p><p>Given an integer <i>n</i>, generate all structurally unique <b>BST\'s</b> (binary search trees) that store values 1...<i>n</i>.</p>\n<p>\r\nFor example,<br/>\r\nGiven <i>n</i> = 3, your program should return all 5 unique BST\'s shown below.\r\n\r\n<pre>\r\n   1         3     3      2      1\r\n    \\       /     /      / \\      \\\r\n     3     2     1      1   3      2\r\n    /     /       \\                 \\\r\n   2     1         2                 3\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>inorder</i> traversal of its nodes\' values.</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>[1,null,2,3]</code>,<br/>\n<pre>\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n</pre>\n</p>\n<p>\r\nreturn <code>[1,3,2]</code>.\r\n</p>\n<p><b>Note:</b> Recursive solution is trivial, could you do it iteratively?</p></p>\n</div>'


94 : binary-tree-inorder-traversal
93 : restore-ip-addresses


b'<div class="question-description">\n<p><p>Given a binary tree, return the <i>inorder</i> traversal of its nodes\' values.</p>\n<p>\r\nFor example:<br/>\r\nGiven binary tree <code>[1,null,2,3]</code>,<br/>\n<pre>\r\n   1\r\n    \\\r\n     2\r\n    /\r\n   3\r\n</pre>\n</p>\n<p>\r\nreturn <code>[1,3,2]</code>.\r\n</p>\n<p><b>Note:</b> Recursive solution is trivial, could you do it iteratively?</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string containing only digits, restore it by returning all possible valid IP address combinations.</p>\n<p>\r\nFor example:<br/>\r\nGiven <code>"25525511135"</code>,\r\n</p>\n<p>\r\nreturn <code>["255.255.11.135", "255.255.111.35"]</code>. (Order does not matter)\r\n</p></p>\n</div>'


93 : restore-ip-addresses
92 : reverse-linked-list-ii


b'<div class="question-description">\n<p><p>Given a string containing only digits, restore it by returning all possible valid IP address combinations.</p>\n<p>\r\nFor example:<br/>\r\nGiven <code>"25525511135"</code>,\r\n</p>\n<p>\r\nreturn <code>["255.255.11.135", "255.255.111.35"]</code>. (Order does not matter)\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nReverse a linked list from position <i>m</i> to <i>n</i>. Do it in-place and in one-pass.\r\n</p>\n<p>\r\nFor example:<br/>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code>, <i>m</i> = 2 and <i>n</i> = 4,\r\n</p>\n<p>\r\nreturn <code>1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;NULL</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nGiven <i>m</i>, <i>n</i> satisfy the following condition:<br/>\r\n1 ? <i>m</i> ? <i>n</i> ? length of list.\r\n</p></p>\n</div>'


92 : reverse-linked-list-ii
91 : decode-ways


b'<div class="question-description">\n<p><p>\r\nReverse a linked list from position <i>m</i> to <i>n</i>. Do it in-place and in one-pass.\r\n</p>\n<p>\r\nFor example:<br/>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code>, <i>m</i> = 2 and <i>n</i> = 4,\r\n</p>\n<p>\r\nreturn <code>1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;NULL</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nGiven <i>m</i>, <i>n</i> satisfy the following condition:<br/>\r\n1 ? <i>m</i> ? <i>n</i> ? length of list.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nA message containing letters from <code>A-Z</code> is being encoded to numbers using the following mapping:\r\n</p>\n<pre>\r\n\'A\' -&gt; 1\r\n\'B\' -&gt; 2\r\n...\r\n\'Z\' -&gt; 26\r\n</pre>\n<p>\r\nGiven an encoded message containing digits, determine the total number of ways to decode it.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven encoded message <code>"12"</code>,\r\nit could be decoded as <code>"AB"</code> (1 2) or <code>"L"</code> (12).\r\n</p>\n<p>\r\nThe number of ways decoding <code>"12"</code> is 2.\r\n</p></p>\n</div>'


91 : decode-ways
90 : subsets-ii


b'<div class="question-description">\n<p><p>\r\nA message containing letters from <code>A-Z</code> is being encoded to numbers using the following mapping:\r\n</p>\n<pre>\r\n\'A\' -&gt; 1\r\n\'B\' -&gt; 2\r\n...\r\n\'Z\' -&gt; 26\r\n</pre>\n<p>\r\nGiven an encoded message containing digits, determine the total number of ways to decode it.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven encoded message <code>"12"</code>,\r\nit could be decoded as <code>"AB"</code> (1 2) or <code>"L"</code> (12).\r\n</p>\n<p>\r\nThe number of ways decoding <code>"12"</code> is 2.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a collection of integers that might contain duplicates, <b><i>nums</i></b>, return all possible subsets.\r\n</p>\n<p><b>Note:</b> The solution set must not contain duplicate subsets.\r\n</p>\n<p>\r\nFor example,<br/>\r\nIf <b><i>nums</i></b> = <code>[1,2,2]</code>, a solution is:\r\n</p>\n<pre>\r\n[\r\n  [2],\r\n  [1],\r\n  [1,2,2],\r\n  [2,2],\r\n  [1,2],\r\n  []\r\n]\r\n</pre></p>\n</div>'


90 : subsets-ii
89 : gray-code


b'<div class="question-description">\n<p><p>\r\nGiven a collection of integers that might contain duplicates, <b><i>nums</i></b>, return all possible subsets.\r\n</p>\n<p><b>Note:</b> The solution set must not contain duplicate subsets.\r\n</p>\n<p>\r\nFor example,<br/>\r\nIf <b><i>nums</i></b> = <code>[1,2,2]</code>, a solution is:\r\n</p>\n<pre>\r\n[\r\n  [2],\r\n  [1],\r\n  [1,2,2],\r\n  [2,2],\r\n  [1,2],\r\n  []\r\n]\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>The gray code is a binary numeral system where two successive values differ in only one bit.</p>\n<p>Given a non-negative integer <i>n</i> representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.</p>\n<p>For example, given <i>n</i> = 2, return <code>[0,1,3,2]</code>. Its gray code sequence is:</p>\n<pre>\r\n00 - 0\r\n01 - 1\r\n11 - 3\r\n10 - 2\r\n</pre>\n<p><b>Note:</b><br/>\r\nFor a given <i>n</i>, a gray code sequence is not uniquely defined.\r\n</p>\n<p>For example, <code>[0,2,3,1]</code> is also a valid gray code sequence according to the above definition.</p>\n<p>For now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.</p></p>\n</div>'


89 : gray-code
88 : merge-sorted-array


b'<div class="question-description">\n<p><p>The gray code is a binary numeral system where two successive values differ in only one bit.</p>\n<p>Given a non-negative integer <i>n</i> representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.</p>\n<p>For example, given <i>n</i> = 2, return <code>[0,1,3,2]</code>. Its gray code sequence is:</p>\n<pre>\r\n00 - 0\r\n01 - 1\r\n11 - 3\r\n10 - 2\r\n</pre>\n<p><b>Note:</b><br/>\r\nFor a given <i>n</i>, a gray code sequence is not uniquely defined.\r\n</p>\n<p>For example, <code>[0,2,3,1]</code> is also a valid gray code sequence according to the above definition.</p>\n<p>For now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given two sorted integer arrays <i>nums1</i> and <i>nums2</i>, merge <i>nums2</i> into <i>nums1</i> as one sorted array.</p>\n<p>\n<b>Note:</b><br/>\r\nYou may assume that <i>nums1</i> has enough space (size that is greater or equal to <i>m</i> + <i>n</i>) to hold additional elements from <i>nums2</i>. The number of elements initialized in <i>nums1</i> and <i>nums2</i> are <i>m</i> and <i>n</i> respectively.</p></p>\n</div>'


88 : merge-sorted-array
87 : scramble-string


b'<div class="question-description">\n<p><p>\r\nGiven a string <i>s1</i>, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.\r\n</p>\n<p>\r\nBelow is one possible representation of <i>s1</i> = <code>"great"</code>:\r\n</p>\n<pre>\r\n    great\r\n   /    \\\r\n  gr    eat\r\n / \\    /  \\\r\ng   r  e   at\r\n           / \\\r\n          a   t\r\n</pre>\n<p>\r\nTo scramble the string, we may choose any non-leaf node and swap its two children.\r\n</p>\n<p>\r\nFor example, if we choose the node <code>"gr"</code> and swap its two children, it produces a scrambled string <code>"rgeat"</code>.\r\n</p>\n<pre>\r\n    rgeat\r\n   /    \\\r\n  rg    eat\r\n / \\    /  \\\r\nr   g  e   at\r\n           / \\\r\n          a   t\r\n</pre>\n<p>\r\nWe say that <code>"rgeat"</code> is a scrambled string of <code>"great"</code>.\r\n</p>\n<p>\r\nSimilarly, if we continue to swap the children of nodes <code>"eat"</code> and <code>"at"</code>, it produces a scrambled string <code>"rgtae"</code>.\r\n</p>\n<pre>\r\n    rgtae\r\n   /    \\\r\n  rg    tae\r\n / \\    /  \\\r\nr   g  ta  e\r\n       / \\\r\n      t   a\r\n</pre>\n<p>\r\nWe say that <code>"rgtae"</code> is a scrambled string of <code>"great"</code>.\r\n</p>\n<p>\r\nGiven two strings <i>s1</i> and <i>s2</i> of the same length, determine if <i>s2</i> is a scrambled string of <i>s1</i>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given two sorted integer arrays <i>nums1</i> and <i>nums2</i>, merge <i>nums2</i> into <i>nums1</i> as one sorted array.</p>\n<p>\n<b>Note:</b><br/>\r\nYou may assume that <i>nums1</i> has enough space (size that is greater or equal to <i>m</i> + <i>n</i>) to hold additional elements from <i>nums2</i>. The number of elements initialized in <i>nums1</i> and <i>nums2</i> are <i>m</i> and <i>n</i> respectively.</p></p>\n</div>'


87 : scramble-string
86 : partition-list


b'<div class="question-description">\n<p><p>Given a linked list and a value <i>x</i>, partition it such that all nodes less than <i>x</i> come before nodes greater than or equal to <i>x</i>.\r\n</p>\n<p>\r\nYou should preserve the original relative order of the nodes in each of the two partitions.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;2</code> and <i>x</i> = 3,<br/>\r\nreturn <code>1-&gt;2-&gt;2-&gt;4-&gt;3-&gt;5</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string <i>s1</i>, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.\r\n</p>\n<p>\r\nBelow is one possible representation of <i>s1</i> = <code>"great"</code>:\r\n</p>\n<pre>\r\n    great\r\n   /    \\\r\n  gr    eat\r\n / \\    /  \\\r\ng   r  e   at\r\n           / \\\r\n          a   t\r\n</pre>\n<p>\r\nTo scramble the string, we may choose any non-leaf node and swap its two children.\r\n</p>\n<p>\r\nFor example, if we choose the node <code>"gr"</code> and swap its two children, it produces a scrambled string <code>"rgeat"</code>.\r\n</p>\n<pre>\r\n    rgeat\r\n   /    \\\r\n  rg    eat\r\n / \\    /  \\\r\nr   g  e   at\r\n           / \\\r\n          a   t\r\n</pre>\n<p>\r\nWe say that <code>"rgeat"</code> is a scrambled string of <code>"great"</code>.\r\n</p>\n<p>\r\nSimilarly, if we continue to swap the children of nodes <code>"eat"</code> and <code>"at"</code>, it produces a scrambled string <code>"rgtae"</code>.\r\n</p>\n<pre>\r\n    rgtae\r\n   /    \\\r\n  rg    tae\r\n / \\    /  \\\r\nr   g  ta  e\r\n       / \\\r\n      t   a\r\n</pre>\n<p>\r\nWe say that <code>"rgtae"</code> is a scrambled string of <code>"great"</code>.\r\n</p>\n<p>\r\nGiven two strings <i>s1</i> and <i>s2</i> of the same length, determine if <i>s2</i> is a scrambled string of <i>s1</i>.\r\n</p></p>\n</div>'


86 : partition-list
85 : maximal-rectangle


b'<div class="question-description">\n<p><p>Given a linked list and a value <i>x</i>, partition it such that all nodes less than <i>x</i> come before nodes greater than or equal to <i>x</i>.\r\n</p>\n<p>\r\nYou should preserve the original relative order of the nodes in each of the two partitions.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;2</code> and <i>x</i> = 3,<br/>\r\nreturn <code>1-&gt;2-&gt;2-&gt;4-&gt;3-&gt;5</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a 2D binary matrix filled with 0\'s and 1\'s, find the largest rectangle containing only 1\'s and return its area.\r\n</p>\n<p>For example, given the following matrix:\r\n<pre>\r\n1 0 1 0 0\r\n1 0 <font color="red">1</font> <font color="red">1</font> <font color="red">1</font>\r\n1 1 <font color="red">1</font> <font color="red">1</font> <font color="red">1</font>\r\n1 0 0 1 0\r\n</pre>\r\nReturn 6.\r\n</p></p>\n</div>'


85 : maximal-rectangle
84 : largest-rectangle-in-histogram


b'<div class="question-description">\n<p><p>\r\nGiven a 2D binary matrix filled with 0\'s and 1\'s, find the largest rectangle containing only 1\'s and return its area.\r\n</p>\n<p>For example, given the following matrix:\r\n<pre>\r\n1 0 1 0 0\r\n1 0 <font color="red">1</font> <font color="red">1</font> <font color="red">1</font>\r\n1 1 <font color="red">1</font> <font color="red">1</font> <font color="red">1</font>\r\n1 0 0 1 0\r\n</pre>\r\nReturn 6.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven <i>n</i> non-negative integers representing the histogram\'s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\r\n</p>\n<p>\n<img src="https://leetcode.com/static/images/problemset/histogram.png"><br/>\n<p style="font-size: 11px">Above is a histogram where width of each bar is 1, given height = <code>[2,1,5,6,2,3]</code>.</p>\n</img></p>\n<p>\n<img src="https://leetcode.com/static/images/problemset/histogram_area.png"/><br/>\n<p style="font-size: 11px">The largest rectangle is shown in the shaded area, which has area = <code>10</code> unit.</p>\n</p>\n<p>\r\nFor example,<br/>\r\nGiven heights = <code>[2,1,5,6,2,3]</code>,<br/>\r\nreturn <code>10</code>.\r\n</p></p>\n</div>'


84 : largest-rectangle-in-histogram
83 : remove-duplicates-from-sorted-list


b'<div class="question-description">\n<p><p>\r\nGiven <i>n</i> non-negative integers representing the histogram\'s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\r\n</p>\n<p>\n<img src="https://leetcode.com/static/images/problemset/histogram.png"><br/>\n<p style="font-size: 11px">Above is a histogram where width of each bar is 1, given height = <code>[2,1,5,6,2,3]</code>.</p>\n</img></p>\n<p>\n<img src="https://leetcode.com/static/images/problemset/histogram_area.png"/><br/>\n<p style="font-size: 11px">The largest rectangle is shown in the shaded area, which has area = <code>10</code> unit.</p>\n</p>\n<p>\r\nFor example,<br/>\r\nGiven heights = <code>[2,1,5,6,2,3]</code>,<br/>\r\nreturn <code>10</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a sorted linked list, delete all duplicates such that each element appear only <i>once</i>.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>1-&gt;1-&gt;2</code>, return <code>1-&gt;2</code>.<br/>\r\nGiven <code>1-&gt;1-&gt;2-&gt;3-&gt;3</code>, return <code>1-&gt;2-&gt;3</code>.\r\n</p></p>\n</div>'


83 : remove-duplicates-from-sorted-list
82 : remove-duplicates-from-sorted-list-ii


b'<div class="question-description">\n<p><p>\r\nGiven a sorted linked list, delete all duplicates such that each element appear only <i>once</i>.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>1-&gt;1-&gt;2</code>, return <code>1-&gt;2</code>.<br/>\r\nGiven <code>1-&gt;1-&gt;2-&gt;3-&gt;3</code>, return <code>1-&gt;2-&gt;3</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a sorted linked list, delete all nodes that have duplicate numbers, leaving only <i>distinct</i> numbers from the original list.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5</code>, return <code>1-&gt;2-&gt;5</code>.<br/>\r\nGiven <code>1-&gt;1-&gt;1-&gt;2-&gt;3</code>, return <code>2-&gt;3</code>.\r\n</p></p>\n</div>'


82 : remove-duplicates-from-sorted-list-ii
81 : search-in-rotated-sorted-array-ii


b'<div class="question-description">\n<p><p>\r\nGiven a sorted linked list, delete all nodes that have duplicate numbers, leaving only <i>distinct</i> numbers from the original list.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5</code>, return <code>1-&gt;2-&gt;5</code>.<br/>\r\nGiven <code>1-&gt;1-&gt;1-&gt;2-&gt;3</code>, return <code>2-&gt;3</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><blockquote>\n<p><i>Follow up</i> for "Search in Rotated Sorted Array":<br/>\r\nWhat if <i>duplicates</i> are allowed?</p>\n<p>Would this affect the run-time complexity? How and why?</p>\n</blockquote>\n<p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n<p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p>\n<p>Write a function to determine if a given target is in the array.</p>\n<p>The array may contain duplicates.</p></p>\n</div>'


81 : search-in-rotated-sorted-array-ii
80 : remove-duplicates-from-sorted-array-ii


b'<div class="question-description">\n<p><blockquote>\n<p><i>Follow up</i> for "Search in Rotated Sorted Array":<br/>\r\nWhat if <i>duplicates</i> are allowed?</p>\n<p>Would this affect the run-time complexity? How and why?</p>\n</blockquote>\n<p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n<p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p>\n<p>Write a function to determine if a given target is in the array.</p>\n<p>The array may contain duplicates.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nFollow up for "Remove Duplicates":<br/>\r\nWhat if duplicates are allowed at most <i>twice</i>?</p>\n<p>\r\nFor example,<br/>\r\nGiven sorted array <i>nums</i> = <code>[1,1,1,2,2,3]</code>,\r\n</p>\n<p>\r\nYour function should return length = <code>5</code>, with the first five elements of <i>nums</i> being <code>1</code>, <code>1</code>, <code>2</code>, <code>2</code> and <code>3</code>. It doesn\'t matter what you leave beyond the new length.\r\n</p></p>\n</div>'


80 : remove-duplicates-from-sorted-array-ii
79 : word-search


b'<div class="question-description">\n<p><p>\r\nFollow up for "Remove Duplicates":<br/>\r\nWhat if duplicates are allowed at most <i>twice</i>?</p>\n<p>\r\nFor example,<br/>\r\nGiven sorted array <i>nums</i> = <code>[1,1,1,2,2,3]</code>,\r\n</p>\n<p>\r\nYour function should return length = <code>5</code>, with the first five elements of <i>nums</i> being <code>1</code>, <code>1</code>, <code>2</code>, <code>2</code> and <code>3</code>. It doesn\'t matter what you leave beyond the new length.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a 2D board and a word, find if the word exists in the grid.\r\n</p>\n<p>\r\nThe word can be constructed from letters of sequentially adjacent cell, where "adjacent" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <b>board</b> = \r\n<pre>\r\n[\r\n  [\'A\',\'B\',\'C\',\'E\'],\r\n  [\'S\',\'F\',\'C\',\'S\'],\r\n  [\'A\',\'D\',\'E\',\'E\']\r\n]\r\n</pre>\n<b>word</b> = <code>"ABCCED"</code>, -&gt; returns <code>true</code>,<br/>\n<b>word</b> = <code>"SEE"</code>, -&gt; returns <code>true</code>,<br/>\n<b>word</b> = <code>"ABCB"</code>, -&gt; returns <code>false</code>.<br/>\n</p></p>\n</div>'


79 : word-search
78 : subsets


b'<div class="question-description">\n<p><p>\r\nGiven a 2D board and a word, find if the word exists in the grid.\r\n</p>\n<p>\r\nThe word can be constructed from letters of sequentially adjacent cell, where "adjacent" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <b>board</b> = \r\n<pre>\r\n[\r\n  [\'A\',\'B\',\'C\',\'E\'],\r\n  [\'S\',\'F\',\'C\',\'S\'],\r\n  [\'A\',\'D\',\'E\',\'E\']\r\n]\r\n</pre>\n<b>word</b> = <code>"ABCCED"</code>, -&gt; returns <code>true</code>,<br/>\n<b>word</b> = <code>"SEE"</code>, -&gt; returns <code>true</code>,<br/>\n<b>word</b> = <code>"ABCB"</code>, -&gt; returns <code>false</code>.<br/>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a set of <b>distinct</b> integers, <i>nums</i>, return all possible subsets.\r\n</p>\n<p><b>Note:</b> The solution set must not contain duplicate subsets.\r\n</p>\n<p>\r\nFor example,<br/>\r\nIf <b><i>nums</i></b> = <code>[1,2,3]</code>, a solution is:\r\n</p>\n<pre>\r\n[\r\n  [3],\r\n  [1],\r\n  [2],\r\n  [1,2,3],\r\n  [1,3],\r\n  [2,3],\r\n  [1,2],\r\n  []\r\n]\r\n</pre></p>\n</div>'


78 : subsets
77 : combinations


b'<div class="question-description">\n<p><p>\r\nGiven a set of <b>distinct</b> integers, <i>nums</i>, return all possible subsets.\r\n</p>\n<p><b>Note:</b> The solution set must not contain duplicate subsets.\r\n</p>\n<p>\r\nFor example,<br/>\r\nIf <b><i>nums</i></b> = <code>[1,2,3]</code>, a solution is:\r\n</p>\n<pre>\r\n[\r\n  [3],\r\n  [1],\r\n  [2],\r\n  [1,2,3],\r\n  [1,3],\r\n  [2,3],\r\n  [1,2],\r\n  []\r\n]\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two integers <i>n</i> and <i>k</i>, return all possible combinations of <i>k</i> numbers out of 1 ... <i>n</i>.\r\n</p>\n<p>\r\nFor example,<br/>\r\nIf <i>n</i> = 4 and <i>k</i> = 2, a solution is:\r\n</p>\n<pre>\r\n[\r\n  [2,4],\r\n  [3,4],\r\n  [2,3],\r\n  [1,2],\r\n  [1,3],\r\n  [1,4],\r\n]\r\n</pre></p>\n</div>'


77 : combinations
76 : minimum-window-substring


b'<div class="question-description">\n<p><p>\r\nGiven two integers <i>n</i> and <i>k</i>, return all possible combinations of <i>k</i> numbers out of 1 ... <i>n</i>.\r\n</p>\n<p>\r\nFor example,<br/>\r\nIf <i>n</i> = 4 and <i>k</i> = 2, a solution is:\r\n</p>\n<pre>\r\n[\r\n  [2,4],\r\n  [3,4],\r\n  [2,3],\r\n  [1,2],\r\n  [1,3],\r\n  [1,4],\r\n]\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a string S and a string T, find the minimum window in S which will contain all the characters in T in complexity O(n).\r\n</p>\n<p>\r\nFor example,<br/>\n<b>S</b> = <code>"ADOBECODEBANC"</code><br/>\n<b>T</b> = <code>"ABC"</code><br/>\n</p>\n<p>\r\nMinimum window is <code>"BANC"</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nIf there is no such window in S that covers all characters in T, return the empty string <code>""</code>.\r\n</p>\n<p>\r\nIf there are multiple such windows, you are guaranteed that there will always be only one unique minimum window in S.\r\n</p></p>\n</div>'


76 : minimum-window-substring
75 : sort-colors


b'<div class="question-description">\n<p><p>\r\nGiven a string S and a string T, find the minimum window in S which will contain all the characters in T in complexity O(n).\r\n</p>\n<p>\r\nFor example,<br/>\n<b>S</b> = <code>"ADOBECODEBANC"</code><br/>\n<b>T</b> = <code>"ABC"</code><br/>\n</p>\n<p>\r\nMinimum window is <code>"BANC"</code>.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nIf there is no such window in S that covers all characters in T, return the empty string <code>""</code>.\r\n</p>\n<p>\r\nIf there are multiple such windows, you are guaranteed that there will always be only one unique minimum window in S.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array with <i>n</i> objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.\r\n</p>\n<p>\r\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nYou are not suppose to use the library\'s sort function for this problem.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show follow up.</a></p>\n<div class="spoilers">\n<p><b>Follow up:</b><br/>\r\nA rather straight forward solution is a two-pass algorithm using counting sort.<br/>\r\nFirst, iterate the array counting number of 0\'s, 1\'s, and 2\'s, then overwrite array with total number of 0\'s, then 1\'s and followed by 2\'s.</p>\n<p>Could you come up with an one-pass algorithm using only constant space?<br/>\n</p>\n</div></p>\n</div>'


75 : sort-colors
74 : search-a-2d-matrix


b'<div class="question-description">\n<p><p>\r\nGiven an array with <i>n</i> objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.\r\n</p>\n<p>\r\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nYou are not suppose to use the library\'s sort function for this problem.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show follow up.</a></p>\n<div class="spoilers">\n<p><b>Follow up:</b><br/>\r\nA rather straight forward solution is a two-pass algorithm using counting sort.<br/>\r\nFirst, iterate the array counting number of 0\'s, 1\'s, and 2\'s, then overwrite array with total number of 0\'s, then 1\'s and followed by 2\'s.</p>\n<p>Could you come up with an one-pass algorithm using only constant space?<br/>\n</p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>Write an efficient algorithm that searches for a value in an <i>m</i> x <i>n</i> matrix. This matrix has the following properties:</p>\n<p>\n<ul>\n<li>Integers in each row are sorted from left to right.</li>\n<li>The first integer of each row is greater than the last integer of the previous row.</li>\n</ul>\n</p>\n<p>\r\nFor example,</p>\n<p>\r\nConsider the following matrix:\r\n</p>\n<pre>\r\n[\r\n  [1,   3,  5,  7],\r\n  [10, 11, 16, 20],\r\n  [23, 30, 34, 50]\r\n]\r\n</pre>\n<p>Given <b>target</b> = <code>3</code>, return <code>true</code>.</p></p>\n</div>'


74 : search-a-2d-matrix
73 : set-matrix-zeroes


b'<div class="question-description">\n<p><p>\r\nGiven a <i>m</i> x <i>n</i> matrix, if an element is 0, set its entire row and column to 0. Do it in place.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show follow up.</a></p>\n<div class="spoilers"><b>Follow up:</b>\n<p>\r\nDid you use extra space?<br/>\r\nA straight forward solution using O(<i>m</i><i>n</i>) space is probably a bad idea.<br/>\r\nA simple improvement uses O(<i>m</i> + <i>n</i>) space, but still not the best solution.<br/>\r\nCould you devise a constant space solution?\r\n</p>\n</div></p>\n</div>'


73 : set-matrix-zeroes
72 : edit-distance


b'<div class="question-description">\n<p><p>Write an efficient algorithm that searches for a value in an <i>m</i> x <i>n</i> matrix. This matrix has the following properties:</p>\n<p>\n<ul>\n<li>Integers in each row are sorted from left to right.</li>\n<li>The first integer of each row is greater than the last integer of the previous row.</li>\n</ul>\n</p>\n<p>\r\nFor example,</p>\n<p>\r\nConsider the following matrix:\r\n</p>\n<pre>\r\n[\r\n  [1,   3,  5,  7],\r\n  [10, 11, 16, 20],\r\n  [23, 30, 34, 50]\r\n]\r\n</pre>\n<p>Given <b>target</b> = <code>3</code>, return <code>true</code>.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a <i>m</i> x <i>n</i> matrix, if an element is 0, set its entire row and column to 0. Do it in place.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show follow up.</a></p>\n<div class="spoilers"><b>Follow up:</b>\n<p>\r\nDid you use extra space?<br/>\r\nA straight forward solution using O(<i>m</i><i>n</i>) space is probably a bad idea.<br/>\r\nA simple improvement uses O(<i>m</i> + <i>n</i>) space, but still not the best solution.<br/>\r\nCould you devise a constant space solution?\r\n</p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two words <i>word1</i> and <i>word2</i>, find the minimum number of steps required to convert <i>word1</i> to <i>word2</i>. (each operation is counted as 1 step.)\r\n</p>\n<p>\r\nYou have the following 3 operations permitted on a word:\r\n</p>\n<p>\r\na) Insert a character<br/>\r\nb) Delete a character<br/>\r\nc) Replace a character<br/>\n</p></p>\n</div>'


72 : edit-distance
71 : simplify-path


b'<div class="question-description">\n<p><p>Given an absolute path for a file (Unix-style), simplify it.</p>\n<p>For example,<br/>\n<b>path</b> = <code>"/home/"</code>, =&gt; <code>"/home"</code><br/>\n<b>path</b> = <code>"/a/./b/../../c/"</code>, =&gt; <code>"/c"</code><br/>\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show corner cases.</a></p>\n<div class="spoilers"><b>Corner Cases:</b>\n<p>\n<ul>\n<li>Did you consider the case where <b>path</b> = <code>"/../"</code>?<br/>\r\nIn this case, you should return <code>"/"</code>.</li>\n<li>Another corner case is the path might contain multiple slashes <code>\'/\'</code> together, such as <code>"/home//foo/"</code>.<br/>\r\nIn this case, you should ignore redundant slashes and return <code>"/home/foo"</code>.</li>\n</ul></p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two words <i>word1</i> and <i>word2</i>, find the minimum number of steps required to convert <i>word1</i> to <i>word2</i>. (each operation is counted as 1 step.)\r\n</p>\n<p>\r\nYou have the following 3 operations permitted on a word:\r\n</p>\n<p>\r\na) Insert a character<br/>\r\nb) Delete a character<br/>\r\nc) Replace a character<br/>\n</p></p>\n</div>'


71 : simplify-path
70 : climbing-stairs


b'<div class="question-description">\n<p><p>Given an absolute path for a file (Unix-style), simplify it.</p>\n<p>For example,<br/>\n<b>path</b> = <code>"/home/"</code>, =&gt; <code>"/home"</code><br/>\n<b>path</b> = <code>"/a/./b/../../c/"</code>, =&gt; <code>"/c"</code><br/>\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show corner cases.</a></p>\n<div class="spoilers"><b>Corner Cases:</b>\n<p>\n<ul>\n<li>Did you consider the case where <b>path</b> = <code>"/../"</code>?<br/>\r\nIn this case, you should return <code>"/"</code>.</li>\n<li>Another corner case is the path might contain multiple slashes <code>\'/\'</code> together, such as <code>"/home//foo/"</code>.<br/>\r\nIn this case, you should ignore redundant slashes and return <code>"/home/foo"</code>.</li>\n</ul></p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>You are climbing a stair case. It takes <i>n</i> steps to reach to the top.</p>\n<p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\r\n</p>\n<p><b>Note:</b> Given <i>n</i> will be a positive integer.\r\n</p></p>\n</div>'


70 : climbing-stairs
69 : sqrtx


b'<div class="question-description">\n<p><p>You are climbing a stair case. It takes <i>n</i> steps to reach to the top.</p>\n<p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\r\n</p>\n<p><b>Note:</b> Given <i>n</i> will be a positive integer.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Implement <code>int sqrt(int x)</code>.</p>\n<p>Compute and return the square root of <i>x</i>.</p></p>\n</div>'


69 : sqrtx
68 : text-justification


b'<div class="question-description">\n<p><p>Implement <code>int sqrt(int x)</code>.</p>\n<p>Compute and return the square root of <i>x</i>.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array of words and a length <i>L</i>, format the text such that each line has exactly <i>L</i> characters and is fully (left and right) justified.\r\n</p>\n<p>\r\nYou should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces <code>\' \'</code> when necessary so that each line has exactly <i>L</i> characters.\r\n</p>\n<p>\r\nExtra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.\r\n</p>\n<p>\r\nFor the last line of text, it should be left justified and no extra space is inserted between words.\r\n</p>\n<p>\r\nFor example,<br/>\n<b>words</b>: <code>["This", "is", "an", "example", "of", "text", "justification."]</code><br/>\n<b>L</b>: <code>16</code>.\r\n</p>\n<p>\r\nReturn the formatted lines as:<br/>\n<pre>\r\n[\r\n   "This    is    an",\r\n   "example  of text",\r\n   "justification.  "\r\n]\r\n</pre>\n</p>\n<p>\n<b>Note:</b> Each word is guaranteed not to exceed <i>L</i> in length.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show corner cases.</a></p>\n<div class="spoilers"><b>Corner Cases:</b>\n<p>\n<ul>\n<li>A line other than the last line might contain only one word. What should you do in this case?<br/>\r\nIn this case, that line should be left-justified.</li>\n</ul></p>\n</div></p>\n</div>'


68 : text-justification
67 : add-binary


b'<div class="question-description">\n<p><p>\r\nGiven an array of words and a length <i>L</i>, format the text such that each line has exactly <i>L</i> characters and is fully (left and right) justified.\r\n</p>\n<p>\r\nYou should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces <code>\' \'</code> when necessary so that each line has exactly <i>L</i> characters.\r\n</p>\n<p>\r\nExtra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.\r\n</p>\n<p>\r\nFor the last line of text, it should be left justified and no extra space is inserted between words.\r\n</p>\n<p>\r\nFor example,<br/>\n<b>words</b>: <code>["This", "is", "an", "example", "of", "text", "justification."]</code><br/>\n<b>L</b>: <code>16</code>.\r\n</p>\n<p>\r\nReturn the formatted lines as:<br/>\n<pre>\r\n[\r\n   "This    is    an",\r\n   "example  of text",\r\n   "justification.  "\r\n]\r\n</pre>\n</p>\n<p>\n<b>Note:</b> Each word is guaranteed not to exceed <i>L</i> in length.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show corner cases.</a></p>\n<div class="spoilers"><b>Corner Cases:</b>\n<p>\n<ul>\n<li>A line other than the last line might contain only one word. What should you do in this case?<br/>\r\nIn this case, that line should be left-justified.</li>\n</ul></p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven two binary strings, return their sum (also a binary string).\r\n</p>\n<p>\r\nFor example,<br/>\r\na = <code>"11"</code><br/>\r\nb = <code>"1"</code><br/>\r\nReturn <code>"100"</code>.\r\n</p></p>\n</div>'


67 : add-binary
66 : plus-one


b'<div class="question-description">\n<p><p>\r\nGiven two binary strings, return their sum (also a binary string).\r\n</p>\n<p>\r\nFor example,<br/>\r\na = <code>"11"</code><br/>\r\nb = <code>"1"</code><br/>\r\nReturn <code>"100"</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a non-negative integer represented as a <b>non-empty</b> array of digits, plus one to the integer.</p>\n<p>You may assume the integer do not contain any leading zero, except the number 0 itself.</p>\n<p>The digits are stored such that the most significant digit is at the head of the list.</p></p>\n</div>'


66 : plus-one
65 : valid-number


b'<div class="question-description">\n<p><p>Given a non-negative integer represented as a <b>non-empty</b> array of digits, plus one to the integer.</p>\n<p>You may assume the integer do not contain any leading zero, except the number 0 itself.</p>\n<p>The digits are stored such that the most significant digit is at the head of the list.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Validate if a given string is numeric.</p>\n<p>\r\nSome examples:<br/>\n<code>"0"</code> =&gt; <code>true</code><br/>\n<code>"   0.1  "</code> =&gt; <code>true</code><br/>\n<code>"abc"</code> =&gt; <code>false</code><br/>\n<code>"1 a"</code> =&gt; <code>false</code><br/>\n<code>"2e10"</code> =&gt; <code>true</code><br/>\n</p>\n<p><b>Note:</b> It is intended for the problem statement to be ambiguous. You should gather all requirements up front before implementing one.\r\n</p>\n<p>\n<b><font color="red">Update (2015-02-10):</font></b><br/>\r\nThe signature of the <code>C++</code> function had been updated. If you still see your function signature accepts a <code>const char *</code> argument, please click the reload button <span class="glyphicon glyphicon-refresh"></span> to reset your code definition.\r\n</p></p>\n</div>'


65 : valid-number
64 : minimum-path-sum


b'<div class="question-description">\n<p><p>Validate if a given string is numeric.</p>\n<p>\r\nSome examples:<br/>\n<code>"0"</code> =&gt; <code>true</code><br/>\n<code>"   0.1  "</code> =&gt; <code>true</code><br/>\n<code>"abc"</code> =&gt; <code>false</code><br/>\n<code>"1 a"</code> =&gt; <code>false</code><br/>\n<code>"2e10"</code> =&gt; <code>true</code><br/>\n</p>\n<p><b>Note:</b> It is intended for the problem statement to be ambiguous. You should gather all requirements up front before implementing one.\r\n</p>\n<p>\n<b><font color="red">Update (2015-02-10):</font></b><br/>\r\nThe signature of the <code>C++</code> function had been updated. If you still see your function signature accepts a <code>const char *</code> argument, please click the reload button <span class="glyphicon glyphicon-refresh"></span> to reset your code definition.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a <i>m</i> x <i>n</i> grid filled with non-negative numbers, find a path from top left to bottom right which <i>minimizes</i> the sum of all numbers along its path.</p>\n<p><b>Note:</b> You can only move either down or right at any point in time.</p></p>\n</div>'


64 : minimum-path-sum
63 : unique-paths-ii


b'<div class="question-description">\n<p><p>Given a <i>m</i> x <i>n</i> grid filled with non-negative numbers, find a path from top left to bottom right which <i>minimizes</i> the sum of all numbers along its path.</p>\n<p><b>Note:</b> You can only move either down or right at any point in time.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Follow up for "Unique Paths":</p>\n<p>Now consider if some obstacles are added to the grids. How many unique paths would there be?</p>\n<p>An obstacle and empty space is marked as <code>1</code> and <code>0</code> respectively in the grid.</p>\n<p>For example,<br/>\n<p>There is one obstacle in the middle of a 3x3 grid as illustrated below.</p>\n<pre>\r\n[\r\n  [0,0,0],\r\n  [0,1,0],\r\n  [0,0,0]\r\n]\r\n</pre>\n<p>The total number of unique paths is <code>2</code>.</p>\n<p><b>Note:</b> <i>m</i> and <i>n</i> will be at most 100.</p></p>\n</p></div>'


63 : unique-paths-ii
62 : unique-paths


b'<div class="question-description">\n<p><p>Follow up for "Unique Paths":</p>\n<p>Now consider if some obstacles are added to the grids. How many unique paths would there be?</p>\n<p>An obstacle and empty space is marked as <code>1</code> and <code>0</code> respectively in the grid.</p>\n<p>For example,<br/>\n<p>There is one obstacle in the middle of a 3x3 grid as illustrated below.</p>\n<pre>\r\n[\r\n  [0,0,0],\r\n  [0,1,0],\r\n  [0,0,0]\r\n]\r\n</pre>\n<p>The total number of unique paths is <code>2</code>.</p>\n<p><b>Note:</b> <i>m</i> and <i>n</i> will be at most 100.</p></p>\n</p></div>'




b'<div class="question-description">\n<p><p>A robot is located at the top-left corner of a <i>m</i> x <i>n</i> grid (marked \'Start\' in the diagram below).</p>\n<p>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked \'Finish\' in the diagram below).</p>\n<p>How many possible unique paths are there?</p>\n<p>\n<img src="https://leetcode.com/static/images/problemset/robot_maze.png"><br/>\n<p style="font-size: 11px">Above is a 3 x 7 grid. How many possible unique paths are there?\r\n</p>\n<p><b>Note:</b> <i>m</i> and <i>n</i> will be at most 100.</p></img></p>\n</p></div>'


62 : unique-paths
61 : rotate-list


b'<div class="question-description">\n<p><p>A robot is located at the top-left corner of a <i>m</i> x <i>n</i> grid (marked \'Start\' in the diagram below).</p>\n<p>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked \'Finish\' in the diagram below).</p>\n<p>How many possible unique paths are there?</p>\n<p>\n<img src="https://leetcode.com/static/images/problemset/robot_maze.png"><br/>\n<p style="font-size: 11px">Above is a 3 x 7 grid. How many possible unique paths are there?\r\n</p>\n<p><b>Note:</b> <i>m</i> and <i>n</i> will be at most 100.</p></img></p>\n</p></div>'




b'<div class="question-description">\n<p><p>Given a list, rotate the list to the right by <i>k</i> places, where <i>k</i> is non-negative.</p>\n<p>For example:<br/>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code> and <i>k</i> = <code>2</code>,<br/>\r\nreturn <code>4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL</code>.</p></p>\n</div>'


61 : rotate-list
60 : permutation-sequence


b'<div class="question-description">\n<p><p>Given a list, rotate the list to the right by <i>k</i> places, where <i>k</i> is non-negative.</p>\n<p>For example:<br/>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code> and <i>k</i> = <code>2</code>,<br/>\r\nreturn <code>4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL</code>.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>The set <code>[1,2,3,\xe2\x80\xa6,<i>n</i>]</code> contains a total of <i>n</i>! unique permutations.</p>\n<p>By listing and labeling all of the permutations in order,<br/>\r\nWe get the following sequence (ie, for <i>n</i> = 3):\r\n<ol>\n<li><code>"123"</code></li>\n<li><code>"132"</code></li>\n<li><code>"213"</code></li>\n<li><code>"231"</code></li>\n<li><code>"312"</code></li>\n<li><code>"321"</code></li>\n</ol>\n</p>\n<p>Given <i>n</i> and <i>k</i>, return the <i>k</i><sup>th</sup> permutation sequence.</p>\n<p><b>Note:</b> Given <i>n</i> will be between 1 and 9 inclusive.</p></p>\n</div>'


60 : permutation-sequence
59 : spiral-matrix-ii


b'<div class="question-description">\n<p><p>The set <code>[1,2,3,\xe2\x80\xa6,<i>n</i>]</code> contains a total of <i>n</i>! unique permutations.</p>\n<p>By listing and labeling all of the permutations in order,<br/>\r\nWe get the following sequence (ie, for <i>n</i> = 3):\r\n<ol>\n<li><code>"123"</code></li>\n<li><code>"132"</code></li>\n<li><code>"213"</code></li>\n<li><code>"231"</code></li>\n<li><code>"312"</code></li>\n<li><code>"321"</code></li>\n</ol>\n</p>\n<p>Given <i>n</i> and <i>k</i>, return the <i>k</i><sup>th</sup> permutation sequence.</p>\n<p><b>Note:</b> Given <i>n</i> will be between 1 and 9 inclusive.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an integer <i>n</i>, generate a square matrix filled with elements from 1 to <i>n</i><sup>2</sup> in spiral order.</p>\n<p>\r\nFor example,<br/>\r\nGiven <i>n</i> = <code>3</code>,\r\n</p>\r\nYou should return the following matrix:\r\n<pre>\r\n[\r\n [ 1, 2, 3 ],\r\n [ 8, 9, 4 ],\r\n [ 7, 6, 5 ]\r\n]\r\n</pre></p>\n</div>'


59 : spiral-matrix-ii
58 : length-of-last-word


b'<div class="question-description">\n<p><p>Given an integer <i>n</i>, generate a square matrix filled with elements from 1 to <i>n</i><sup>2</sup> in spiral order.</p>\n<p>\r\nFor example,<br/>\r\nGiven <i>n</i> = <code>3</code>,\r\n</p>\r\nYou should return the following matrix:\r\n<pre>\r\n[\r\n [ 1, 2, 3 ],\r\n [ 8, 9, 4 ],\r\n [ 7, 6, 5 ]\r\n]\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string <i>s</i> consists of upper/lower-case alphabets and empty space characters <code>\' \'</code>, return the length of last word in the string.</p>\n<p>If the last word does not exist, return 0.</p>\n<p><b>Note:</b> A word is defined as a character sequence consists of non-space characters only.</p>\n<p>\r\nFor example, <br/>\r\nGiven <i>s</i> = <code>"Hello World"</code>,<br/>\r\nreturn <code>5</code>.\r\n</p></p>\n</div>'


58 : length-of-last-word
57 : insert-interval


b'<div class="question-description">\n<p><p>Given a string <i>s</i> consists of upper/lower-case alphabets and empty space characters <code>\' \'</code>, return the length of last word in the string.</p>\n<p>If the last word does not exist, return 0.</p>\n<p><b>Note:</b> A word is defined as a character sequence consists of non-space characters only.</p>\n<p>\r\nFor example, <br/>\r\nGiven <i>s</i> = <code>"Hello World"</code>,<br/>\r\nreturn <code>5</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a set of <i>non-overlapping</i> intervals, insert a new interval into the intervals (merge if necessary).</p>\n<p>You may assume that the intervals were initially sorted according to their start times.</p>\n<p>\n<b>Example 1:</b><br/>\r\nGiven intervals <code>[1,3],[6,9]</code>, insert and merge <code>[2,5]</code> in as <code>[1,5],[6,9]</code>.\r\n</p>\n<p>\n<b>Example 2:</b><br/>\r\nGiven <code>[1,2],[3,5],[6,7],[8,10],[12,16]</code>, insert and merge <code>[4,9]</code> in as <code>[1,2],[3,10],[12,16]</code>.\r\n</p>\n<p>\r\nThis is because the new interval <code>[4,9]</code> overlaps with <code>[3,5],[6,7],[8,10]</code>.\r\n</p></p>\n</div>'


57 : insert-interval
56 : merge-intervals


b'<div class="question-description">\n<p><p>Given a set of <i>non-overlapping</i> intervals, insert a new interval into the intervals (merge if necessary).</p>\n<p>You may assume that the intervals were initially sorted according to their start times.</p>\n<p>\n<b>Example 1:</b><br/>\r\nGiven intervals <code>[1,3],[6,9]</code>, insert and merge <code>[2,5]</code> in as <code>[1,5],[6,9]</code>.\r\n</p>\n<p>\n<b>Example 2:</b><br/>\r\nGiven <code>[1,2],[3,5],[6,7],[8,10],[12,16]</code>, insert and merge <code>[4,9]</code> in as <code>[1,2],[3,10],[12,16]</code>.\r\n</p>\n<p>\r\nThis is because the new interval <code>[4,9]</code> overlaps with <code>[3,5],[6,7],[8,10]</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a collection of intervals, merge all overlapping intervals.</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>[1,3],[2,6],[8,10],[15,18]</code>,<br/>\r\nreturn <code>[1,6],[8,10],[15,18]</code>.\r\n</p></p>\n</div>'


56 : merge-intervals
55 : jump-game


b'<div class="question-description">\n<p><p>Given a collection of intervals, merge all overlapping intervals.</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>[1,3],[2,6],[8,10],[15,18]</code>,<br/>\r\nreturn <code>[1,6],[8,10],[15,18]</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array of non-negative integers, you are initially positioned at the first index of the array.\r\n</p>\n<p>\r\nEach element in the array represents your maximum jump length at that position. \r\n</p>\n<p>\r\nDetermine if you are able to reach the last index.\r\n</p>\n<p>\r\nFor example:<br/>\r\nA = <code>[2,3,1,1,4]</code>, return <code>true</code>.\r\n</p>\n<p>\r\nA = <code>[3,2,1,0,4]</code>, return <code>false</code>.\r\n</p></p>\n</div>'


55 : jump-game
54 : spiral-matrix


b'<div class="question-description">\n<p><p>\r\nGiven an array of non-negative integers, you are initially positioned at the first index of the array.\r\n</p>\n<p>\r\nEach element in the array represents your maximum jump length at that position. \r\n</p>\n<p>\r\nDetermine if you are able to reach the last index.\r\n</p>\n<p>\r\nFor example:<br/>\r\nA = <code>[2,3,1,1,4]</code>, return <code>true</code>.\r\n</p>\n<p>\r\nA = <code>[3,2,1,0,4]</code>, return <code>false</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a matrix of <i>m</i> x <i>n</i> elements (<i>m</i> rows, <i>n</i> columns), return all elements of the matrix in spiral order.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven the following matrix:\r\n</p>\n<pre>\r\n[\r\n [ 1, 2, 3 ],\r\n [ 4, 5, 6 ],\r\n [ 7, 8, 9 ]\r\n]\r\n</pre>\n<p>\r\nYou should return <code>[1,2,3,6,9,8,7,4,5]</code>.\r\n</p></p>\n</div>'


54 : spiral-matrix
53 : maximum-subarray


b'<div class="question-description">\n<p><p>Given a matrix of <i>m</i> x <i>n</i> elements (<i>m</i> rows, <i>n</i> columns), return all elements of the matrix in spiral order.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven the following matrix:\r\n</p>\n<pre>\r\n[\r\n [ 1, 2, 3 ],\r\n [ 4, 5, 6 ],\r\n [ 7, 8, 9 ]\r\n]\r\n</pre>\n<p>\r\nYou should return <code>[1,2,3,6,9,8,7,4,5]</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nFind the contiguous subarray within an array (containing at least one number) which has the largest sum.\r\n</p>\n<p>\r\nFor example, given the array <code>[-2,1,-3,4,-1,2,1,-5,4]</code>,<br/>\r\nthe contiguous subarray <code>[4,-1,2,1]</code> has the largest sum = <code>6</code>.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show more practice.</a></p>\n<div class="spoilers"><b>More practice:</b>\n<p>If you have figured out the O(<i>n</i>) solution, try coding another solution using the divide and conquer approach, which is more subtle.</p>\n</div></p>\n</div>'


53 : maximum-subarray
52 : n-queens-ii


b'<div class="question-description">\n<p><p>\r\nFind the contiguous subarray within an array (containing at least one number) which has the largest sum.\r\n</p>\n<p>\r\nFor example, given the array <code>[-2,1,-3,4,-1,2,1,-5,4]</code>,<br/>\r\nthe contiguous subarray <code>[4,-1,2,1]</code> has the largest sum = <code>6</code>.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show more practice.</a></p>\n<div class="spoilers"><b>More practice:</b>\n<p>If you have figured out the O(<i>n</i>) solution, try coding another solution using the divide and conquer approach, which is more subtle.</p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>Follow up for N-Queens problem.</p>\n<p>Now, instead outputting board configurations, return the total number of distinct solutions.</p>\n<p><img src="https://leetcode.com/static/images/problemset/8-queens.png"/></p></p>\n</div>'


52 : n-queens-ii
51 : n-queens


b'<div class="question-description">\n<p><p>Follow up for N-Queens problem.</p>\n<p>Now, instead outputting board configurations, return the total number of distinct solutions.</p>\n<p><img src="https://leetcode.com/static/images/problemset/8-queens.png"/></p></p>\n</div>'




b'<div class="question-description">\n<p><p>The <i>n</i>-queens puzzle is the problem of placing <i>n</i> queens on an <i>n</i>\xc3\x97<i>n</i> chessboard such that no two queens attack each other.</p>\n<p><img src="https://leetcode.com/static/images/problemset/8-queens.png"/></p>\n<p>Given an integer <i>n</i>, return all distinct solutions to the <i>n</i>-queens puzzle.</p>\n<p>Each solution contains a distinct board configuration of the <i>n</i>-queens\' placement, where <code>\'Q\'</code> and <code>\'.\'</code> both indicate a queen and an empty space respectively.</p>\n<p>For example,<br/>\r\nThere exist two distinct solutions to the 4-queens puzzle:</p>\n<pre>\r\n[\r\n [".Q..",  // Solution 1\r\n  "...Q",\r\n  "Q...",\r\n  "..Q."],\r\n\r\n ["..Q.",  // Solution 2\r\n  "Q...",\r\n  "...Q",\r\n  ".Q.."]\r\n]\r\n</pre></p>\n</div>'


51 : n-queens
50 : powx-n


b'<div class="question-description">\n<p><p>The <i>n</i>-queens puzzle is the problem of placing <i>n</i> queens on an <i>n</i>\xc3\x97<i>n</i> chessboard such that no two queens attack each other.</p>\n<p><img src="https://leetcode.com/static/images/problemset/8-queens.png"/></p>\n<p>Given an integer <i>n</i>, return all distinct solutions to the <i>n</i>-queens puzzle.</p>\n<p>Each solution contains a distinct board configuration of the <i>n</i>-queens\' placement, where <code>\'Q\'</code> and <code>\'.\'</code> both indicate a queen and an empty space respectively.</p>\n<p>For example,<br/>\r\nThere exist two distinct solutions to the 4-queens puzzle:</p>\n<pre>\r\n[\r\n [".Q..",  // Solution 1\r\n  "...Q",\r\n  "Q...",\r\n  "..Q."],\r\n\r\n ["..Q.",  // Solution 2\r\n  "Q...",\r\n  "...Q",\r\n  ".Q.."]\r\n]\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>Implement pow(<i>x</i>, <i>n</i>).\r\n</p></p>\n</div>'


50 : powx-n
49 : group-anagrams


b'<div class="question-description">\n<p><p>Implement pow(<i>x</i>, <i>n</i>).\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array of strings, group anagrams together.\r\n</p>\n<p>For example, given: <code>["eat", "tea", "tan", "ate", "nat", "bat"]</code>, <br/>\r\nReturn:\r\n<pre>\r\n[\r\n  ["ate", "eat","tea"],\r\n  ["nat","tan"],\r\n  ["bat"]\r\n]</pre></p>\n<p><b>Note:</b> All inputs will be in lower-case.</p></p>\n</div>'


49 : group-anagrams
48 : rotate-image


b'<div class="question-description">\n<p><p>Given an array of strings, group anagrams together.\r\n</p>\n<p>For example, given: <code>["eat", "tea", "tan", "ate", "nat", "bat"]</code>, <br/>\r\nReturn:\r\n<pre>\r\n[\r\n  ["ate", "eat","tea"],\r\n  ["nat","tan"],\r\n  ["bat"]\r\n]</pre></p>\n<p><b>Note:</b> All inputs will be in lower-case.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You are given an <i>n</i> x <i>n</i> 2D matrix representing an image.</p>\n<p>Rotate the image by 90 degrees (clockwise).</p>\n<p>Follow up:<br/>\r\nCould you do this in-place?</p></p>\n</div>'


48 : rotate-image
47 : permutations-ii


b'<div class="question-description">\n<p><p>\r\nGiven a collection of numbers that might contain duplicates, return all possible unique permutations.\r\n</p>\n<p>\r\nFor example,<br/>\n<code>[1,1,2]</code> have the following unique permutations:<br/>\n<pre>\r\n[\r\n  [1,1,2],\r\n  [1,2,1],\r\n  [2,1,1]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You are given an <i>n</i> x <i>n</i> 2D matrix representing an image.</p>\n<p>Rotate the image by 90 degrees (clockwise).</p>\n<p>Follow up:<br/>\r\nCould you do this in-place?</p></p>\n</div>'


47 : permutations-ii
46 : permutations


b'<div class="question-description">\n<p><p>\r\nGiven a collection of numbers that might contain duplicates, return all possible unique permutations.\r\n</p>\n<p>\r\nFor example,<br/>\n<code>[1,1,2]</code> have the following unique permutations:<br/>\n<pre>\r\n[\r\n  [1,1,2],\r\n  [1,2,1],\r\n  [2,1,1]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a collection of <b>distinct</b> numbers, return all possible permutations.\r\n</p>\n<p>\r\nFor example,<br/>\n<code>[1,2,3]</code> have the following permutations:<br/>\n<pre>\r\n[\r\n  [1,2,3],\r\n  [1,3,2],\r\n  [2,1,3],\r\n  [2,3,1],\r\n  [3,1,2],\r\n  [3,2,1]\r\n]\r\n</pre>\n</p></p>\n</div>'


46 : permutations
45 : jump-game-ii


b'<div class="question-description">\n<p><p>\r\nGiven a collection of <b>distinct</b> numbers, return all possible permutations.\r\n</p>\n<p>\r\nFor example,<br/>\n<code>[1,2,3]</code> have the following permutations:<br/>\n<pre>\r\n[\r\n  [1,2,3],\r\n  [1,3,2],\r\n  [2,1,3],\r\n  [2,3,1],\r\n  [3,1,2],\r\n  [3,2,1]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven an array of non-negative integers, you are initially positioned at the first index of the array.\r\n</p>\n<p>\r\nEach element in the array represents your maximum jump length at that position. \r\n</p>\n<p>\r\nYour goal is to reach the last index in the minimum number of jumps.\r\n</p>\n<p>\r\nFor example:<br/>\r\nGiven array A = <code>[2,3,1,1,4]</code>\n</p>\n<p>\r\nThe minimum number of jumps to reach the last index is <code>2</code>. (Jump <code>1</code> step from index 0 to 1, then <code>3</code> steps to the last index.)\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nYou can assume that you can always reach the last index.</p></p>\n</div>'


45 : jump-game-ii
44 : wildcard-matching


b'<div class="question-description">\n<p><p>\r\nGiven an array of non-negative integers, you are initially positioned at the first index of the array.\r\n</p>\n<p>\r\nEach element in the array represents your maximum jump length at that position. \r\n</p>\n<p>\r\nYour goal is to reach the last index in the minimum number of jumps.\r\n</p>\n<p>\r\nFor example:<br/>\r\nGiven array A = <code>[2,3,1,1,4]</code>\n</p>\n<p>\r\nThe minimum number of jumps to reach the last index is <code>2</code>. (Jump <code>1</code> step from index 0 to 1, then <code>3</code> steps to the last index.)\r\n</p>\n<p>\n<b>Note:</b><br/>\r\nYou can assume that you can always reach the last index.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Implement wildcard pattern matching with support for <code>\'?\'</code> and <code>\'*\'</code>.</p>\n<pre>\r\n\'?\' Matches any single character.\r\n\'*\' Matches any sequence of characters (including the empty sequence).\r\n\r\nThe matching should cover the <b>entire</b> input string (not partial).\r\n\r\nThe function prototype should be:\r\nbool isMatch(const char *s, const char *p)\r\n\r\nSome examples:\r\nisMatch("aa","a") ? false\r\nisMatch("aa","aa") ? true\r\nisMatch("aaa","aa") ? false\r\nisMatch("aa", "*") ? true\r\nisMatch("aa", "a*") ? true\r\nisMatch("ab", "?*") ? true\r\nisMatch("aab", "c*a*b") ? false\r\n</pre></p>\n</div>'


44 : wildcard-matching
43 : multiply-strings


b'<div class="question-description">\n<p><p>Implement wildcard pattern matching with support for <code>\'?\'</code> and <code>\'*\'</code>.</p>\n<pre>\r\n\'?\' Matches any single character.\r\n\'*\' Matches any sequence of characters (including the empty sequence).\r\n\r\nThe matching should cover the <b>entire</b> input string (not partial).\r\n\r\nThe function prototype should be:\r\nbool isMatch(const char *s, const char *p)\r\n\r\nSome examples:\r\nisMatch("aa","a") ? false\r\nisMatch("aa","aa") ? true\r\nisMatch("aaa","aa") ? false\r\nisMatch("aa", "*") ? true\r\nisMatch("aa", "a*") ? true\r\nisMatch("ab", "?*") ? true\r\nisMatch("aab", "c*a*b") ? false\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>.</p>\n<p><b>Note:</b>\n<ol>\n<li>The length of both <code>num1</code> and <code>num2</code> is &lt; 110.</li>\n<li>Both <code>num1</code> and <code>num2</code> contains only digits <code>0-9</code>.</li>\n<li>Both <code>num1</code> and <code>num2</code> does not contain any leading zero.</li>\n<li>You <b>must not use any built-in BigInteger library</b> or <b>convert the inputs to integer</b> directly.</li>\n</ol>\n</p></p>\n</div>'


43 : multiply-strings
42 : trapping-rain-water


b'<div class="question-description">\n<p><p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>.</p>\n<p><b>Note:</b>\n<ol>\n<li>The length of both <code>num1</code> and <code>num2</code> is &lt; 110.</li>\n<li>Both <code>num1</code> and <code>num2</code> contains only digits <code>0-9</code>.</li>\n<li>Both <code>num1</code> and <code>num2</code> does not contain any leading zero.</li>\n<li>You <b>must not use any built-in BigInteger library</b> or <b>convert the inputs to integer</b> directly.</li>\n</ol>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven <i>n</i> non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining. \r\n</p>\n<p>\r\nFor example, <br/>\r\nGiven <code>[0,1,0,2,1,0,1,3,2,1,2,1]</code>, return <code>6</code>.\r\n</p>\n<p>\n<img src="http://www.leetcode.com/static/images/problemset/rainwatertrap.png"><br/>\n<p style="font-size: 11px">The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. <b>Thanks Marcos</b> for contributing this image!</p></img></p>\n</p></div>'


42 : trapping-rain-water
41 : first-missing-positive


b'<div class="question-description">\n<p><p>\r\nGiven <i>n</i> non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining. \r\n</p>\n<p>\r\nFor example, <br/>\r\nGiven <code>[0,1,0,2,1,0,1,3,2,1,2,1]</code>, return <code>6</code>.\r\n</p>\n<p>\n<img src="http://www.leetcode.com/static/images/problemset/rainwatertrap.png"><br/>\n<p style="font-size: 11px">The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. <b>Thanks Marcos</b> for contributing this image!</p></img></p>\n</p></div>'




b'<div class="question-description">\n<p><p>\r\nGiven an unsorted integer array, find the first missing positive integer.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>[1,2,0]</code> return <code>3</code>,<br/>\r\nand <code>[3,4,-1,1]</code> return <code>2</code>.\r\n</p>\n<p>\r\nYour algorithm should run in <i>O</i>(<i>n</i>) time and uses constant space.\r\n</p></p>\n</div>'


41 : first-missing-positive
40 : combination-sum-ii


b'<div class="question-description">\n<p><p>\r\nGiven an unsorted integer array, find the first missing positive integer.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>[1,2,0]</code> return <code>3</code>,<br/>\r\nand <code>[3,4,-1,1]</code> return <code>2</code>.\r\n</p>\n<p>\r\nYour algorithm should run in <i>O</i>(<i>n</i>) time and uses constant space.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a collection of candidate numbers (<b><i>C</i></b>) and a target number (<b><i>T</i></b>), find all unique combinations in <b><i>C</i></b> where the candidate numbers sums to <b><i>T</i></b>.\r\n</p>\n<p>Each number in <b><i>C</i></b> may only be used <b>once</b> in the combination.\r\n</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>All numbers (including target) will be positive integers.</li>\n<li>The solution set must not contain duplicate combinations.</li>\n</ul>\n</p>\n<p>\r\nFor example, given candidate set <code>[10, 1, 2, 7, 6, 1, 5]</code> and target <code>8</code>, <br/>\r\nA solution set is: <br/>\n<pre>\r\n[\r\n  [1, 7],\r\n  [1, 2, 5],\r\n  [2, 6],\r\n  [1, 1, 6]\r\n]\r\n</pre>\n</p></p>\n</div>'


40 : combination-sum-ii
39 : combination-sum


b'<div class="question-description">\n<p><p>\r\nGiven a collection of candidate numbers (<b><i>C</i></b>) and a target number (<b><i>T</i></b>), find all unique combinations in <b><i>C</i></b> where the candidate numbers sums to <b><i>T</i></b>.\r\n</p>\n<p>Each number in <b><i>C</i></b> may only be used <b>once</b> in the combination.\r\n</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>All numbers (including target) will be positive integers.</li>\n<li>The solution set must not contain duplicate combinations.</li>\n</ul>\n</p>\n<p>\r\nFor example, given candidate set <code>[10, 1, 2, 7, 6, 1, 5]</code> and target <code>8</code>, <br/>\r\nA solution set is: <br/>\n<pre>\r\n[\r\n  [1, 7],\r\n  [1, 2, 5],\r\n  [2, 6],\r\n  [1, 1, 6]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a <b>set</b> of candidate numbers (<b><i>C</i></b>) <b>(without duplicates)</b> and a target number (<b><i>T</i></b>), find all unique combinations in <b><i>C</i></b> where the candidate numbers sums to <b><i>T</i></b>. \r\n</p>\n<p>The <b>same</b> repeated number may be chosen from <b><i>C</i></b> unlimited number of times.\r\n</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>All numbers (including target) will be positive integers.</li>\n<li>The solution set must not contain duplicate combinations.</li>\n</ul>\n</p>\n<p>\r\nFor example, given candidate set <code>[2, 3, 6, 7]</code> and target <code>7</code>, <br/>\r\nA solution set is: <br/>\n<pre>\r\n[\r\n  [7],\r\n  [2, 2, 3]\r\n]\r\n</pre>\n</p></p>\n</div>'


39 : combination-sum
38 : count-and-say


b'<div class="question-description">\n<p><p>\r\nGiven a <b>set</b> of candidate numbers (<b><i>C</i></b>) <b>(without duplicates)</b> and a target number (<b><i>T</i></b>), find all unique combinations in <b><i>C</i></b> where the candidate numbers sums to <b><i>T</i></b>. \r\n</p>\n<p>The <b>same</b> repeated number may be chosen from <b><i>C</i></b> unlimited number of times.\r\n</p>\n<p><b>Note:</b><br/>\n<ul>\n<li>All numbers (including target) will be positive integers.</li>\n<li>The solution set must not contain duplicate combinations.</li>\n</ul>\n</p>\n<p>\r\nFor example, given candidate set <code>[2, 3, 6, 7]</code> and target <code>7</code>, <br/>\r\nA solution set is: <br/>\n<pre>\r\n[\r\n  [7],\r\n  [2, 2, 3]\r\n]\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>The count-and-say sequence is the sequence of integers with the first five terms as following:</p>\n<pre>\r\n1.     1\r\n2.     11\r\n3.     21\r\n4.     1211\r\n5.     111221\r\n</pre>\n<p>\n<code>1</code> is read off as <code>"one 1"</code> or <code>11</code>.<br/>\n<code>11</code> is read off as <code>"two 1s"</code> or <code>21</code>.<br/>\n<code>21</code> is read off as <code>"one 2</code>, then <code>one 1"</code> or <code>1211</code>.<br/>\n</p>\n<p>\r\nGiven an integer <i>n</i>, generate the <i>n</i><sup>th</sup> term of the count-and-say sequence.\r\n</p>\n<p>\r\nNote: Each term of the sequence of integers will be represented as a string.\r\n</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>Input:</b> 1\r\n<b>Output:</b> "1"\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>Input:</b> 4\r\n<b>Output:</b> "1211"\r\n</pre>\n</p></p>\n</div>'


38 : count-and-say
37 : sudoku-solver


b'<div class="question-description">\n<p><p>The count-and-say sequence is the sequence of integers with the first five terms as following:</p>\n<pre>\r\n1.     1\r\n2.     11\r\n3.     21\r\n4.     1211\r\n5.     111221\r\n</pre>\n<p>\n<code>1</code> is read off as <code>"one 1"</code> or <code>11</code>.<br/>\n<code>11</code> is read off as <code>"two 1s"</code> or <code>21</code>.<br/>\n<code>21</code> is read off as <code>"one 2</code>, then <code>one 1"</code> or <code>1211</code>.<br/>\n</p>\n<p>\r\nGiven an integer <i>n</i>, generate the <i>n</i><sup>th</sup> term of the count-and-say sequence.\r\n</p>\n<p>\r\nNote: Each term of the sequence of integers will be represented as a string.\r\n</p>\n<p><b>Example 1:</b>\n<pre>\r\n<b>Input:</b> 1\r\n<b>Output:</b> "1"\r\n</pre>\n</p>\n<p><b>Example 2:</b>\n<pre>\r\n<b>Input:</b> 4\r\n<b>Output:</b> "1211"\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Write a program to solve a Sudoku puzzle by filling the empty cells.</p>\n<p>Empty cells are indicated by the character <code>\'.\'</code>.</p>\n<p>You may assume that there will be only one unique solution.</p></p></div>'


37 : sudoku-solver
36 : valid-sudoku


b'<div class="question-description">\n<p><p>Write a program to solve a Sudoku puzzle by filling the empty cells.</p>\n<p>Empty cells are indicated by the character <code>\'.\'</code>.</p>\n<p>You may assume that there will be only one unique solution.</p></p></div>'




b'<div class="question-description">\n<p><p>Determine if a Sudoku is valid, according to: <a href="http://sudoku.com.au/TheRules.aspx">Sudoku Puzzles - The Rules</a>.</p>\n<p>The Sudoku board could be partially filled, where empty cells are filled with the character <code>\'.\'</code>.</p>\n<p>\n<img src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png"><br/>\n<p style="font-size: 11px">A partially filled sudoku which is valid.</p>\n</img></p>\n<p><b>Note:</b><br/>\r\nA valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.\r\n</p></p>\n</div>'


36 : valid-sudoku
35 : search-insert-position


b'<div class="question-description">\n<p><p>Determine if a Sudoku is valid, according to: <a href="http://sudoku.com.au/TheRules.aspx">Sudoku Puzzles - The Rules</a>.</p>\n<p>The Sudoku board could be partially filled, where empty cells are filled with the character <code>\'.\'</code>.</p>\n<p>\n<img src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png"><br/>\n<p style="font-size: 11px">A partially filled sudoku which is valid.</p>\n</img></p>\n<p><b>Note:</b><br/>\r\nA valid Sudoku board (partially filled) is not necessarily solvable. Only the filled cells need to be validated.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p>\n<p>You may assume no duplicates in the array.</p>\n<p>\r\nHere are few examples.<br/>\n<code>[1,3,5,6]</code>, 5 \xe2\x86\x92 2<br/>\n<code>[1,3,5,6]</code>, 2 \xe2\x86\x92 1<br/>\n<code>[1,3,5,6]</code>, 7 \xe2\x86\x92 4<br/>\n<code>[1,3,5,6]</code>, 0 \xe2\x86\x92 0\r\n</p></p>\n</div>'


35 : search-insert-position
34 : search-for-a-range


b'<div class="question-description">\n<p><p>Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p>\n<p>You may assume no duplicates in the array.</p>\n<p>\r\nHere are few examples.<br/>\n<code>[1,3,5,6]</code>, 5 \xe2\x86\x92 2<br/>\n<code>[1,3,5,6]</code>, 2 \xe2\x86\x92 1<br/>\n<code>[1,3,5,6]</code>, 7 \xe2\x86\x92 4<br/>\n<code>[1,3,5,6]</code>, 0 \xe2\x86\x92 0\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array of integers sorted in ascending order, find the starting and ending position of a given target value.</p>\n<p>Your algorithm\'s runtime complexity must be in the order of <i>O</i>(log <i>n</i>).</p>\n<p>If the target is not found in the array, return <code>[-1, -1]</code>.</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>[5, 7, 7, 8, 8, 10]</code> and target value 8,<br/>\r\nreturn <code>[3, 4]</code>.\r\n</p></p>\n</div>'


34 : search-for-a-range
33 : search-in-rotated-sorted-array


b'<div class="question-description">\n<p><p>Given an array of integers sorted in ascending order, find the starting and ending position of a given target value.</p>\n<p>Your algorithm\'s runtime complexity must be in the order of <i>O</i>(log <i>n</i>).</p>\n<p>If the target is not found in the array, return <code>[-1, -1]</code>.</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>[5, 7, 7, 8, 8, 10]</code> and target value 8,<br/>\r\nreturn <code>[3, 4]</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n<p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p>\n<p>You are given a target value to search. If found in the array return its index, otherwise return -1.</p>\n<p>You may assume no duplicate exists in the array.</p></p>\n</div>'


33 : search-in-rotated-sorted-array
32 : longest-valid-parentheses


b'<div class="question-description">\n<p><p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n<p>(i.e., <code>0 1 2 4 5 6 7</code> might become <code>4 5 6 7 0 1 2</code>).</p>\n<p>You are given a target value to search. If found in the array return its index, otherwise return -1.</p>\n<p>You may assume no duplicate exists in the array.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string containing just the characters <code>\'(\'</code> and <code>\')\'</code>, find the length of the longest valid (well-formed) parentheses substring.\r\n</p>\n<p>\r\nFor <code>"(()"</code>, the longest valid parentheses substring is <code>"()"</code>, which has length = 2.\r\n</p>\n<p>\r\nAnother example is <code>")()())"</code>, where the longest valid parentheses substring is <code>"()()"</code>, which has length = 4.\r\n</p></p>\n</div>'


32 : longest-valid-parentheses
31 : next-permutation


b'<div class="question-description">\n<p><p>Given a string containing just the characters <code>\'(\'</code> and <code>\')\'</code>, find the length of the longest valid (well-formed) parentheses substring.\r\n</p>\n<p>\r\nFor <code>"(()"</code>, the longest valid parentheses substring is <code>"()"</code>, which has length = 2.\r\n</p>\n<p>\r\nAnother example is <code>")()())"</code>, where the longest valid parentheses substring is <code>"()()"</code>, which has length = 4.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nImplement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\r\n</p>\n<p>\r\nIf such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).\r\n</p>\n<p>\r\nThe replacement must be in-place, do not allocate extra memory.\r\n</p>\n<p>\r\nHere are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.<br/>\n<code>1,2,3</code> \xe2\x86\x92 <code>1,3,2</code><br/>\n<code>3,2,1</code> \xe2\x86\x92 <code>1,2,3</code><br/>\n<code>1,1,5</code> \xe2\x86\x92 <code>1,5,1</code><br/>\n</p></p>\n</div>'


31 : next-permutation
30 : substring-with-concatenation-of-all-words


b'<div class="question-description">\n<p><p>\r\nImplement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\r\n</p>\n<p>\r\nIf such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).\r\n</p>\n<p>\r\nThe replacement must be in-place, do not allocate extra memory.\r\n</p>\n<p>\r\nHere are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.<br/>\n<code>1,2,3</code> \xe2\x86\x92 <code>1,3,2</code><br/>\n<code>3,2,1</code> \xe2\x86\x92 <code>1,2,3</code><br/>\n<code>1,1,5</code> \xe2\x86\x92 <code>1,5,1</code><br/>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nYou are given a string, <b>s</b>, and a list of words, <b>words</b>, that are all of the same length. Find all starting indices of substring(s) in <b>s</b> that is a concatenation of each word in <b>words</b> exactly once and without any intervening characters.\r\n</p>\n<p>\r\nFor example, given:<br/>\n<b>s</b>: <code>"barfoothefoobarman"</code><br/>\n<b>words</b>: <code>["foo", "bar"]</code>\n</p>\n<p>\r\nYou should return the indices: <code>[0,9]</code>.<br/>\r\n(order does not matter).\r\n</p></p>\n</div>'


30 : substring-with-concatenation-of-all-words
29 : divide-two-integers


b'<div class="question-description">\n<p><p>\r\nYou are given a string, <b>s</b>, and a list of words, <b>words</b>, that are all of the same length. Find all starting indices of substring(s) in <b>s</b> that is a concatenation of each word in <b>words</b> exactly once and without any intervening characters.\r\n</p>\n<p>\r\nFor example, given:<br/>\n<b>s</b>: <code>"barfoothefoobarman"</code><br/>\n<b>words</b>: <code>["foo", "bar"]</code>\n</p>\n<p>\r\nYou should return the indices: <code>[0,9]</code>.<br/>\r\n(order does not matter).\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nDivide two integers without using multiplication, division and mod operator.\r\n</p>\n<p>\r\nIf it is overflow, return MAX_INT.\r\n</p></p>\n</div>'


29 : divide-two-integers
28 : implement-strstr


b'<div class="question-description">\n<p><p>\r\nDivide two integers without using multiplication, division and mod operator.\r\n</p>\n<p>\r\nIf it is overflow, return MAX_INT.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nImplement strStr().\r\n</p>\n<p>\r\nReturns the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\r\n</p></p>\n</div>'


28 : implement-strstr
27 : remove-element


b'<div class="question-description">\n<p><p>\r\nImplement strStr().\r\n</p>\n<p>\r\nReturns the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array and a value, remove all instances of that value in place and return the new length.\r\n</p>\n<p>Do not allocate extra space for another array, you must do this in place with constant memory.</p>\n<p>The order of elements can be changed. It doesn\'t matter what you leave beyond the new length.</p>\n<p>\n<b>Example:</b><br/>\r\nGiven input array <i>nums</i> = <code>[3,2,2,3]</code>, <i>val</i> = <code>3</code>\n</p>\n<p>Your function should return length = 2, with the first two elements of <i>nums</i> being 2.</p></p>\n</div>'


27 : remove-element
26 : remove-duplicates-from-sorted-array


b'<div class="question-description">\n<p><p>Given an array and a value, remove all instances of that value in place and return the new length.\r\n</p>\n<p>Do not allocate extra space for another array, you must do this in place with constant memory.</p>\n<p>The order of elements can be changed. It doesn\'t matter what you leave beyond the new length.</p>\n<p>\n<b>Example:</b><br/>\r\nGiven input array <i>nums</i> = <code>[3,2,2,3]</code>, <i>val</i> = <code>3</code>\n</p>\n<p>Your function should return length = 2, with the first two elements of <i>nums</i> being 2.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a sorted array, remove the duplicates in place such that each element appear only <i>once</i> and return the new length.</p>\n<p>\r\nDo not allocate extra space for another array, you must do this in place with constant memory.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven input array <i>nums</i> = <code>[1,1,2]</code>,\r\n</p>\n<p>\r\nYour function should return length = <code>2</code>, with the first two elements of <i>nums</i> being <code>1</code> and <code>2</code> respectively. It doesn\'t matter what you leave beyond the new length.\r\n</p></p>\n</div>'


26 : remove-duplicates-from-sorted-array
25 : reverse-nodes-in-k-group


b'<div class="question-description">\n<p><p>\r\nGiven a sorted array, remove the duplicates in place such that each element appear only <i>once</i> and return the new length.</p>\n<p>\r\nDo not allocate extra space for another array, you must do this in place with constant memory.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven input array <i>nums</i> = <code>[1,1,2]</code>,\r\n</p>\n<p>\r\nYour function should return length = <code>2</code>, with the first two elements of <i>nums</i> being <code>1</code> and <code>2</code> respectively. It doesn\'t matter what you leave beyond the new length.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a linked list, reverse the nodes of a linked list <i>k</i> at a time and return its modified list.\r\n</p>\n<p>\n<i>k</i> is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of <i>k</i> then left-out nodes in the end should remain as it is.</p>\n<p>You may not alter the values in the nodes, only nodes itself may be changed.</p>\n<p>Only constant memory is allowed.</p>\n<p>\r\nFor example,<br/>\r\nGiven this linked list: <code>1-&gt;2-&gt;3-&gt;4-&gt;5</code>\n</p>\n<p>\r\nFor <i>k</i> = 2, you should return: <code>2-&gt;1-&gt;4-&gt;3-&gt;5</code>\n</p>\n<p>\r\nFor <i>k</i> = 3, you should return: <code>3-&gt;2-&gt;1-&gt;4-&gt;5</code>\n</p></p>\n</div>'


25 : reverse-nodes-in-k-group
24 : swap-nodes-in-pairs


b'<div class="question-description">\n<p><p>\r\nGiven a linked list, reverse the nodes of a linked list <i>k</i> at a time and return its modified list.\r\n</p>\n<p>\n<i>k</i> is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of <i>k</i> then left-out nodes in the end should remain as it is.</p>\n<p>You may not alter the values in the nodes, only nodes itself may be changed.</p>\n<p>Only constant memory is allowed.</p>\n<p>\r\nFor example,<br/>\r\nGiven this linked list: <code>1-&gt;2-&gt;3-&gt;4-&gt;5</code>\n</p>\n<p>\r\nFor <i>k</i> = 2, you should return: <code>2-&gt;1-&gt;4-&gt;3-&gt;5</code>\n</p>\n<p>\r\nFor <i>k</i> = 3, you should return: <code>3-&gt;2-&gt;1-&gt;4-&gt;5</code>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven a linked list, swap every two adjacent nodes and return its head.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4</code>, you should return the list as <code>2-&gt;1-&gt;4-&gt;3</code>.\r\n</p>\n<p>\r\nYour algorithm should use only constant space. You may <b>not</b> modify the values in the list, only nodes itself can be changed.\r\n</p></p>\n</div>'


24 : swap-nodes-in-pairs
23 : merge-k-sorted-lists


b'<div class="question-description">\n<p><p>\r\nGiven a linked list, swap every two adjacent nodes and return its head.\r\n</p>\n<p>\r\nFor example,<br/>\r\nGiven <code>1-&gt;2-&gt;3-&gt;4</code>, you should return the list as <code>2-&gt;1-&gt;4-&gt;3</code>.\r\n</p>\n<p>\r\nYour algorithm should use only constant space. You may <b>not</b> modify the values in the list, only nodes itself can be changed.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nMerge <i>k</i> sorted linked lists and return it as one sorted list. Analyze and describe its complexity.\r\n</p></p>\n</div>'


23 : merge-k-sorted-lists
22 : generate-parentheses


b'<div class="question-description">\n<p><p>\r\nMerge <i>k</i> sorted linked lists and return it as one sorted list. Analyze and describe its complexity.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nGiven <i>n</i> pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\r\n</p>\n<p>\r\nFor example, given <i>n</i> = 3, a solution set is:\r\n</p>\n<pre>\r\n[\r\n  "((()))",\r\n  "(()())",\r\n  "(())()",\r\n  "()(())",\r\n  "()()()"\r\n]\r\n</pre></p>\n</div>'


22 : generate-parentheses
21 : merge-two-sorted-lists


b'<div class="question-description">\n<p><p>\r\nGiven <i>n</i> pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\r\n</p>\n<p>\r\nFor example, given <i>n</i> = 3, a solution set is:\r\n</p>\n<pre>\r\n[\r\n  "((()))",\r\n  "(()())",\r\n  "(())()",\r\n  "()(())",\r\n  "()()()"\r\n]\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.</p></p>\n</div>'


21 : merge-two-sorted-lists
20 : valid-parentheses


b'<div class="question-description">\n<p><p>Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string containing just the characters <code>\'(\'</code>, <code>\')\'</code>, <code>\'{\'</code>, <code>\'}\'</code>, <code>\'[\'</code> and <code>\']\'</code>, determine if the input string is valid.</p>\n<p>The brackets must close in the correct order, <code>"()"</code> and <code>"()[]{}"</code> are all valid but <code>"(]"</code> and <code>"([)]"</code> are not.</p>\n</p>\n</div>'


20 : valid-parentheses
19 : remove-nth-node-from-end-of-list


b'<div class="question-description">\n<p><p>Given a string containing just the characters <code>\'(\'</code>, <code>\')\'</code>, <code>\'{\'</code>, <code>\'}\'</code>, <code>\'[\'</code> and <code>\']\'</code>, determine if the input string is valid.</p>\n<p>The brackets must close in the correct order, <code>"()"</code> and <code>"()[]{}"</code> are all valid but <code>"(]"</code> and <code>"([)]"</code> are not.</p>\n</p>\n</div>'




b'<div class="question-description">\n<p><p>Given a linked list, remove the <i>n</i><sup>th</sup> node from the end of list and return its head.</p>\n<p>\r\nFor example,</p>\n<pre>\r\n   Given linked list: <b>1-&gt;2-&gt;3-&gt;4-&gt;5</b>, and <b><i>n</i> = 2</b>.\r\n\r\n   After removing the second node from the end, the linked list becomes <b>1-&gt;2-&gt;3-&gt;5</b>.\r\n</pre>\n<p>\n<b>Note:</b><br/>\r\nGiven <i>n</i> will always be valid.<br/>\r\nTry to do this in one pass.\r\n</p></p>\n</div>'


19 : remove-nth-node-from-end-of-list
18 : 4sum


b'<div class="question-description">\n<p><p>Given a linked list, remove the <i>n</i><sup>th</sup> node from the end of list and return its head.</p>\n<p>\r\nFor example,</p>\n<pre>\r\n   Given linked list: <b>1-&gt;2-&gt;3-&gt;4-&gt;5</b>, and <b><i>n</i> = 2</b>.\r\n\r\n   After removing the second node from the end, the linked list becomes <b>1-&gt;2-&gt;3-&gt;5</b>.\r\n</pre>\n<p>\n<b>Note:</b><br/>\r\nGiven <i>n</i> will always be valid.<br/>\r\nTry to do this in one pass.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array <i>S</i> of <i>n</i> integers, are there elements <i>a</i>, <i>b</i>, <i>c</i>, and <i>d</i> in <i>S</i> such that <i>a</i> + <i>b</i> + <i>c</i> + <i>d</i> = target? Find all unique quadruplets in the array which gives the sum of target.</p>\n<p><b>Note:</b> The solution set must not contain duplicate quadruplets.\r\n</p>\n<pre>\r\nFor example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.\r\n\r\nA solution set is:\r\n[\r\n  [-1,  0, 0, 1],\r\n  [-2, -1, 1, 2],\r\n  [-2,  0, 0, 2]\r\n]\r\n</pre></p>\n</div>'


18 : 4sum
17 : letter-combinations-of-a-phone-number


b'<div class="question-description">\n<p><p>Given an array <i>S</i> of <i>n</i> integers, are there elements <i>a</i>, <i>b</i>, <i>c</i>, and <i>d</i> in <i>S</i> such that <i>a</i> + <i>b</i> + <i>c</i> + <i>d</i> = target? Find all unique quadruplets in the array which gives the sum of target.</p>\n<p><b>Note:</b> The solution set must not contain duplicate quadruplets.\r\n</p>\n<pre>\r\nFor example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.\r\n\r\nA solution set is:\r\n[\r\n  [-1,  0, 0, 1],\r\n  [-2, -1, 1, 2],\r\n  [-2,  0, 0, 2]\r\n]\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a digit string, return all possible letter combinations that the number could represent.\r\n</p>\n<p>\r\nA mapping of digit to letters (just like on the telephone buttons) is given below.</p>\n<p><img src="http://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Telephone-keypad2.svg/200px-Telephone-keypad2.svg.png"/></p>\n<pre>\r\n<b>Input:</b>Digit string "23"\r\n<b>Output:</b> ["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].\r\n</pre>\n<p>\n<b>Note:</b><br/>\r\nAlthough the above answer is in lexicographical order, your answer could be in any order you want.\r\n</p></p>\n</div>'


17 : letter-combinations-of-a-phone-number
16 : 3sum-closest


b'<div class="question-description">\n<p><p>Given a digit string, return all possible letter combinations that the number could represent.\r\n</p>\n<p>\r\nA mapping of digit to letters (just like on the telephone buttons) is given below.</p>\n<p><img src="http://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Telephone-keypad2.svg/200px-Telephone-keypad2.svg.png"/></p>\n<pre>\r\n<b>Input:</b>Digit string "23"\r\n<b>Output:</b> ["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].\r\n</pre>\n<p>\n<b>Note:</b><br/>\r\nAlthough the above answer is in lexicographical order, your answer could be in any order you want.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array <i>S</i> of <i>n</i> integers, find three integers in <i>S</i> such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p>\n<pre>\r\n    For example, given array S = {-1 2 1 -4}, and target = 1.\r\n\r\n    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\r\n</pre></p>\n</div>'


16 : 3sum-closest
15 : 3sum


b'<div class="question-description">\n<p><p>Given an array <i>S</i> of <i>n</i> integers, find three integers in <i>S</i> such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p>\n<pre>\r\n    For example, given array S = {-1 2 1 -4}, and target = 1.\r\n\r\n    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array <i>S</i> of <i>n</i> integers, are there elements <i>a</i>, <i>b</i>, <i>c</i> in <i>S</i> such that <i>a</i> + <i>b</i> + <i>c</i> = 0? Find all unique triplets in the array which gives the sum of zero.</p>\n<p><b>Note:</b> The solution set must not contain duplicate triplets.</p>\n<pre>\r\nFor example, given array S = [-1, 0, 1, 2, -1, -4],\r\n\r\nA solution set is:\r\n[\r\n  [-1, 0, 1],\r\n  [-1, -1, 2]\r\n]\r\n</pre></p>\n</div>'


15 : 3sum
14 : longest-common-prefix


b'<div class="question-description">\n<p><p>Given an array <i>S</i> of <i>n</i> integers, are there elements <i>a</i>, <i>b</i>, <i>c</i> in <i>S</i> such that <i>a</i> + <i>b</i> + <i>c</i> = 0? Find all unique triplets in the array which gives the sum of zero.</p>\n<p><b>Note:</b> The solution set must not contain duplicate triplets.</p>\n<pre>\r\nFor example, given array S = [-1, 0, 1, 2, -1, -4],\r\n\r\nA solution set is:\r\n[\r\n  [-1, 0, 1],\r\n  [-1, -1, 2]\r\n]\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>Write a function to find the longest common prefix string amongst an array of strings.\r\n</p></p>\n</div>'


14 : longest-common-prefix
13 : roman-to-integer


b'<div class="question-description">\n<p><p>Write a function to find the longest common prefix string amongst an array of strings.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a roman numeral, convert it to an integer.</p>\n<p>Input is guaranteed to be within the range from 1 to 3999.</p></p>\n</div>'


13 : roman-to-integer
12 : integer-to-roman


b'<div class="question-description">\n<p><p>Given a roman numeral, convert it to an integer.</p>\n<p>Input is guaranteed to be within the range from 1 to 3999.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an integer, convert it to a roman numeral.\r\n</p>\n<p>Input is guaranteed to be within the range from 1 to 3999.</p></p>\n</div>'


12 : integer-to-roman
11 : container-with-most-water


b'<div class="question-description">\n<p><p>Given an integer, convert it to a roman numeral.\r\n</p>\n<p>Input is guaranteed to be within the range from 1 to 3999.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given <i>n</i> non-negative integers <i>a<sub>1</sub></i>, <i>a<sub>2</sub></i>, ..., <i>a<sub>n</sub></i>, where each represents a point at coordinate (<i>i</i>, <i>a<sub>i</sub></i>). <i>n</i> vertical lines are drawn such that the two endpoints of line <i>i</i> is at (<i>i</i>, <i>a<sub>i</sub></i>) and (<i>i</i>, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\r\n</p>\n<p>Note: You may not slant the container and <i>n</i> is at least 2.\r\n</p></p>\n</div>'


11 : container-with-most-water
10 : regular-expression-matching


b'<div class="question-description">\n<p><p>Given <i>n</i> non-negative integers <i>a<sub>1</sub></i>, <i>a<sub>2</sub></i>, ..., <i>a<sub>n</sub></i>, where each represents a point at coordinate (<i>i</i>, <i>a<sub>i</sub></i>). <i>n</i> vertical lines are drawn such that the two endpoints of line <i>i</i> is at (<i>i</i>, <i>a<sub>i</sub></i>) and (<i>i</i>, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\r\n</p>\n<p>Note: You may not slant the container and <i>n</i> is at least 2.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Implement regular expression matching with support for <code>\'.\'</code> and <code>\'*\'</code>.</p>\n<pre>\r\n\'.\' Matches any single character.\r\n\'*\' Matches zero or more of the preceding element.\r\n\r\nThe matching should cover the <b>entire</b> input string (not partial).\r\n\r\nThe function prototype should be:\r\nbool isMatch(const char *s, const char *p)\r\n\r\nSome examples:\r\nisMatch("aa","a") ? false\r\nisMatch("aa","aa") ? true\r\nisMatch("aaa","aa") ? false\r\nisMatch("aa", "a*") ? true\r\nisMatch("aa", ".*") ? true\r\nisMatch("ab", ".*") ? true\r\nisMatch("aab", "c*a*b") ? true\r\n</pre></p>\n</div>'


10 : regular-expression-matching
9 : palindrome-number


b'<div class="question-description">\n<p><p>Implement regular expression matching with support for <code>\'.\'</code> and <code>\'*\'</code>.</p>\n<pre>\r\n\'.\' Matches any single character.\r\n\'*\' Matches zero or more of the preceding element.\r\n\r\nThe matching should cover the <b>entire</b> input string (not partial).\r\n\r\nThe function prototype should be:\r\nbool isMatch(const char *s, const char *p)\r\n\r\nSome examples:\r\nisMatch("aa","a") ? false\r\nisMatch("aa","aa") ? true\r\nisMatch("aaa","aa") ? false\r\nisMatch("aa", "a*") ? true\r\nisMatch("aa", ".*") ? true\r\nisMatch("ab", ".*") ? true\r\nisMatch("aab", "c*a*b") ? true\r\n</pre></p>\n</div>'




b'<div class="question-description">\n<p><p>Determine whether an integer is a palindrome. Do this without extra space.</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show spoilers.</a></p>\n<div class="spoilers"><b>Some hints:</b>\n<p>Could negative integers be palindromes? (ie, -1)</p>\n<p>If you are thinking of converting the integer to string, note the restriction of using extra space.</p>\n<p>You could also try reversing an integer. However, if you have solved the problem "Reverse Integer", you know that the reversed integer might overflow. How would you handle such case?</p>\n<p>There is a more generic way of solving this problem.</p>\n</div></p>\n</div>'


9 : palindrome-number
8 : string-to-integer-atoi


b'<div class="question-description">\n<p><p>Determine whether an integer is a palindrome. Do this without extra space.</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show spoilers.</a></p>\n<div class="spoilers"><b>Some hints:</b>\n<p>Could negative integers be palindromes? (ie, -1)</p>\n<p>If you are thinking of converting the integer to string, note the restriction of using extra space.</p>\n<p>You could also try reversing an integer. However, if you have solved the problem "Reverse Integer", you know that the reversed integer might overflow. How would you handle such case?</p>\n<p>There is a more generic way of solving this problem.</p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>Implement <span style="font-family:monospace">atoi</span> to convert a string to an integer.</p>\n<p><b>Hint:</b> Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.</p>\n<p>\n<b>Notes:</b> \r\nIt is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front. </p>\n<p>\n<b><font color="red">Update (2015-02-10):</font></b><br/>\r\nThe signature of the <code>C++</code> function had been updated. If you still see your function signature accepts a <code>const char *</code> argument, please click the reload button <span class="glyphicon glyphicon-refresh"></span> to reset your code definition.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">spoilers alert... click to show requirements for atoi.</a></p>\n<div class="spoilers"><b>Requirements for atoi:</b>\n<p>The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.</p>\n<p>The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.</p>\n<p>If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.</p>\n<p>If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.\r\n</p>\n</div></p>\n</div>'


8 : string-to-integer-atoi
7 : reverse-integer


b'<div class="question-description">\n<p><p>Implement <span style="font-family:monospace">atoi</span> to convert a string to an integer.</p>\n<p><b>Hint:</b> Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.</p>\n<p>\n<b>Notes:</b> \r\nIt is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front. </p>\n<p>\n<b><font color="red">Update (2015-02-10):</font></b><br/>\r\nThe signature of the <code>C++</code> function had been updated. If you still see your function signature accepts a <code>const char *</code> argument, please click the reload button <span class="glyphicon glyphicon-refresh"></span> to reset your code definition.\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">spoilers alert... click to show requirements for atoi.</a></p>\n<div class="spoilers"><b>Requirements for atoi:</b>\n<p>The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.</p>\n<p>The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.</p>\n<p>If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.</p>\n<p>If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.\r\n</p>\n</div></p>\n</div>'




b'<div class="question-description">\n<p><p>Reverse digits of an integer.</p>\n<p style="font-family:monospace">\n<b>Example1:</b> x =  123, return  321<br/>\n<b>Example2:</b> x = -123, return -321\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show spoilers.</a></p>\n<div class="spoilers"><b>Have you thought about this?</b>\n<p>Here are some good questions to ask before coding. Bonus points for you if you have already thought through this!</p>\n<p>If the integer\'s last digit is 0, what should the output be? ie, cases such as 10, 100.</p>\n<p>Did you notice that the reversed integer might overflow? Assume the input is a 32-bit integer, then the reverse of 1000000003 overflows. How should you handle such cases?</p>\n<p>For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.</p>\n</div>\n<p>\n<b><font color="red">Note:</font></b><br/>\r\nThe input is assumed to be a 32-bit signed integer. Your function should <b>return 0 when the reversed integer overflows</b>.\r\n</p></p>\n</div>'


7 : reverse-integer
6 : zigzag-conversion


b'<div class="question-description">\n<p><p>Reverse digits of an integer.</p>\n<p style="font-family:monospace">\n<b>Example1:</b> x =  123, return  321<br/>\n<b>Example2:</b> x = -123, return -321\r\n</p>\n<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">click to show spoilers.</a></p>\n<div class="spoilers"><b>Have you thought about this?</b>\n<p>Here are some good questions to ask before coding. Bonus points for you if you have already thought through this!</p>\n<p>If the integer\'s last digit is 0, what should the output be? ie, cases such as 10, 100.</p>\n<p>Did you notice that the reversed integer might overflow? Assume the input is a 32-bit integer, then the reverse of 1000000003 overflows. How should you handle such cases?</p>\n<p>For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.</p>\n</div>\n<p>\n<b><font color="red">Note:</font></b><br/>\r\nThe input is assumed to be a 32-bit signed integer. Your function should <b>return 0 when the reversed integer overflows</b>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>\r\nThe string <code>"PAYPALISHIRING"</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\r\n<pre>\r\nP   A   H   N\r\nA P L S I I G\r\nY   I   R\r\n</pre>\r\n\r\nAnd then read line by line: <code>"PAHNAPLSIIGYIR"</code></p>\n<p>\r\nWrite the code that will take a string and make this conversion given a number of rows:\r\n\r\n<pre>string convert(string text, int nRows);</pre>\n<code>convert("PAYPALISHIRING", 3)</code> should return <code>"PAHNAPLSIIGYIR"</code>.\r\n</p></p>\n</div>'


6 : zigzag-conversion
5 : longest-palindromic-substring


b'<div class="question-description">\n<p><p>Given a string <b>s</b>, find the longest palindromic substring in <b>s</b>. You may assume that the maximum length of <b>s</b> is 1000.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b> "babad"\r\n\r\n<b>Output:</b> "bab"\r\n\r\n<b>Note:</b> "aba" is also a valid answer.\r\n</pre>\n</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b> "cbbd"\r\n\r\n<b>Output:</b> "bb"\r\n</pre>\n</p></p>\n</div>'


5 : longest-palindromic-substring
4 : median-of-two-sorted-arrays


b'<div class="question-description">\n<p><p>\r\nThe string <code>"PAYPALISHIRING"</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\r\n<pre>\r\nP   A   H   N\r\nA P L S I I G\r\nY   I   R\r\n</pre>\r\n\r\nAnd then read line by line: <code>"PAHNAPLSIIGYIR"</code></p>\n<p>\r\nWrite the code that will take a string and make this conversion given a number of rows:\r\n\r\n<pre>string convert(string text, int nRows);</pre>\n<code>convert("PAYPALISHIRING", 3)</code> should return <code>"PAHNAPLSIIGYIR"</code>.\r\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>There are two sorted arrays <b>nums1</b> and <b>nums2</b> of size m and n respectively.</p>\n<p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\nnums1 = [1, 3]\r\nnums2 = [2]\r\n\r\nThe median is 2.0\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\nnums1 = [1, 2]\r\nnums2 = [3, 4]\r\n\r\nThe median is (2 + 3)/2 = 2.5\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string <b>s</b>, find the longest palindromic substring in <b>s</b>. You may assume that the maximum length of <b>s</b> is 1000.</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b> "babad"\r\n\r\n<b>Output:</b> "bab"\r\n\r\n<b>Note:</b> "aba" is also a valid answer.\r\n</pre>\n</p>\n<p><b>Example:</b>\n<pre>\r\n<b>Input:</b> "cbbd"\r\n\r\n<b>Output:</b> "bb"\r\n</pre>\n</p></p>\n</div>'


4 : median-of-two-sorted-arrays
3 : longest-substring-without-repeating-characters


b'<div class="question-description">\n<p><p>There are two sorted arrays <b>nums1</b> and <b>nums2</b> of size m and n respectively.</p>\n<p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p>\n<p><b>Example 1:</b><br/>\n<pre>\r\nnums1 = [1, 3]\r\nnums2 = [2]\r\n\r\nThe median is 2.0\r\n</pre>\n</p>\n<p><b>Example 2:</b><br/>\n<pre>\r\nnums1 = [1, 2]\r\nnums2 = [3, 4]\r\n\r\nThe median is (2 + 3)/2 = 2.5\r\n</pre>\n</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given a string, find the length of the <b>longest substring</b> without repeating characters.</p>\n<p><b>Examples:</b></p>\n<p>Given <code>"abcabcbb"</code>, the answer is <code>"abc"</code>, which the length is 3.</p>\n<p>Given <code>"bbbbb"</code>, the answer is <code>"b"</code>, with the length of 1.</p>\n<p>Given <code>"pwwkew"</code>, the answer is <code>"wke"</code>, with the length of 3. Note that the answer must be a <b>substring</b>, <code>"pwke"</code> is a <i>subsequence</i> and not a substring.</p></p>\n</div>'


3 : longest-substring-without-repeating-characters
2 : add-two-numbers


b'<div class="question-description">\n<p><p>Given a string, find the length of the <b>longest substring</b> without repeating characters.</p>\n<p><b>Examples:</b></p>\n<p>Given <code>"abcabcbb"</code>, the answer is <code>"abc"</code>, which the length is 3.</p>\n<p>Given <code>"bbbbb"</code>, the answer is <code>"b"</code>, with the length of 1.</p>\n<p>Given <code>"pwwkew"</code>, the answer is <code>"wke"</code>, with the length of 3. Note that the answer must be a <b>substring</b>, <code>"pwke"</code> is a <i>subsequence</i> and not a substring.</p></p>\n</div>'




b'<div class="question-description">\n<p><p>You are given two <b>non-empty</b> linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n<p style="font-family:monospace">\n<b>Input:</b> (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br/>\n<b>Output:</b> 7 -&gt; 0 -&gt; 8</p></p>\n</div>'


2 : add-two-numbers
1 : two-sum


b'<div class="question-description">\n<p><p>Given an array of integers, return <b>indices</b> of the two numbers such that they add up to a specific target.</p>\n<p>You may assume that each input would have <b><i>exactly</i></b> one solution, and you may not use the <i>same</i> element twice.</p>\n<p>\n<b>Example:</b><br/>\n<pre>\r\nGiven nums = [2, 7, 11, 15], target = 9,\r\n\r\nBecause nums[<b>0</b>] + nums[<b>1</b>] = 2 + 7 = 9,\r\nreturn [<b>0</b>, <b>1</b>].\r\n</pre>\n</p></p>\n</div>'


1 : two-sum


b'<div class="question-description">\n<p><p>You are given two <b>non-empty</b> linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n<p style="font-family:monospace">\n<b>Input:</b> (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br/>\n<b>Output:</b> 7 -&gt; 0 -&gt; 8</p></p>\n</div>'




b'<div class="question-description">\n<p><p>Given an array of integers, return <b>indices</b> of the two numbers such that they add up to a specific target.</p>\n<p>You may assume that each input would have <b><i>exactly</i></b> one solution, and you may not use the <i>same</i> element twice.</p>\n<p>\n<b>Example:</b><br/>\n<pre>\r\nGiven nums = [2, 7, 11, 15], target = 9,\r\n\r\nBecause nums[<b>0</b>] + nums[<b>1</b>] = 2 + 7 = 9,\r\nreturn [<b>0</b>, <b>1</b>].\r\n</pre>\n</p></p>\n</div>'


